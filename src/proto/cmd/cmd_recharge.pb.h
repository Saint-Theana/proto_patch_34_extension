// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_recharge.proto

#ifndef PROTOBUF_cmd_2fcmd_5frecharge_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5frecharge_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class CardProductRewardNotify;
class CardProductRewardNotifyDefaultTypeInternal;
extern CardProductRewardNotifyDefaultTypeInternal _CardProductRewardNotify_default_instance_;
class OrderDisplayNotify;
class OrderDisplayNotifyDefaultTypeInternal;
extern OrderDisplayNotifyDefaultTypeInternal _OrderDisplayNotify_default_instance_;
class OrderFinishNotify;
class OrderFinishNotifyDefaultTypeInternal;
extern OrderFinishNotifyDefaultTypeInternal _OrderFinishNotify_default_instance_;
class PlayerRechargeDataNotify;
class PlayerRechargeDataNotifyDefaultTypeInternal;
extern PlayerRechargeDataNotifyDefaultTypeInternal _PlayerRechargeDataNotify_default_instance_;
class ProductPriceTier;
class ProductPriceTierDefaultTypeInternal;
extern ProductPriceTierDefaultTypeInternal _ProductPriceTier_default_instance_;
class RechargeReq;
class RechargeReqDefaultTypeInternal;
extern RechargeReqDefaultTypeInternal _RechargeReq_default_instance_;
class RechargeRsp;
class RechargeRspDefaultTypeInternal;
extern RechargeRspDefaultTypeInternal _RechargeRsp_default_instance_;
class ReportTrackingIOInfoNotify;
class ReportTrackingIOInfoNotifyDefaultTypeInternal;
extern ReportTrackingIOInfoNotifyDefaultTypeInternal _ReportTrackingIOInfoNotify_default_instance_;
class ResinCardData;
class ResinCardDataDefaultTypeInternal;
extern ResinCardDataDefaultTypeInternal _ResinCardData_default_instance_;
class ResinCardDataUpdateNotify;
class ResinCardDataUpdateNotifyDefaultTypeInternal;
extern ResinCardDataUpdateNotifyDefaultTypeInternal _ResinCardDataUpdateNotify_default_instance_;
class TakeResinCardDailyRewardReq;
class TakeResinCardDailyRewardReqDefaultTypeInternal;
extern TakeResinCardDailyRewardReqDefaultTypeInternal _TakeResinCardDailyRewardReq_default_instance_;
class TakeResinCardDailyRewardRsp;
class TakeResinCardDailyRewardRspDefaultTypeInternal;
extern TakeResinCardDailyRewardRspDefaultTypeInternal _TakeResinCardDailyRewardRsp_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5frecharge_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5frecharge_2eproto

enum RechargeReq_CmdId {
  RechargeReq_CmdId_NONE = 0,
  RechargeReq_CmdId_CMD_ID = 4126,
  RechargeReq_CmdId_ENET_CHANNEL_ID = 0,
  RechargeReq_CmdId_ENET_IS_RELIABLE = 1,
  RechargeReq_CmdId_IS_ALLOW_CLIENT = 1,
  RechargeReq_CmdId_RechargeReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RechargeReq_CmdId_RechargeReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RechargeReq_CmdId_IsValid(int value);
const RechargeReq_CmdId RechargeReq_CmdId_CmdId_MIN = RechargeReq_CmdId_NONE;
const RechargeReq_CmdId RechargeReq_CmdId_CmdId_MAX = RechargeReq_CmdId_CMD_ID;
const int RechargeReq_CmdId_CmdId_ARRAYSIZE = RechargeReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* RechargeReq_CmdId_descriptor();
inline const ::std::string& RechargeReq_CmdId_Name(RechargeReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    RechargeReq_CmdId_descriptor(), value);
}
inline bool RechargeReq_CmdId_Parse(
    const ::std::string& name, RechargeReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RechargeReq_CmdId>(
    RechargeReq_CmdId_descriptor(), name, value);
}
enum RechargeRsp_CmdId {
  RechargeRsp_CmdId_NONE = 0,
  RechargeRsp_CmdId_CMD_ID = 4118,
  RechargeRsp_CmdId_ENET_CHANNEL_ID = 0,
  RechargeRsp_CmdId_ENET_IS_RELIABLE = 1,
  RechargeRsp_CmdId_RechargeRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RechargeRsp_CmdId_RechargeRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RechargeRsp_CmdId_IsValid(int value);
const RechargeRsp_CmdId RechargeRsp_CmdId_CmdId_MIN = RechargeRsp_CmdId_NONE;
const RechargeRsp_CmdId RechargeRsp_CmdId_CmdId_MAX = RechargeRsp_CmdId_CMD_ID;
const int RechargeRsp_CmdId_CmdId_ARRAYSIZE = RechargeRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* RechargeRsp_CmdId_descriptor();
inline const ::std::string& RechargeRsp_CmdId_Name(RechargeRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    RechargeRsp_CmdId_descriptor(), value);
}
inline bool RechargeRsp_CmdId_Parse(
    const ::std::string& name, RechargeRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RechargeRsp_CmdId>(
    RechargeRsp_CmdId_descriptor(), name, value);
}
enum OrderFinishNotify_CmdId {
  OrderFinishNotify_CmdId_NONE = 0,
  OrderFinishNotify_CmdId_CMD_ID = 4125,
  OrderFinishNotify_CmdId_ENET_CHANNEL_ID = 0,
  OrderFinishNotify_CmdId_ENET_IS_RELIABLE = 1,
  OrderFinishNotify_CmdId_OrderFinishNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OrderFinishNotify_CmdId_OrderFinishNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OrderFinishNotify_CmdId_IsValid(int value);
const OrderFinishNotify_CmdId OrderFinishNotify_CmdId_CmdId_MIN = OrderFinishNotify_CmdId_NONE;
const OrderFinishNotify_CmdId OrderFinishNotify_CmdId_CmdId_MAX = OrderFinishNotify_CmdId_CMD_ID;
const int OrderFinishNotify_CmdId_CmdId_ARRAYSIZE = OrderFinishNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* OrderFinishNotify_CmdId_descriptor();
inline const ::std::string& OrderFinishNotify_CmdId_Name(OrderFinishNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    OrderFinishNotify_CmdId_descriptor(), value);
}
inline bool OrderFinishNotify_CmdId_Parse(
    const ::std::string& name, OrderFinishNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrderFinishNotify_CmdId>(
    OrderFinishNotify_CmdId_descriptor(), name, value);
}
enum CardProductRewardNotify_CmdId {
  CardProductRewardNotify_CmdId_NONE = 0,
  CardProductRewardNotify_CmdId_CMD_ID = 4107,
  CardProductRewardNotify_CmdId_ENET_CHANNEL_ID = 0,
  CardProductRewardNotify_CmdId_ENET_IS_RELIABLE = 1,
  CardProductRewardNotify_CmdId_CardProductRewardNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CardProductRewardNotify_CmdId_CardProductRewardNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CardProductRewardNotify_CmdId_IsValid(int value);
const CardProductRewardNotify_CmdId CardProductRewardNotify_CmdId_CmdId_MIN = CardProductRewardNotify_CmdId_NONE;
const CardProductRewardNotify_CmdId CardProductRewardNotify_CmdId_CmdId_MAX = CardProductRewardNotify_CmdId_CMD_ID;
const int CardProductRewardNotify_CmdId_CmdId_ARRAYSIZE = CardProductRewardNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CardProductRewardNotify_CmdId_descriptor();
inline const ::std::string& CardProductRewardNotify_CmdId_Name(CardProductRewardNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CardProductRewardNotify_CmdId_descriptor(), value);
}
inline bool CardProductRewardNotify_CmdId_Parse(
    const ::std::string& name, CardProductRewardNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CardProductRewardNotify_CmdId>(
    CardProductRewardNotify_CmdId_descriptor(), name, value);
}
enum PlayerRechargeDataNotify_CmdId {
  PlayerRechargeDataNotify_CmdId_NONE = 0,
  PlayerRechargeDataNotify_CmdId_CMD_ID = 4102,
  PlayerRechargeDataNotify_CmdId_ENET_CHANNEL_ID = 0,
  PlayerRechargeDataNotify_CmdId_ENET_IS_RELIABLE = 1,
  PlayerRechargeDataNotify_CmdId_PlayerRechargeDataNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerRechargeDataNotify_CmdId_PlayerRechargeDataNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerRechargeDataNotify_CmdId_IsValid(int value);
const PlayerRechargeDataNotify_CmdId PlayerRechargeDataNotify_CmdId_CmdId_MIN = PlayerRechargeDataNotify_CmdId_NONE;
const PlayerRechargeDataNotify_CmdId PlayerRechargeDataNotify_CmdId_CmdId_MAX = PlayerRechargeDataNotify_CmdId_CMD_ID;
const int PlayerRechargeDataNotify_CmdId_CmdId_ARRAYSIZE = PlayerRechargeDataNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerRechargeDataNotify_CmdId_descriptor();
inline const ::std::string& PlayerRechargeDataNotify_CmdId_Name(PlayerRechargeDataNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerRechargeDataNotify_CmdId_descriptor(), value);
}
inline bool PlayerRechargeDataNotify_CmdId_Parse(
    const ::std::string& name, PlayerRechargeDataNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerRechargeDataNotify_CmdId>(
    PlayerRechargeDataNotify_CmdId_descriptor(), name, value);
}
enum OrderDisplayNotify_CmdId {
  OrderDisplayNotify_CmdId_NONE = 0,
  OrderDisplayNotify_CmdId_CMD_ID = 4131,
  OrderDisplayNotify_CmdId_ENET_CHANNEL_ID = 0,
  OrderDisplayNotify_CmdId_ENET_IS_RELIABLE = 1,
  OrderDisplayNotify_CmdId_IS_ALLOW_CLIENT = 1,
  OrderDisplayNotify_CmdId_OrderDisplayNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OrderDisplayNotify_CmdId_OrderDisplayNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OrderDisplayNotify_CmdId_IsValid(int value);
const OrderDisplayNotify_CmdId OrderDisplayNotify_CmdId_CmdId_MIN = OrderDisplayNotify_CmdId_NONE;
const OrderDisplayNotify_CmdId OrderDisplayNotify_CmdId_CmdId_MAX = OrderDisplayNotify_CmdId_CMD_ID;
const int OrderDisplayNotify_CmdId_CmdId_ARRAYSIZE = OrderDisplayNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* OrderDisplayNotify_CmdId_descriptor();
inline const ::std::string& OrderDisplayNotify_CmdId_Name(OrderDisplayNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    OrderDisplayNotify_CmdId_descriptor(), value);
}
inline bool OrderDisplayNotify_CmdId_Parse(
    const ::std::string& name, OrderDisplayNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrderDisplayNotify_CmdId>(
    OrderDisplayNotify_CmdId_descriptor(), name, value);
}
enum ReportTrackingIOInfoNotify_CmdId {
  ReportTrackingIOInfoNotify_CmdId_NONE = 0,
  ReportTrackingIOInfoNotify_CmdId_CMD_ID = 4129,
  ReportTrackingIOInfoNotify_CmdId_ENET_CHANNEL_ID = 0,
  ReportTrackingIOInfoNotify_CmdId_ENET_IS_RELIABLE = 1,
  ReportTrackingIOInfoNotify_CmdId_IS_ALLOW_CLIENT = 1,
  ReportTrackingIOInfoNotify_CmdId_ReportTrackingIOInfoNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReportTrackingIOInfoNotify_CmdId_ReportTrackingIOInfoNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReportTrackingIOInfoNotify_CmdId_IsValid(int value);
const ReportTrackingIOInfoNotify_CmdId ReportTrackingIOInfoNotify_CmdId_CmdId_MIN = ReportTrackingIOInfoNotify_CmdId_NONE;
const ReportTrackingIOInfoNotify_CmdId ReportTrackingIOInfoNotify_CmdId_CmdId_MAX = ReportTrackingIOInfoNotify_CmdId_CMD_ID;
const int ReportTrackingIOInfoNotify_CmdId_CmdId_ARRAYSIZE = ReportTrackingIOInfoNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReportTrackingIOInfoNotify_CmdId_descriptor();
inline const ::std::string& ReportTrackingIOInfoNotify_CmdId_Name(ReportTrackingIOInfoNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReportTrackingIOInfoNotify_CmdId_descriptor(), value);
}
inline bool ReportTrackingIOInfoNotify_CmdId_Parse(
    const ::std::string& name, ReportTrackingIOInfoNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReportTrackingIOInfoNotify_CmdId>(
    ReportTrackingIOInfoNotify_CmdId_descriptor(), name, value);
}
enum TakeResinCardDailyRewardReq_CmdId {
  TakeResinCardDailyRewardReq_CmdId_NONE = 0,
  TakeResinCardDailyRewardReq_CmdId_CMD_ID = 4122,
  TakeResinCardDailyRewardReq_CmdId_ENET_CHANNEL_ID = 0,
  TakeResinCardDailyRewardReq_CmdId_ENET_IS_RELIABLE = 1,
  TakeResinCardDailyRewardReq_CmdId_IS_ALLOW_CLIENT = 1,
  TakeResinCardDailyRewardReq_CmdId_TakeResinCardDailyRewardReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TakeResinCardDailyRewardReq_CmdId_TakeResinCardDailyRewardReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TakeResinCardDailyRewardReq_CmdId_IsValid(int value);
const TakeResinCardDailyRewardReq_CmdId TakeResinCardDailyRewardReq_CmdId_CmdId_MIN = TakeResinCardDailyRewardReq_CmdId_NONE;
const TakeResinCardDailyRewardReq_CmdId TakeResinCardDailyRewardReq_CmdId_CmdId_MAX = TakeResinCardDailyRewardReq_CmdId_CMD_ID;
const int TakeResinCardDailyRewardReq_CmdId_CmdId_ARRAYSIZE = TakeResinCardDailyRewardReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TakeResinCardDailyRewardReq_CmdId_descriptor();
inline const ::std::string& TakeResinCardDailyRewardReq_CmdId_Name(TakeResinCardDailyRewardReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TakeResinCardDailyRewardReq_CmdId_descriptor(), value);
}
inline bool TakeResinCardDailyRewardReq_CmdId_Parse(
    const ::std::string& name, TakeResinCardDailyRewardReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TakeResinCardDailyRewardReq_CmdId>(
    TakeResinCardDailyRewardReq_CmdId_descriptor(), name, value);
}
enum TakeResinCardDailyRewardRsp_CmdId {
  TakeResinCardDailyRewardRsp_CmdId_NONE = 0,
  TakeResinCardDailyRewardRsp_CmdId_CMD_ID = 4144,
  TakeResinCardDailyRewardRsp_CmdId_ENET_CHANNEL_ID = 0,
  TakeResinCardDailyRewardRsp_CmdId_ENET_IS_RELIABLE = 1,
  TakeResinCardDailyRewardRsp_CmdId_TakeResinCardDailyRewardRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TakeResinCardDailyRewardRsp_CmdId_TakeResinCardDailyRewardRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TakeResinCardDailyRewardRsp_CmdId_IsValid(int value);
const TakeResinCardDailyRewardRsp_CmdId TakeResinCardDailyRewardRsp_CmdId_CmdId_MIN = TakeResinCardDailyRewardRsp_CmdId_NONE;
const TakeResinCardDailyRewardRsp_CmdId TakeResinCardDailyRewardRsp_CmdId_CmdId_MAX = TakeResinCardDailyRewardRsp_CmdId_CMD_ID;
const int TakeResinCardDailyRewardRsp_CmdId_CmdId_ARRAYSIZE = TakeResinCardDailyRewardRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TakeResinCardDailyRewardRsp_CmdId_descriptor();
inline const ::std::string& TakeResinCardDailyRewardRsp_CmdId_Name(TakeResinCardDailyRewardRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TakeResinCardDailyRewardRsp_CmdId_descriptor(), value);
}
inline bool TakeResinCardDailyRewardRsp_CmdId_Parse(
    const ::std::string& name, TakeResinCardDailyRewardRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TakeResinCardDailyRewardRsp_CmdId>(
    TakeResinCardDailyRewardRsp_CmdId_descriptor(), name, value);
}
enum ResinCardDataUpdateNotify_CmdId {
  ResinCardDataUpdateNotify_CmdId_NONE = 0,
  ResinCardDataUpdateNotify_CmdId_CMD_ID = 4149,
  ResinCardDataUpdateNotify_CmdId_ENET_CHANNEL_ID = 0,
  ResinCardDataUpdateNotify_CmdId_ENET_IS_RELIABLE = 1,
  ResinCardDataUpdateNotify_CmdId_ResinCardDataUpdateNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ResinCardDataUpdateNotify_CmdId_ResinCardDataUpdateNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ResinCardDataUpdateNotify_CmdId_IsValid(int value);
const ResinCardDataUpdateNotify_CmdId ResinCardDataUpdateNotify_CmdId_CmdId_MIN = ResinCardDataUpdateNotify_CmdId_NONE;
const ResinCardDataUpdateNotify_CmdId ResinCardDataUpdateNotify_CmdId_CmdId_MAX = ResinCardDataUpdateNotify_CmdId_CMD_ID;
const int ResinCardDataUpdateNotify_CmdId_CmdId_ARRAYSIZE = ResinCardDataUpdateNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResinCardDataUpdateNotify_CmdId_descriptor();
inline const ::std::string& ResinCardDataUpdateNotify_CmdId_Name(ResinCardDataUpdateNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResinCardDataUpdateNotify_CmdId_descriptor(), value);
}
inline bool ResinCardDataUpdateNotify_CmdId_Parse(
    const ::std::string& name, ResinCardDataUpdateNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResinCardDataUpdateNotify_CmdId>(
    ResinCardDataUpdateNotify_CmdId_descriptor(), name, value);
}
// ===================================================================

class RechargeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RechargeReq) */ {
 public:
  RechargeReq();
  virtual ~RechargeReq();

  RechargeReq(const RechargeReq& from);

  inline RechargeReq& operator=(const RechargeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RechargeReq(RechargeReq&& from) noexcept
    : RechargeReq() {
    *this = ::std::move(from);
  }

  inline RechargeReq& operator=(RechargeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RechargeReq& default_instance();

  static inline const RechargeReq* internal_default_instance() {
    return reinterpret_cast<const RechargeReq*>(
               &_RechargeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RechargeReq* other);
  friend void swap(RechargeReq& a, RechargeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RechargeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RechargeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RechargeReq& from);
  void MergeFrom(const RechargeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RechargeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RechargeReq_CmdId CmdId;
  static const CmdId NONE =
    RechargeReq_CmdId_NONE;
  static const CmdId CMD_ID =
    RechargeReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    RechargeReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    RechargeReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    RechargeReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return RechargeReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    RechargeReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    RechargeReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    RechargeReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return RechargeReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return RechargeReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return RechargeReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.ShopConcertProduct concert_product = 7;
  bool has_concert_product() const;
  void clear_concert_product();
  static const int kConcertProductFieldNumber = 7;
  const ::proto::ShopConcertProduct& concert_product() const;
  ::proto::ShopConcertProduct* mutable_concert_product();
  ::proto::ShopConcertProduct* release_concert_product();
  void set_allocated_concert_product(::proto::ShopConcertProduct* concert_product);

  // .proto.ShopCardProduct card_product = 8;
  bool has_card_product() const;
  void clear_card_product();
  static const int kCardProductFieldNumber = 8;
  const ::proto::ShopCardProduct& card_product() const;
  ::proto::ShopCardProduct* mutable_card_product();
  ::proto::ShopCardProduct* release_card_product();
  void set_allocated_card_product(::proto::ShopCardProduct* card_product);

  // .proto.PlayProduct play_product = 10;
  bool has_play_product() const;
  void clear_play_product();
  static const int kPlayProductFieldNumber = 10;
  const ::proto::PlayProduct& play_product() const;
  ::proto::PlayProduct* mutable_play_product();
  ::proto::PlayProduct* release_play_product();
  void set_allocated_play_product(::proto::PlayProduct* play_product);

  // .proto.ShopMcoinProduct mcoin_product = 14;
  bool has_mcoin_product() const;
  void clear_mcoin_product();
  static const int kMcoinProductFieldNumber = 14;
  const ::proto::ShopMcoinProduct& mcoin_product() const;
  ::proto::ShopMcoinProduct* mutable_mcoin_product();
  ::proto::ShopMcoinProduct* release_mcoin_product();
  void set_allocated_mcoin_product(::proto::ShopMcoinProduct* mcoin_product);

  // @@protoc_insertion_point(class_scope:proto.RechargeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ShopConcertProduct* concert_product_;
  ::proto::ShopCardProduct* card_product_;
  ::proto::PlayProduct* play_product_;
  ::proto::ShopMcoinProduct* mcoin_product_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5frecharge_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RechargeRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RechargeRsp) */ {
 public:
  RechargeRsp();
  virtual ~RechargeRsp();

  RechargeRsp(const RechargeRsp& from);

  inline RechargeRsp& operator=(const RechargeRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RechargeRsp(RechargeRsp&& from) noexcept
    : RechargeRsp() {
    *this = ::std::move(from);
  }

  inline RechargeRsp& operator=(RechargeRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RechargeRsp& default_instance();

  static inline const RechargeRsp* internal_default_instance() {
    return reinterpret_cast<const RechargeRsp*>(
               &_RechargeRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RechargeRsp* other);
  friend void swap(RechargeRsp& a, RechargeRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RechargeRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  RechargeRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RechargeRsp& from);
  void MergeFrom(const RechargeRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RechargeRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RechargeRsp_CmdId CmdId;
  static const CmdId NONE =
    RechargeRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    RechargeRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    RechargeRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    RechargeRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return RechargeRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    RechargeRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    RechargeRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    RechargeRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return RechargeRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return RechargeRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return RechargeRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string product_id = 2;
  void clear_product_id();
  static const int kProductIdFieldNumber = 2;
  const ::std::string& product_id() const;
  void set_product_id(const ::std::string& value);
  #if LANG_CXX11
  void set_product_id(::std::string&& value);
  #endif
  void set_product_id(const char* value);
  void set_product_id(const char* value, size_t size);
  ::std::string* mutable_product_id();
  ::std::string* release_product_id();
  void set_allocated_product_id(::std::string* product_id);

  // bool is_show_minors_hint = 6;
  void clear_is_show_minors_hint();
  static const int kIsShowMinorsHintFieldNumber = 6;
  bool is_show_minors_hint() const;
  void set_is_show_minors_hint(bool value);

  // int32 retcode = 12;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 12;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.RechargeRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr product_id_;
  bool is_show_minors_hint_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5frecharge_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderFinishNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OrderFinishNotify) */ {
 public:
  OrderFinishNotify();
  virtual ~OrderFinishNotify();

  OrderFinishNotify(const OrderFinishNotify& from);

  inline OrderFinishNotify& operator=(const OrderFinishNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderFinishNotify(OrderFinishNotify&& from) noexcept
    : OrderFinishNotify() {
    *this = ::std::move(from);
  }

  inline OrderFinishNotify& operator=(OrderFinishNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderFinishNotify& default_instance();

  static inline const OrderFinishNotify* internal_default_instance() {
    return reinterpret_cast<const OrderFinishNotify*>(
               &_OrderFinishNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(OrderFinishNotify* other);
  friend void swap(OrderFinishNotify& a, OrderFinishNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderFinishNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  OrderFinishNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OrderFinishNotify& from);
  void MergeFrom(const OrderFinishNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OrderFinishNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef OrderFinishNotify_CmdId CmdId;
  static const CmdId NONE =
    OrderFinishNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    OrderFinishNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    OrderFinishNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    OrderFinishNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return OrderFinishNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    OrderFinishNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    OrderFinishNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    OrderFinishNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return OrderFinishNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return OrderFinishNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return OrderFinishNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ItemParam item_list = 9;
  int item_list_size() const;
  void clear_item_list();
  static const int kItemListFieldNumber = 9;
  const ::proto::ItemParam& item_list(int index) const;
  ::proto::ItemParam* mutable_item_list(int index);
  ::proto::ItemParam* add_item_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
      mutable_item_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
      item_list() const;

  // string product_id = 6;
  void clear_product_id();
  static const int kProductIdFieldNumber = 6;
  const ::std::string& product_id() const;
  void set_product_id(const ::std::string& value);
  #if LANG_CXX11
  void set_product_id(::std::string&& value);
  #endif
  void set_product_id(const char* value);
  void set_product_id(const char* value, size_t size);
  ::std::string* mutable_product_id();
  ::std::string* release_product_id();
  void set_allocated_product_id(::std::string* product_id);

  // uint32 order_id = 3;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 3;
  ::google::protobuf::uint32 order_id() const;
  void set_order_id(::google::protobuf::uint32 value);

  // uint32 add_mcoin = 7;
  void clear_add_mcoin();
  static const int kAddMcoinFieldNumber = 7;
  ::google::protobuf::uint32 add_mcoin() const;
  void set_add_mcoin(::google::protobuf::uint32 value);

  // uint32 card_product_remain_days = 15;
  void clear_card_product_remain_days();
  static const int kCardProductRemainDaysFieldNumber = 15;
  ::google::protobuf::uint32 card_product_remain_days() const;
  void set_card_product_remain_days(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.OrderFinishNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam > item_list_;
  ::google::protobuf::internal::ArenaStringPtr product_id_;
  ::google::protobuf::uint32 order_id_;
  ::google::protobuf::uint32 add_mcoin_;
  ::google::protobuf::uint32 card_product_remain_days_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5frecharge_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CardProductRewardNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CardProductRewardNotify) */ {
 public:
  CardProductRewardNotify();
  virtual ~CardProductRewardNotify();

  CardProductRewardNotify(const CardProductRewardNotify& from);

  inline CardProductRewardNotify& operator=(const CardProductRewardNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CardProductRewardNotify(CardProductRewardNotify&& from) noexcept
    : CardProductRewardNotify() {
    *this = ::std::move(from);
  }

  inline CardProductRewardNotify& operator=(CardProductRewardNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CardProductRewardNotify& default_instance();

  static inline const CardProductRewardNotify* internal_default_instance() {
    return reinterpret_cast<const CardProductRewardNotify*>(
               &_CardProductRewardNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CardProductRewardNotify* other);
  friend void swap(CardProductRewardNotify& a, CardProductRewardNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CardProductRewardNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CardProductRewardNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CardProductRewardNotify& from);
  void MergeFrom(const CardProductRewardNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CardProductRewardNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CardProductRewardNotify_CmdId CmdId;
  static const CmdId NONE =
    CardProductRewardNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    CardProductRewardNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CardProductRewardNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CardProductRewardNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CardProductRewardNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CardProductRewardNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CardProductRewardNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CardProductRewardNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CardProductRewardNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CardProductRewardNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CardProductRewardNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string product_id = 14;
  void clear_product_id();
  static const int kProductIdFieldNumber = 14;
  const ::std::string& product_id() const;
  void set_product_id(const ::std::string& value);
  #if LANG_CXX11
  void set_product_id(::std::string&& value);
  #endif
  void set_product_id(const char* value);
  void set_product_id(const char* value, size_t size);
  ::std::string* mutable_product_id();
  ::std::string* release_product_id();
  void set_allocated_product_id(::std::string* product_id);

  // uint32 remain_days = 1;
  void clear_remain_days();
  static const int kRemainDaysFieldNumber = 1;
  ::google::protobuf::uint32 remain_days() const;
  void set_remain_days(::google::protobuf::uint32 value);

  // uint32 hcoin = 6;
  void clear_hcoin();
  static const int kHcoinFieldNumber = 6;
  ::google::protobuf::uint32 hcoin() const;
  void set_hcoin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CardProductRewardNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr product_id_;
  ::google::protobuf::uint32 remain_days_;
  ::google::protobuf::uint32 hcoin_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5frecharge_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProductPriceTier : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ProductPriceTier) */ {
 public:
  ProductPriceTier();
  virtual ~ProductPriceTier();

  ProductPriceTier(const ProductPriceTier& from);

  inline ProductPriceTier& operator=(const ProductPriceTier& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProductPriceTier(ProductPriceTier&& from) noexcept
    : ProductPriceTier() {
    *this = ::std::move(from);
  }

  inline ProductPriceTier& operator=(ProductPriceTier&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductPriceTier& default_instance();

  static inline const ProductPriceTier* internal_default_instance() {
    return reinterpret_cast<const ProductPriceTier*>(
               &_ProductPriceTier_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ProductPriceTier* other);
  friend void swap(ProductPriceTier& a, ProductPriceTier& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProductPriceTier* New() const PROTOBUF_FINAL { return New(NULL); }

  ProductPriceTier* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProductPriceTier& from);
  void MergeFrom(const ProductPriceTier& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProductPriceTier* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string product_id = 6;
  void clear_product_id();
  static const int kProductIdFieldNumber = 6;
  const ::std::string& product_id() const;
  void set_product_id(const ::std::string& value);
  #if LANG_CXX11
  void set_product_id(::std::string&& value);
  #endif
  void set_product_id(const char* value);
  void set_product_id(const char* value, size_t size);
  ::std::string* mutable_product_id();
  ::std::string* release_product_id();
  void set_allocated_product_id(::std::string* product_id);

  // string price_tier = 12;
  void clear_price_tier();
  static const int kPriceTierFieldNumber = 12;
  const ::std::string& price_tier() const;
  void set_price_tier(const ::std::string& value);
  #if LANG_CXX11
  void set_price_tier(::std::string&& value);
  #endif
  void set_price_tier(const char* value);
  void set_price_tier(const char* value, size_t size);
  ::std::string* mutable_price_tier();
  ::std::string* release_price_tier();
  void set_allocated_price_tier(::std::string* price_tier);

  // @@protoc_insertion_point(class_scope:proto.ProductPriceTier)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr product_id_;
  ::google::protobuf::internal::ArenaStringPtr price_tier_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5frecharge_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResinCardData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ResinCardData) */ {
 public:
  ResinCardData();
  virtual ~ResinCardData();

  ResinCardData(const ResinCardData& from);

  inline ResinCardData& operator=(const ResinCardData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResinCardData(ResinCardData&& from) noexcept
    : ResinCardData() {
    *this = ::std::move(from);
  }

  inline ResinCardData& operator=(ResinCardData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResinCardData& default_instance();

  static inline const ResinCardData* internal_default_instance() {
    return reinterpret_cast<const ResinCardData*>(
               &_ResinCardData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ResinCardData* other);
  friend void swap(ResinCardData& a, ResinCardData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResinCardData* New() const PROTOBUF_FINAL { return New(NULL); }

  ResinCardData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResinCardData& from);
  void MergeFrom(const ResinCardData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResinCardData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 last_daily_reward_time = 2;
  void clear_last_daily_reward_time();
  static const int kLastDailyRewardTimeFieldNumber = 2;
  ::google::protobuf::uint32 last_daily_reward_time() const;
  void set_last_daily_reward_time(::google::protobuf::uint32 value);

  // uint32 remain_reward_days = 3;
  void clear_remain_reward_days();
  static const int kRemainRewardDaysFieldNumber = 3;
  ::google::protobuf::uint32 remain_reward_days() const;
  void set_remain_reward_days(::google::protobuf::uint32 value);

  // uint32 config_id = 7;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 7;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // uint32 expire_time = 12;
  void clear_expire_time();
  static const int kExpireTimeFieldNumber = 12;
  ::google::protobuf::uint32 expire_time() const;
  void set_expire_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ResinCardData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 last_daily_reward_time_;
  ::google::protobuf::uint32 remain_reward_days_;
  ::google::protobuf::uint32 config_id_;
  ::google::protobuf::uint32 expire_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5frecharge_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerRechargeDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerRechargeDataNotify) */ {
 public:
  PlayerRechargeDataNotify();
  virtual ~PlayerRechargeDataNotify();

  PlayerRechargeDataNotify(const PlayerRechargeDataNotify& from);

  inline PlayerRechargeDataNotify& operator=(const PlayerRechargeDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerRechargeDataNotify(PlayerRechargeDataNotify&& from) noexcept
    : PlayerRechargeDataNotify() {
    *this = ::std::move(from);
  }

  inline PlayerRechargeDataNotify& operator=(PlayerRechargeDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerRechargeDataNotify& default_instance();

  static inline const PlayerRechargeDataNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerRechargeDataNotify*>(
               &_PlayerRechargeDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(PlayerRechargeDataNotify* other);
  friend void swap(PlayerRechargeDataNotify& a, PlayerRechargeDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerRechargeDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerRechargeDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerRechargeDataNotify& from);
  void MergeFrom(const PlayerRechargeDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerRechargeDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerRechargeDataNotify_CmdId CmdId;
  static const CmdId NONE =
    PlayerRechargeDataNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerRechargeDataNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerRechargeDataNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerRechargeDataNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerRechargeDataNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerRechargeDataNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerRechargeDataNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerRechargeDataNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerRechargeDataNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerRechargeDataNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerRechargeDataNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ProductPriceTier product_price_tier_list = 11;
  int product_price_tier_list_size() const;
  void clear_product_price_tier_list();
  static const int kProductPriceTierListFieldNumber = 11;
  const ::proto::ProductPriceTier& product_price_tier_list(int index) const;
  ::proto::ProductPriceTier* mutable_product_price_tier_list(int index);
  ::proto::ProductPriceTier* add_product_price_tier_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ProductPriceTier >*
      mutable_product_price_tier_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ProductPriceTier >&
      product_price_tier_list() const;

  // uint32 card_product_remain_days = 12;
  void clear_card_product_remain_days();
  static const int kCardProductRemainDaysFieldNumber = 12;
  ::google::protobuf::uint32 card_product_remain_days() const;
  void set_card_product_remain_days(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerRechargeDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ProductPriceTier > product_price_tier_list_;
  ::google::protobuf::uint32 card_product_remain_days_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5frecharge_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderDisplayNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OrderDisplayNotify) */ {
 public:
  OrderDisplayNotify();
  virtual ~OrderDisplayNotify();

  OrderDisplayNotify(const OrderDisplayNotify& from);

  inline OrderDisplayNotify& operator=(const OrderDisplayNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderDisplayNotify(OrderDisplayNotify&& from) noexcept
    : OrderDisplayNotify() {
    *this = ::std::move(from);
  }

  inline OrderDisplayNotify& operator=(OrderDisplayNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderDisplayNotify& default_instance();

  static inline const OrderDisplayNotify* internal_default_instance() {
    return reinterpret_cast<const OrderDisplayNotify*>(
               &_OrderDisplayNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(OrderDisplayNotify* other);
  friend void swap(OrderDisplayNotify& a, OrderDisplayNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderDisplayNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  OrderDisplayNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OrderDisplayNotify& from);
  void MergeFrom(const OrderDisplayNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OrderDisplayNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef OrderDisplayNotify_CmdId CmdId;
  static const CmdId NONE =
    OrderDisplayNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    OrderDisplayNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    OrderDisplayNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    OrderDisplayNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    OrderDisplayNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return OrderDisplayNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    OrderDisplayNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    OrderDisplayNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    OrderDisplayNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return OrderDisplayNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return OrderDisplayNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return OrderDisplayNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 order_id = 1;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 1;
  ::google::protobuf::uint32 order_id() const;
  void set_order_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.OrderDisplayNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 order_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5frecharge_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReportTrackingIOInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReportTrackingIOInfoNotify) */ {
 public:
  ReportTrackingIOInfoNotify();
  virtual ~ReportTrackingIOInfoNotify();

  ReportTrackingIOInfoNotify(const ReportTrackingIOInfoNotify& from);

  inline ReportTrackingIOInfoNotify& operator=(const ReportTrackingIOInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReportTrackingIOInfoNotify(ReportTrackingIOInfoNotify&& from) noexcept
    : ReportTrackingIOInfoNotify() {
    *this = ::std::move(from);
  }

  inline ReportTrackingIOInfoNotify& operator=(ReportTrackingIOInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportTrackingIOInfoNotify& default_instance();

  static inline const ReportTrackingIOInfoNotify* internal_default_instance() {
    return reinterpret_cast<const ReportTrackingIOInfoNotify*>(
               &_ReportTrackingIOInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ReportTrackingIOInfoNotify* other);
  friend void swap(ReportTrackingIOInfoNotify& a, ReportTrackingIOInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReportTrackingIOInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ReportTrackingIOInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReportTrackingIOInfoNotify& from);
  void MergeFrom(const ReportTrackingIOInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReportTrackingIOInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ReportTrackingIOInfoNotify_CmdId CmdId;
  static const CmdId NONE =
    ReportTrackingIOInfoNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ReportTrackingIOInfoNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ReportTrackingIOInfoNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ReportTrackingIOInfoNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ReportTrackingIOInfoNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ReportTrackingIOInfoNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ReportTrackingIOInfoNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ReportTrackingIOInfoNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ReportTrackingIOInfoNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ReportTrackingIOInfoNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ReportTrackingIOInfoNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ReportTrackingIOInfoNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string deviceid = 1;
  void clear_deviceid();
  static const int kDeviceidFieldNumber = 1;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceid(::std::string&& value);
  #endif
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // string rydevicetype = 12;
  void clear_rydevicetype();
  static const int kRydevicetypeFieldNumber = 12;
  const ::std::string& rydevicetype() const;
  void set_rydevicetype(const ::std::string& value);
  #if LANG_CXX11
  void set_rydevicetype(::std::string&& value);
  #endif
  void set_rydevicetype(const char* value);
  void set_rydevicetype(const char* value, size_t size);
  ::std::string* mutable_rydevicetype();
  ::std::string* release_rydevicetype();
  void set_allocated_rydevicetype(::std::string* rydevicetype);

  // string client_tz = 13;
  void clear_client_tz();
  static const int kClientTzFieldNumber = 13;
  const ::std::string& client_tz() const;
  void set_client_tz(const ::std::string& value);
  #if LANG_CXX11
  void set_client_tz(::std::string&& value);
  #endif
  void set_client_tz(const char* value);
  void set_client_tz(const char* value, size_t size);
  ::std::string* mutable_client_tz();
  ::std::string* release_client_tz();
  void set_allocated_client_tz(::std::string* client_tz);

  // string appid = 14;
  void clear_appid();
  static const int kAppidFieldNumber = 14;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // string mac = 15;
  void clear_mac();
  static const int kMacFieldNumber = 15;
  const ::std::string& mac() const;
  void set_mac(const ::std::string& value);
  #if LANG_CXX11
  void set_mac(::std::string&& value);
  #endif
  void set_mac(const char* value);
  void set_mac(const char* value, size_t size);
  ::std::string* mutable_mac();
  ::std::string* release_mac();
  void set_allocated_mac(::std::string* mac);

  // @@protoc_insertion_point(class_scope:proto.ReportTrackingIOInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  ::google::protobuf::internal::ArenaStringPtr rydevicetype_;
  ::google::protobuf::internal::ArenaStringPtr client_tz_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr mac_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5frecharge_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeResinCardDailyRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeResinCardDailyRewardReq) */ {
 public:
  TakeResinCardDailyRewardReq();
  virtual ~TakeResinCardDailyRewardReq();

  TakeResinCardDailyRewardReq(const TakeResinCardDailyRewardReq& from);

  inline TakeResinCardDailyRewardReq& operator=(const TakeResinCardDailyRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeResinCardDailyRewardReq(TakeResinCardDailyRewardReq&& from) noexcept
    : TakeResinCardDailyRewardReq() {
    *this = ::std::move(from);
  }

  inline TakeResinCardDailyRewardReq& operator=(TakeResinCardDailyRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeResinCardDailyRewardReq& default_instance();

  static inline const TakeResinCardDailyRewardReq* internal_default_instance() {
    return reinterpret_cast<const TakeResinCardDailyRewardReq*>(
               &_TakeResinCardDailyRewardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(TakeResinCardDailyRewardReq* other);
  friend void swap(TakeResinCardDailyRewardReq& a, TakeResinCardDailyRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeResinCardDailyRewardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeResinCardDailyRewardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeResinCardDailyRewardReq& from);
  void MergeFrom(const TakeResinCardDailyRewardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeResinCardDailyRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TakeResinCardDailyRewardReq_CmdId CmdId;
  static const CmdId NONE =
    TakeResinCardDailyRewardReq_CmdId_NONE;
  static const CmdId CMD_ID =
    TakeResinCardDailyRewardReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    TakeResinCardDailyRewardReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    TakeResinCardDailyRewardReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    TakeResinCardDailyRewardReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return TakeResinCardDailyRewardReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    TakeResinCardDailyRewardReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    TakeResinCardDailyRewardReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    TakeResinCardDailyRewardReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return TakeResinCardDailyRewardReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return TakeResinCardDailyRewardReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return TakeResinCardDailyRewardReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 product_config_id = 14;
  void clear_product_config_id();
  static const int kProductConfigIdFieldNumber = 14;
  ::google::protobuf::uint32 product_config_id() const;
  void set_product_config_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeResinCardDailyRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 product_config_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5frecharge_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeResinCardDailyRewardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeResinCardDailyRewardRsp) */ {
 public:
  TakeResinCardDailyRewardRsp();
  virtual ~TakeResinCardDailyRewardRsp();

  TakeResinCardDailyRewardRsp(const TakeResinCardDailyRewardRsp& from);

  inline TakeResinCardDailyRewardRsp& operator=(const TakeResinCardDailyRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeResinCardDailyRewardRsp(TakeResinCardDailyRewardRsp&& from) noexcept
    : TakeResinCardDailyRewardRsp() {
    *this = ::std::move(from);
  }

  inline TakeResinCardDailyRewardRsp& operator=(TakeResinCardDailyRewardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeResinCardDailyRewardRsp& default_instance();

  static inline const TakeResinCardDailyRewardRsp* internal_default_instance() {
    return reinterpret_cast<const TakeResinCardDailyRewardRsp*>(
               &_TakeResinCardDailyRewardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(TakeResinCardDailyRewardRsp* other);
  friend void swap(TakeResinCardDailyRewardRsp& a, TakeResinCardDailyRewardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeResinCardDailyRewardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeResinCardDailyRewardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeResinCardDailyRewardRsp& from);
  void MergeFrom(const TakeResinCardDailyRewardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeResinCardDailyRewardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TakeResinCardDailyRewardRsp_CmdId CmdId;
  static const CmdId NONE =
    TakeResinCardDailyRewardRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    TakeResinCardDailyRewardRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    TakeResinCardDailyRewardRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    TakeResinCardDailyRewardRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return TakeResinCardDailyRewardRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    TakeResinCardDailyRewardRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    TakeResinCardDailyRewardRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    TakeResinCardDailyRewardRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return TakeResinCardDailyRewardRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return TakeResinCardDailyRewardRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return TakeResinCardDailyRewardRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ItemParam item_vec = 6;
  int item_vec_size() const;
  void clear_item_vec();
  static const int kItemVecFieldNumber = 6;
  const ::proto::ItemParam& item_vec(int index) const;
  ::proto::ItemParam* mutable_item_vec(int index);
  ::proto::ItemParam* add_item_vec();
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
      mutable_item_vec();
  const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
      item_vec() const;

  // int32 retcode = 4;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 product_config_id = 12;
  void clear_product_config_id();
  static const int kProductConfigIdFieldNumber = 12;
  ::google::protobuf::uint32 product_config_id() const;
  void set_product_config_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeResinCardDailyRewardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam > item_vec_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 product_config_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5frecharge_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResinCardDataUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ResinCardDataUpdateNotify) */ {
 public:
  ResinCardDataUpdateNotify();
  virtual ~ResinCardDataUpdateNotify();

  ResinCardDataUpdateNotify(const ResinCardDataUpdateNotify& from);

  inline ResinCardDataUpdateNotify& operator=(const ResinCardDataUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResinCardDataUpdateNotify(ResinCardDataUpdateNotify&& from) noexcept
    : ResinCardDataUpdateNotify() {
    *this = ::std::move(from);
  }

  inline ResinCardDataUpdateNotify& operator=(ResinCardDataUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResinCardDataUpdateNotify& default_instance();

  static inline const ResinCardDataUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const ResinCardDataUpdateNotify*>(
               &_ResinCardDataUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(ResinCardDataUpdateNotify* other);
  friend void swap(ResinCardDataUpdateNotify& a, ResinCardDataUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResinCardDataUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ResinCardDataUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResinCardDataUpdateNotify& from);
  void MergeFrom(const ResinCardDataUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResinCardDataUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ResinCardDataUpdateNotify_CmdId CmdId;
  static const CmdId NONE =
    ResinCardDataUpdateNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ResinCardDataUpdateNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ResinCardDataUpdateNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ResinCardDataUpdateNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ResinCardDataUpdateNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ResinCardDataUpdateNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ResinCardDataUpdateNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ResinCardDataUpdateNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ResinCardDataUpdateNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ResinCardDataUpdateNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ResinCardDataUpdateNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ResinCardData card_data_list = 2;
  int card_data_list_size() const;
  void clear_card_data_list();
  static const int kCardDataListFieldNumber = 2;
  const ::proto::ResinCardData& card_data_list(int index) const;
  ::proto::ResinCardData* mutable_card_data_list(int index);
  ::proto::ResinCardData* add_card_data_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ResinCardData >*
      mutable_card_data_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ResinCardData >&
      card_data_list() const;

  // uint32 today_start_time = 6;
  void clear_today_start_time();
  static const int kTodayStartTimeFieldNumber = 6;
  ::google::protobuf::uint32 today_start_time() const;
  void set_today_start_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ResinCardDataUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ResinCardData > card_data_list_;
  ::google::protobuf::uint32 today_start_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5frecharge_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================


// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::RechargeReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::RechargeReq_CmdId>() {
  return ::proto::RechargeReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::RechargeRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::RechargeRsp_CmdId>() {
  return ::proto::RechargeRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::OrderFinishNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::OrderFinishNotify_CmdId>() {
  return ::proto::OrderFinishNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CardProductRewardNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CardProductRewardNotify_CmdId>() {
  return ::proto::CardProductRewardNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerRechargeDataNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerRechargeDataNotify_CmdId>() {
  return ::proto::PlayerRechargeDataNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::OrderDisplayNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::OrderDisplayNotify_CmdId>() {
  return ::proto::OrderDisplayNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ReportTrackingIOInfoNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ReportTrackingIOInfoNotify_CmdId>() {
  return ::proto::ReportTrackingIOInfoNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::TakeResinCardDailyRewardReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TakeResinCardDailyRewardReq_CmdId>() {
  return ::proto::TakeResinCardDailyRewardReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::TakeResinCardDailyRewardRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TakeResinCardDailyRewardRsp_CmdId>() {
  return ::proto::TakeResinCardDailyRewardRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ResinCardDataUpdateNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ResinCardDataUpdateNotify_CmdId>() {
  return ::proto::ResinCardDataUpdateNotify_CmdId_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5frecharge_2eproto__INCLUDED
