// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_reunion.proto

#ifndef PROTOBUF_cmd_2fcmd_5freunion_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5freunion_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace proto {
class GetReunionMissionInfoReq;
class GetReunionMissionInfoReqDefaultTypeInternal;
extern GetReunionMissionInfoReqDefaultTypeInternal _GetReunionMissionInfoReq_default_instance_;
class GetReunionMissionInfoRsp;
class GetReunionMissionInfoRspDefaultTypeInternal;
extern GetReunionMissionInfoRspDefaultTypeInternal _GetReunionMissionInfoRsp_default_instance_;
class GetReunionPrivilegeInfoReq;
class GetReunionPrivilegeInfoReqDefaultTypeInternal;
extern GetReunionPrivilegeInfoReqDefaultTypeInternal _GetReunionPrivilegeInfoReq_default_instance_;
class GetReunionPrivilegeInfoRsp;
class GetReunionPrivilegeInfoRspDefaultTypeInternal;
extern GetReunionPrivilegeInfoRspDefaultTypeInternal _GetReunionPrivilegeInfoRsp_default_instance_;
class GetReunionSignInInfoReq;
class GetReunionSignInInfoReqDefaultTypeInternal;
extern GetReunionSignInInfoReqDefaultTypeInternal _GetReunionSignInInfoReq_default_instance_;
class GetReunionSignInInfoRsp;
class GetReunionSignInInfoRspDefaultTypeInternal;
extern GetReunionSignInInfoRspDefaultTypeInternal _GetReunionSignInInfoRsp_default_instance_;
class ReunionActivateNotify;
class ReunionActivateNotifyDefaultTypeInternal;
extern ReunionActivateNotifyDefaultTypeInternal _ReunionActivateNotify_default_instance_;
class ReunionBriefInfo;
class ReunionBriefInfoDefaultTypeInternal;
extern ReunionBriefInfoDefaultTypeInternal _ReunionBriefInfo_default_instance_;
class ReunionBriefInfoReq;
class ReunionBriefInfoReqDefaultTypeInternal;
extern ReunionBriefInfoReqDefaultTypeInternal _ReunionBriefInfoReq_default_instance_;
class ReunionBriefInfoRsp;
class ReunionBriefInfoRspDefaultTypeInternal;
extern ReunionBriefInfoRspDefaultTypeInternal _ReunionBriefInfoRsp_default_instance_;
class ReunionDailyRefreshNotify;
class ReunionDailyRefreshNotifyDefaultTypeInternal;
extern ReunionDailyRefreshNotifyDefaultTypeInternal _ReunionDailyRefreshNotify_default_instance_;
class ReunionMissionInfo;
class ReunionMissionInfoDefaultTypeInternal;
extern ReunionMissionInfoDefaultTypeInternal _ReunionMissionInfo_default_instance_;
class ReunionPrivilegeChangeNotify;
class ReunionPrivilegeChangeNotifyDefaultTypeInternal;
extern ReunionPrivilegeChangeNotifyDefaultTypeInternal _ReunionPrivilegeChangeNotify_default_instance_;
class ReunionPrivilegeInfo;
class ReunionPrivilegeInfoDefaultTypeInternal;
extern ReunionPrivilegeInfoDefaultTypeInternal _ReunionPrivilegeInfo_default_instance_;
class ReunionSettleNotify;
class ReunionSettleNotifyDefaultTypeInternal;
extern ReunionSettleNotifyDefaultTypeInternal _ReunionSettleNotify_default_instance_;
class ReunionSignInInfo;
class ReunionSignInInfoDefaultTypeInternal;
extern ReunionSignInInfoDefaultTypeInternal _ReunionSignInInfo_default_instance_;
class ReunionWatcherInfo;
class ReunionWatcherInfoDefaultTypeInternal;
extern ReunionWatcherInfoDefaultTypeInternal _ReunionWatcherInfo_default_instance_;
class TakeReunionFirstGiftRewardReq;
class TakeReunionFirstGiftRewardReqDefaultTypeInternal;
extern TakeReunionFirstGiftRewardReqDefaultTypeInternal _TakeReunionFirstGiftRewardReq_default_instance_;
class TakeReunionFirstGiftRewardRsp;
class TakeReunionFirstGiftRewardRspDefaultTypeInternal;
extern TakeReunionFirstGiftRewardRspDefaultTypeInternal _TakeReunionFirstGiftRewardRsp_default_instance_;
class TakeReunionMissionRewardReq;
class TakeReunionMissionRewardReqDefaultTypeInternal;
extern TakeReunionMissionRewardReqDefaultTypeInternal _TakeReunionMissionRewardReq_default_instance_;
class TakeReunionMissionRewardRsp;
class TakeReunionMissionRewardRspDefaultTypeInternal;
extern TakeReunionMissionRewardRspDefaultTypeInternal _TakeReunionMissionRewardRsp_default_instance_;
class TakeReunionSignInRewardReq;
class TakeReunionSignInRewardReqDefaultTypeInternal;
extern TakeReunionSignInRewardReqDefaultTypeInternal _TakeReunionSignInRewardReq_default_instance_;
class TakeReunionSignInRewardRsp;
class TakeReunionSignInRewardRspDefaultTypeInternal;
extern TakeReunionSignInRewardRspDefaultTypeInternal _TakeReunionSignInRewardRsp_default_instance_;
class TakeReunionWatcherRewardReq;
class TakeReunionWatcherRewardReqDefaultTypeInternal;
extern TakeReunionWatcherRewardReqDefaultTypeInternal _TakeReunionWatcherRewardReq_default_instance_;
class TakeReunionWatcherRewardRsp;
class TakeReunionWatcherRewardRspDefaultTypeInternal;
extern TakeReunionWatcherRewardRspDefaultTypeInternal _TakeReunionWatcherRewardRsp_default_instance_;
class UpdateReunionWatcherNotify;
class UpdateReunionWatcherNotifyDefaultTypeInternal;
extern UpdateReunionWatcherNotifyDefaultTypeInternal _UpdateReunionWatcherNotify_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5freunion_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5freunion_2eproto

enum ReunionBriefInfoReq_CmdId {
  ReunionBriefInfoReq_CmdId_NONE = 0,
  ReunionBriefInfoReq_CmdId_CMD_ID = 5076,
  ReunionBriefInfoReq_CmdId_ENET_CHANNEL_ID = 0,
  ReunionBriefInfoReq_CmdId_ENET_IS_RELIABLE = 1,
  ReunionBriefInfoReq_CmdId_IS_ALLOW_CLIENT = 1,
  ReunionBriefInfoReq_CmdId_ReunionBriefInfoReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReunionBriefInfoReq_CmdId_ReunionBriefInfoReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReunionBriefInfoReq_CmdId_IsValid(int value);
const ReunionBriefInfoReq_CmdId ReunionBriefInfoReq_CmdId_CmdId_MIN = ReunionBriefInfoReq_CmdId_NONE;
const ReunionBriefInfoReq_CmdId ReunionBriefInfoReq_CmdId_CmdId_MAX = ReunionBriefInfoReq_CmdId_CMD_ID;
const int ReunionBriefInfoReq_CmdId_CmdId_ARRAYSIZE = ReunionBriefInfoReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReunionBriefInfoReq_CmdId_descriptor();
inline const ::std::string& ReunionBriefInfoReq_CmdId_Name(ReunionBriefInfoReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReunionBriefInfoReq_CmdId_descriptor(), value);
}
inline bool ReunionBriefInfoReq_CmdId_Parse(
    const ::std::string& name, ReunionBriefInfoReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReunionBriefInfoReq_CmdId>(
    ReunionBriefInfoReq_CmdId_descriptor(), name, value);
}
enum ReunionBriefInfoRsp_CmdId {
  ReunionBriefInfoRsp_CmdId_NONE = 0,
  ReunionBriefInfoRsp_CmdId_CMD_ID = 5068,
  ReunionBriefInfoRsp_CmdId_ENET_CHANNEL_ID = 0,
  ReunionBriefInfoRsp_CmdId_ENET_IS_RELIABLE = 1,
  ReunionBriefInfoRsp_CmdId_ReunionBriefInfoRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReunionBriefInfoRsp_CmdId_ReunionBriefInfoRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReunionBriefInfoRsp_CmdId_IsValid(int value);
const ReunionBriefInfoRsp_CmdId ReunionBriefInfoRsp_CmdId_CmdId_MIN = ReunionBriefInfoRsp_CmdId_NONE;
const ReunionBriefInfoRsp_CmdId ReunionBriefInfoRsp_CmdId_CmdId_MAX = ReunionBriefInfoRsp_CmdId_CMD_ID;
const int ReunionBriefInfoRsp_CmdId_CmdId_ARRAYSIZE = ReunionBriefInfoRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReunionBriefInfoRsp_CmdId_descriptor();
inline const ::std::string& ReunionBriefInfoRsp_CmdId_Name(ReunionBriefInfoRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReunionBriefInfoRsp_CmdId_descriptor(), value);
}
inline bool ReunionBriefInfoRsp_CmdId_Parse(
    const ::std::string& name, ReunionBriefInfoRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReunionBriefInfoRsp_CmdId>(
    ReunionBriefInfoRsp_CmdId_descriptor(), name, value);
}
enum TakeReunionFirstGiftRewardReq_CmdId {
  TakeReunionFirstGiftRewardReq_CmdId_NONE = 0,
  TakeReunionFirstGiftRewardReq_CmdId_CMD_ID = 5075,
  TakeReunionFirstGiftRewardReq_CmdId_ENET_CHANNEL_ID = 0,
  TakeReunionFirstGiftRewardReq_CmdId_ENET_IS_RELIABLE = 1,
  TakeReunionFirstGiftRewardReq_CmdId_IS_ALLOW_CLIENT = 1,
  TakeReunionFirstGiftRewardReq_CmdId_TakeReunionFirstGiftRewardReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TakeReunionFirstGiftRewardReq_CmdId_TakeReunionFirstGiftRewardReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TakeReunionFirstGiftRewardReq_CmdId_IsValid(int value);
const TakeReunionFirstGiftRewardReq_CmdId TakeReunionFirstGiftRewardReq_CmdId_CmdId_MIN = TakeReunionFirstGiftRewardReq_CmdId_NONE;
const TakeReunionFirstGiftRewardReq_CmdId TakeReunionFirstGiftRewardReq_CmdId_CmdId_MAX = TakeReunionFirstGiftRewardReq_CmdId_CMD_ID;
const int TakeReunionFirstGiftRewardReq_CmdId_CmdId_ARRAYSIZE = TakeReunionFirstGiftRewardReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TakeReunionFirstGiftRewardReq_CmdId_descriptor();
inline const ::std::string& TakeReunionFirstGiftRewardReq_CmdId_Name(TakeReunionFirstGiftRewardReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TakeReunionFirstGiftRewardReq_CmdId_descriptor(), value);
}
inline bool TakeReunionFirstGiftRewardReq_CmdId_Parse(
    const ::std::string& name, TakeReunionFirstGiftRewardReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TakeReunionFirstGiftRewardReq_CmdId>(
    TakeReunionFirstGiftRewardReq_CmdId_descriptor(), name, value);
}
enum TakeReunionFirstGiftRewardRsp_CmdId {
  TakeReunionFirstGiftRewardRsp_CmdId_NONE = 0,
  TakeReunionFirstGiftRewardRsp_CmdId_CMD_ID = 5057,
  TakeReunionFirstGiftRewardRsp_CmdId_ENET_CHANNEL_ID = 0,
  TakeReunionFirstGiftRewardRsp_CmdId_ENET_IS_RELIABLE = 1,
  TakeReunionFirstGiftRewardRsp_CmdId_TakeReunionFirstGiftRewardRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TakeReunionFirstGiftRewardRsp_CmdId_TakeReunionFirstGiftRewardRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TakeReunionFirstGiftRewardRsp_CmdId_IsValid(int value);
const TakeReunionFirstGiftRewardRsp_CmdId TakeReunionFirstGiftRewardRsp_CmdId_CmdId_MIN = TakeReunionFirstGiftRewardRsp_CmdId_NONE;
const TakeReunionFirstGiftRewardRsp_CmdId TakeReunionFirstGiftRewardRsp_CmdId_CmdId_MAX = TakeReunionFirstGiftRewardRsp_CmdId_CMD_ID;
const int TakeReunionFirstGiftRewardRsp_CmdId_CmdId_ARRAYSIZE = TakeReunionFirstGiftRewardRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TakeReunionFirstGiftRewardRsp_CmdId_descriptor();
inline const ::std::string& TakeReunionFirstGiftRewardRsp_CmdId_Name(TakeReunionFirstGiftRewardRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TakeReunionFirstGiftRewardRsp_CmdId_descriptor(), value);
}
inline bool TakeReunionFirstGiftRewardRsp_CmdId_Parse(
    const ::std::string& name, TakeReunionFirstGiftRewardRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TakeReunionFirstGiftRewardRsp_CmdId>(
    TakeReunionFirstGiftRewardRsp_CmdId_descriptor(), name, value);
}
enum GetReunionSignInInfoReq_CmdId {
  GetReunionSignInInfoReq_CmdId_NONE = 0,
  GetReunionSignInInfoReq_CmdId_CMD_ID = 5052,
  GetReunionSignInInfoReq_CmdId_ENET_CHANNEL_ID = 0,
  GetReunionSignInInfoReq_CmdId_ENET_IS_RELIABLE = 1,
  GetReunionSignInInfoReq_CmdId_IS_ALLOW_CLIENT = 1,
  GetReunionSignInInfoReq_CmdId_GetReunionSignInInfoReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetReunionSignInInfoReq_CmdId_GetReunionSignInInfoReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetReunionSignInInfoReq_CmdId_IsValid(int value);
const GetReunionSignInInfoReq_CmdId GetReunionSignInInfoReq_CmdId_CmdId_MIN = GetReunionSignInInfoReq_CmdId_NONE;
const GetReunionSignInInfoReq_CmdId GetReunionSignInInfoReq_CmdId_CmdId_MAX = GetReunionSignInInfoReq_CmdId_CMD_ID;
const int GetReunionSignInInfoReq_CmdId_CmdId_ARRAYSIZE = GetReunionSignInInfoReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetReunionSignInInfoReq_CmdId_descriptor();
inline const ::std::string& GetReunionSignInInfoReq_CmdId_Name(GetReunionSignInInfoReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetReunionSignInInfoReq_CmdId_descriptor(), value);
}
inline bool GetReunionSignInInfoReq_CmdId_Parse(
    const ::std::string& name, GetReunionSignInInfoReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetReunionSignInInfoReq_CmdId>(
    GetReunionSignInInfoReq_CmdId_descriptor(), name, value);
}
enum GetReunionSignInInfoRsp_CmdId {
  GetReunionSignInInfoRsp_CmdId_NONE = 0,
  GetReunionSignInInfoRsp_CmdId_CMD_ID = 5081,
  GetReunionSignInInfoRsp_CmdId_ENET_CHANNEL_ID = 0,
  GetReunionSignInInfoRsp_CmdId_ENET_IS_RELIABLE = 1,
  GetReunionSignInInfoRsp_CmdId_GetReunionSignInInfoRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetReunionSignInInfoRsp_CmdId_GetReunionSignInInfoRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetReunionSignInInfoRsp_CmdId_IsValid(int value);
const GetReunionSignInInfoRsp_CmdId GetReunionSignInInfoRsp_CmdId_CmdId_MIN = GetReunionSignInInfoRsp_CmdId_NONE;
const GetReunionSignInInfoRsp_CmdId GetReunionSignInInfoRsp_CmdId_CmdId_MAX = GetReunionSignInInfoRsp_CmdId_CMD_ID;
const int GetReunionSignInInfoRsp_CmdId_CmdId_ARRAYSIZE = GetReunionSignInInfoRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetReunionSignInInfoRsp_CmdId_descriptor();
inline const ::std::string& GetReunionSignInInfoRsp_CmdId_Name(GetReunionSignInInfoRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetReunionSignInInfoRsp_CmdId_descriptor(), value);
}
inline bool GetReunionSignInInfoRsp_CmdId_Parse(
    const ::std::string& name, GetReunionSignInInfoRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetReunionSignInInfoRsp_CmdId>(
    GetReunionSignInInfoRsp_CmdId_descriptor(), name, value);
}
enum TakeReunionSignInRewardReq_CmdId {
  TakeReunionSignInRewardReq_CmdId_NONE = 0,
  TakeReunionSignInRewardReq_CmdId_CMD_ID = 5079,
  TakeReunionSignInRewardReq_CmdId_ENET_CHANNEL_ID = 0,
  TakeReunionSignInRewardReq_CmdId_ENET_IS_RELIABLE = 1,
  TakeReunionSignInRewardReq_CmdId_IS_ALLOW_CLIENT = 1,
  TakeReunionSignInRewardReq_CmdId_TakeReunionSignInRewardReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TakeReunionSignInRewardReq_CmdId_TakeReunionSignInRewardReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TakeReunionSignInRewardReq_CmdId_IsValid(int value);
const TakeReunionSignInRewardReq_CmdId TakeReunionSignInRewardReq_CmdId_CmdId_MIN = TakeReunionSignInRewardReq_CmdId_NONE;
const TakeReunionSignInRewardReq_CmdId TakeReunionSignInRewardReq_CmdId_CmdId_MAX = TakeReunionSignInRewardReq_CmdId_CMD_ID;
const int TakeReunionSignInRewardReq_CmdId_CmdId_ARRAYSIZE = TakeReunionSignInRewardReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TakeReunionSignInRewardReq_CmdId_descriptor();
inline const ::std::string& TakeReunionSignInRewardReq_CmdId_Name(TakeReunionSignInRewardReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TakeReunionSignInRewardReq_CmdId_descriptor(), value);
}
inline bool TakeReunionSignInRewardReq_CmdId_Parse(
    const ::std::string& name, TakeReunionSignInRewardReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TakeReunionSignInRewardReq_CmdId>(
    TakeReunionSignInRewardReq_CmdId_descriptor(), name, value);
}
enum TakeReunionSignInRewardRsp_CmdId {
  TakeReunionSignInRewardRsp_CmdId_NONE = 0,
  TakeReunionSignInRewardRsp_CmdId_CMD_ID = 5072,
  TakeReunionSignInRewardRsp_CmdId_ENET_CHANNEL_ID = 0,
  TakeReunionSignInRewardRsp_CmdId_ENET_IS_RELIABLE = 1,
  TakeReunionSignInRewardRsp_CmdId_TakeReunionSignInRewardRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TakeReunionSignInRewardRsp_CmdId_TakeReunionSignInRewardRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TakeReunionSignInRewardRsp_CmdId_IsValid(int value);
const TakeReunionSignInRewardRsp_CmdId TakeReunionSignInRewardRsp_CmdId_CmdId_MIN = TakeReunionSignInRewardRsp_CmdId_NONE;
const TakeReunionSignInRewardRsp_CmdId TakeReunionSignInRewardRsp_CmdId_CmdId_MAX = TakeReunionSignInRewardRsp_CmdId_CMD_ID;
const int TakeReunionSignInRewardRsp_CmdId_CmdId_ARRAYSIZE = TakeReunionSignInRewardRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TakeReunionSignInRewardRsp_CmdId_descriptor();
inline const ::std::string& TakeReunionSignInRewardRsp_CmdId_Name(TakeReunionSignInRewardRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TakeReunionSignInRewardRsp_CmdId_descriptor(), value);
}
inline bool TakeReunionSignInRewardRsp_CmdId_Parse(
    const ::std::string& name, TakeReunionSignInRewardRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TakeReunionSignInRewardRsp_CmdId>(
    TakeReunionSignInRewardRsp_CmdId_descriptor(), name, value);
}
enum GetReunionMissionInfoReq_CmdId {
  GetReunionMissionInfoReq_CmdId_NONE = 0,
  GetReunionMissionInfoReq_CmdId_CMD_ID = 5094,
  GetReunionMissionInfoReq_CmdId_ENET_CHANNEL_ID = 0,
  GetReunionMissionInfoReq_CmdId_ENET_IS_RELIABLE = 1,
  GetReunionMissionInfoReq_CmdId_IS_ALLOW_CLIENT = 1,
  GetReunionMissionInfoReq_CmdId_GetReunionMissionInfoReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetReunionMissionInfoReq_CmdId_GetReunionMissionInfoReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetReunionMissionInfoReq_CmdId_IsValid(int value);
const GetReunionMissionInfoReq_CmdId GetReunionMissionInfoReq_CmdId_CmdId_MIN = GetReunionMissionInfoReq_CmdId_NONE;
const GetReunionMissionInfoReq_CmdId GetReunionMissionInfoReq_CmdId_CmdId_MAX = GetReunionMissionInfoReq_CmdId_CMD_ID;
const int GetReunionMissionInfoReq_CmdId_CmdId_ARRAYSIZE = GetReunionMissionInfoReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetReunionMissionInfoReq_CmdId_descriptor();
inline const ::std::string& GetReunionMissionInfoReq_CmdId_Name(GetReunionMissionInfoReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetReunionMissionInfoReq_CmdId_descriptor(), value);
}
inline bool GetReunionMissionInfoReq_CmdId_Parse(
    const ::std::string& name, GetReunionMissionInfoReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetReunionMissionInfoReq_CmdId>(
    GetReunionMissionInfoReq_CmdId_descriptor(), name, value);
}
enum GetReunionMissionInfoRsp_CmdId {
  GetReunionMissionInfoRsp_CmdId_NONE = 0,
  GetReunionMissionInfoRsp_CmdId_CMD_ID = 5099,
  GetReunionMissionInfoRsp_CmdId_ENET_CHANNEL_ID = 0,
  GetReunionMissionInfoRsp_CmdId_ENET_IS_RELIABLE = 1,
  GetReunionMissionInfoRsp_CmdId_GetReunionMissionInfoRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetReunionMissionInfoRsp_CmdId_GetReunionMissionInfoRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetReunionMissionInfoRsp_CmdId_IsValid(int value);
const GetReunionMissionInfoRsp_CmdId GetReunionMissionInfoRsp_CmdId_CmdId_MIN = GetReunionMissionInfoRsp_CmdId_NONE;
const GetReunionMissionInfoRsp_CmdId GetReunionMissionInfoRsp_CmdId_CmdId_MAX = GetReunionMissionInfoRsp_CmdId_CMD_ID;
const int GetReunionMissionInfoRsp_CmdId_CmdId_ARRAYSIZE = GetReunionMissionInfoRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetReunionMissionInfoRsp_CmdId_descriptor();
inline const ::std::string& GetReunionMissionInfoRsp_CmdId_Name(GetReunionMissionInfoRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetReunionMissionInfoRsp_CmdId_descriptor(), value);
}
inline bool GetReunionMissionInfoRsp_CmdId_Parse(
    const ::std::string& name, GetReunionMissionInfoRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetReunionMissionInfoRsp_CmdId>(
    GetReunionMissionInfoRsp_CmdId_descriptor(), name, value);
}
enum TakeReunionWatcherRewardReq_CmdId {
  TakeReunionWatcherRewardReq_CmdId_NONE = 0,
  TakeReunionWatcherRewardReq_CmdId_CMD_ID = 5070,
  TakeReunionWatcherRewardReq_CmdId_ENET_CHANNEL_ID = 0,
  TakeReunionWatcherRewardReq_CmdId_ENET_IS_RELIABLE = 1,
  TakeReunionWatcherRewardReq_CmdId_IS_ALLOW_CLIENT = 1,
  TakeReunionWatcherRewardReq_CmdId_TakeReunionWatcherRewardReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TakeReunionWatcherRewardReq_CmdId_TakeReunionWatcherRewardReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TakeReunionWatcherRewardReq_CmdId_IsValid(int value);
const TakeReunionWatcherRewardReq_CmdId TakeReunionWatcherRewardReq_CmdId_CmdId_MIN = TakeReunionWatcherRewardReq_CmdId_NONE;
const TakeReunionWatcherRewardReq_CmdId TakeReunionWatcherRewardReq_CmdId_CmdId_MAX = TakeReunionWatcherRewardReq_CmdId_CMD_ID;
const int TakeReunionWatcherRewardReq_CmdId_CmdId_ARRAYSIZE = TakeReunionWatcherRewardReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TakeReunionWatcherRewardReq_CmdId_descriptor();
inline const ::std::string& TakeReunionWatcherRewardReq_CmdId_Name(TakeReunionWatcherRewardReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TakeReunionWatcherRewardReq_CmdId_descriptor(), value);
}
inline bool TakeReunionWatcherRewardReq_CmdId_Parse(
    const ::std::string& name, TakeReunionWatcherRewardReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TakeReunionWatcherRewardReq_CmdId>(
    TakeReunionWatcherRewardReq_CmdId_descriptor(), name, value);
}
enum TakeReunionWatcherRewardRsp_CmdId {
  TakeReunionWatcherRewardRsp_CmdId_NONE = 0,
  TakeReunionWatcherRewardRsp_CmdId_CMD_ID = 5095,
  TakeReunionWatcherRewardRsp_CmdId_ENET_CHANNEL_ID = 0,
  TakeReunionWatcherRewardRsp_CmdId_ENET_IS_RELIABLE = 1,
  TakeReunionWatcherRewardRsp_CmdId_TakeReunionWatcherRewardRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TakeReunionWatcherRewardRsp_CmdId_TakeReunionWatcherRewardRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TakeReunionWatcherRewardRsp_CmdId_IsValid(int value);
const TakeReunionWatcherRewardRsp_CmdId TakeReunionWatcherRewardRsp_CmdId_CmdId_MIN = TakeReunionWatcherRewardRsp_CmdId_NONE;
const TakeReunionWatcherRewardRsp_CmdId TakeReunionWatcherRewardRsp_CmdId_CmdId_MAX = TakeReunionWatcherRewardRsp_CmdId_CMD_ID;
const int TakeReunionWatcherRewardRsp_CmdId_CmdId_ARRAYSIZE = TakeReunionWatcherRewardRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TakeReunionWatcherRewardRsp_CmdId_descriptor();
inline const ::std::string& TakeReunionWatcherRewardRsp_CmdId_Name(TakeReunionWatcherRewardRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TakeReunionWatcherRewardRsp_CmdId_descriptor(), value);
}
inline bool TakeReunionWatcherRewardRsp_CmdId_Parse(
    const ::std::string& name, TakeReunionWatcherRewardRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TakeReunionWatcherRewardRsp_CmdId>(
    TakeReunionWatcherRewardRsp_CmdId_descriptor(), name, value);
}
enum UpdateReunionWatcherNotify_CmdId {
  UpdateReunionWatcherNotify_CmdId_NONE = 0,
  UpdateReunionWatcherNotify_CmdId_CMD_ID = 5091,
  UpdateReunionWatcherNotify_CmdId_ENET_CHANNEL_ID = 0,
  UpdateReunionWatcherNotify_CmdId_ENET_IS_RELIABLE = 1,
  UpdateReunionWatcherNotify_CmdId_UpdateReunionWatcherNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UpdateReunionWatcherNotify_CmdId_UpdateReunionWatcherNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UpdateReunionWatcherNotify_CmdId_IsValid(int value);
const UpdateReunionWatcherNotify_CmdId UpdateReunionWatcherNotify_CmdId_CmdId_MIN = UpdateReunionWatcherNotify_CmdId_NONE;
const UpdateReunionWatcherNotify_CmdId UpdateReunionWatcherNotify_CmdId_CmdId_MAX = UpdateReunionWatcherNotify_CmdId_CMD_ID;
const int UpdateReunionWatcherNotify_CmdId_CmdId_ARRAYSIZE = UpdateReunionWatcherNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* UpdateReunionWatcherNotify_CmdId_descriptor();
inline const ::std::string& UpdateReunionWatcherNotify_CmdId_Name(UpdateReunionWatcherNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    UpdateReunionWatcherNotify_CmdId_descriptor(), value);
}
inline bool UpdateReunionWatcherNotify_CmdId_Parse(
    const ::std::string& name, UpdateReunionWatcherNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UpdateReunionWatcherNotify_CmdId>(
    UpdateReunionWatcherNotify_CmdId_descriptor(), name, value);
}
enum TakeReunionMissionRewardReq_CmdId {
  TakeReunionMissionRewardReq_CmdId_NONE = 0,
  TakeReunionMissionRewardReq_CmdId_CMD_ID = 5092,
  TakeReunionMissionRewardReq_CmdId_ENET_CHANNEL_ID = 0,
  TakeReunionMissionRewardReq_CmdId_ENET_IS_RELIABLE = 1,
  TakeReunionMissionRewardReq_CmdId_IS_ALLOW_CLIENT = 1,
  TakeReunionMissionRewardReq_CmdId_TakeReunionMissionRewardReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TakeReunionMissionRewardReq_CmdId_TakeReunionMissionRewardReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TakeReunionMissionRewardReq_CmdId_IsValid(int value);
const TakeReunionMissionRewardReq_CmdId TakeReunionMissionRewardReq_CmdId_CmdId_MIN = TakeReunionMissionRewardReq_CmdId_NONE;
const TakeReunionMissionRewardReq_CmdId TakeReunionMissionRewardReq_CmdId_CmdId_MAX = TakeReunionMissionRewardReq_CmdId_CMD_ID;
const int TakeReunionMissionRewardReq_CmdId_CmdId_ARRAYSIZE = TakeReunionMissionRewardReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TakeReunionMissionRewardReq_CmdId_descriptor();
inline const ::std::string& TakeReunionMissionRewardReq_CmdId_Name(TakeReunionMissionRewardReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TakeReunionMissionRewardReq_CmdId_descriptor(), value);
}
inline bool TakeReunionMissionRewardReq_CmdId_Parse(
    const ::std::string& name, TakeReunionMissionRewardReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TakeReunionMissionRewardReq_CmdId>(
    TakeReunionMissionRewardReq_CmdId_descriptor(), name, value);
}
enum TakeReunionMissionRewardRsp_CmdId {
  TakeReunionMissionRewardRsp_CmdId_NONE = 0,
  TakeReunionMissionRewardRsp_CmdId_CMD_ID = 5064,
  TakeReunionMissionRewardRsp_CmdId_ENET_CHANNEL_ID = 0,
  TakeReunionMissionRewardRsp_CmdId_ENET_IS_RELIABLE = 1,
  TakeReunionMissionRewardRsp_CmdId_IS_ALLOW_CLIENT = 1,
  TakeReunionMissionRewardRsp_CmdId_TakeReunionMissionRewardRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TakeReunionMissionRewardRsp_CmdId_TakeReunionMissionRewardRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TakeReunionMissionRewardRsp_CmdId_IsValid(int value);
const TakeReunionMissionRewardRsp_CmdId TakeReunionMissionRewardRsp_CmdId_CmdId_MIN = TakeReunionMissionRewardRsp_CmdId_NONE;
const TakeReunionMissionRewardRsp_CmdId TakeReunionMissionRewardRsp_CmdId_CmdId_MAX = TakeReunionMissionRewardRsp_CmdId_CMD_ID;
const int TakeReunionMissionRewardRsp_CmdId_CmdId_ARRAYSIZE = TakeReunionMissionRewardRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TakeReunionMissionRewardRsp_CmdId_descriptor();
inline const ::std::string& TakeReunionMissionRewardRsp_CmdId_Name(TakeReunionMissionRewardRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TakeReunionMissionRewardRsp_CmdId_descriptor(), value);
}
inline bool TakeReunionMissionRewardRsp_CmdId_Parse(
    const ::std::string& name, TakeReunionMissionRewardRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TakeReunionMissionRewardRsp_CmdId>(
    TakeReunionMissionRewardRsp_CmdId_descriptor(), name, value);
}
enum GetReunionPrivilegeInfoReq_CmdId {
  GetReunionPrivilegeInfoReq_CmdId_NONE = 0,
  GetReunionPrivilegeInfoReq_CmdId_CMD_ID = 5097,
  GetReunionPrivilegeInfoReq_CmdId_ENET_CHANNEL_ID = 0,
  GetReunionPrivilegeInfoReq_CmdId_ENET_IS_RELIABLE = 1,
  GetReunionPrivilegeInfoReq_CmdId_IS_ALLOW_CLIENT = 1,
  GetReunionPrivilegeInfoReq_CmdId_GetReunionPrivilegeInfoReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetReunionPrivilegeInfoReq_CmdId_GetReunionPrivilegeInfoReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetReunionPrivilegeInfoReq_CmdId_IsValid(int value);
const GetReunionPrivilegeInfoReq_CmdId GetReunionPrivilegeInfoReq_CmdId_CmdId_MIN = GetReunionPrivilegeInfoReq_CmdId_NONE;
const GetReunionPrivilegeInfoReq_CmdId GetReunionPrivilegeInfoReq_CmdId_CmdId_MAX = GetReunionPrivilegeInfoReq_CmdId_CMD_ID;
const int GetReunionPrivilegeInfoReq_CmdId_CmdId_ARRAYSIZE = GetReunionPrivilegeInfoReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetReunionPrivilegeInfoReq_CmdId_descriptor();
inline const ::std::string& GetReunionPrivilegeInfoReq_CmdId_Name(GetReunionPrivilegeInfoReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetReunionPrivilegeInfoReq_CmdId_descriptor(), value);
}
inline bool GetReunionPrivilegeInfoReq_CmdId_Parse(
    const ::std::string& name, GetReunionPrivilegeInfoReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetReunionPrivilegeInfoReq_CmdId>(
    GetReunionPrivilegeInfoReq_CmdId_descriptor(), name, value);
}
enum GetReunionPrivilegeInfoRsp_CmdId {
  GetReunionPrivilegeInfoRsp_CmdId_NONE = 0,
  GetReunionPrivilegeInfoRsp_CmdId_CMD_ID = 5087,
  GetReunionPrivilegeInfoRsp_CmdId_ENET_CHANNEL_ID = 0,
  GetReunionPrivilegeInfoRsp_CmdId_ENET_IS_RELIABLE = 1,
  GetReunionPrivilegeInfoRsp_CmdId_GetReunionPrivilegeInfoRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetReunionPrivilegeInfoRsp_CmdId_GetReunionPrivilegeInfoRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetReunionPrivilegeInfoRsp_CmdId_IsValid(int value);
const GetReunionPrivilegeInfoRsp_CmdId GetReunionPrivilegeInfoRsp_CmdId_CmdId_MIN = GetReunionPrivilegeInfoRsp_CmdId_NONE;
const GetReunionPrivilegeInfoRsp_CmdId GetReunionPrivilegeInfoRsp_CmdId_CmdId_MAX = GetReunionPrivilegeInfoRsp_CmdId_CMD_ID;
const int GetReunionPrivilegeInfoRsp_CmdId_CmdId_ARRAYSIZE = GetReunionPrivilegeInfoRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetReunionPrivilegeInfoRsp_CmdId_descriptor();
inline const ::std::string& GetReunionPrivilegeInfoRsp_CmdId_Name(GetReunionPrivilegeInfoRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetReunionPrivilegeInfoRsp_CmdId_descriptor(), value);
}
inline bool GetReunionPrivilegeInfoRsp_CmdId_Parse(
    const ::std::string& name, GetReunionPrivilegeInfoRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetReunionPrivilegeInfoRsp_CmdId>(
    GetReunionPrivilegeInfoRsp_CmdId_descriptor(), name, value);
}
enum ReunionSettleNotify_CmdId {
  ReunionSettleNotify_CmdId_NONE = 0,
  ReunionSettleNotify_CmdId_CMD_ID = 5073,
  ReunionSettleNotify_CmdId_ENET_CHANNEL_ID = 0,
  ReunionSettleNotify_CmdId_ENET_IS_RELIABLE = 1,
  ReunionSettleNotify_CmdId_ReunionSettleNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReunionSettleNotify_CmdId_ReunionSettleNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReunionSettleNotify_CmdId_IsValid(int value);
const ReunionSettleNotify_CmdId ReunionSettleNotify_CmdId_CmdId_MIN = ReunionSettleNotify_CmdId_NONE;
const ReunionSettleNotify_CmdId ReunionSettleNotify_CmdId_CmdId_MAX = ReunionSettleNotify_CmdId_CMD_ID;
const int ReunionSettleNotify_CmdId_CmdId_ARRAYSIZE = ReunionSettleNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReunionSettleNotify_CmdId_descriptor();
inline const ::std::string& ReunionSettleNotify_CmdId_Name(ReunionSettleNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReunionSettleNotify_CmdId_descriptor(), value);
}
inline bool ReunionSettleNotify_CmdId_Parse(
    const ::std::string& name, ReunionSettleNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReunionSettleNotify_CmdId>(
    ReunionSettleNotify_CmdId_descriptor(), name, value);
}
enum ReunionActivateNotify_CmdId {
  ReunionActivateNotify_CmdId_NONE = 0,
  ReunionActivateNotify_CmdId_CMD_ID = 5085,
  ReunionActivateNotify_CmdId_ENET_CHANNEL_ID = 0,
  ReunionActivateNotify_CmdId_ENET_IS_RELIABLE = 1,
  ReunionActivateNotify_CmdId_ReunionActivateNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReunionActivateNotify_CmdId_ReunionActivateNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReunionActivateNotify_CmdId_IsValid(int value);
const ReunionActivateNotify_CmdId ReunionActivateNotify_CmdId_CmdId_MIN = ReunionActivateNotify_CmdId_NONE;
const ReunionActivateNotify_CmdId ReunionActivateNotify_CmdId_CmdId_MAX = ReunionActivateNotify_CmdId_CMD_ID;
const int ReunionActivateNotify_CmdId_CmdId_ARRAYSIZE = ReunionActivateNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReunionActivateNotify_CmdId_descriptor();
inline const ::std::string& ReunionActivateNotify_CmdId_Name(ReunionActivateNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReunionActivateNotify_CmdId_descriptor(), value);
}
inline bool ReunionActivateNotify_CmdId_Parse(
    const ::std::string& name, ReunionActivateNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReunionActivateNotify_CmdId>(
    ReunionActivateNotify_CmdId_descriptor(), name, value);
}
enum ReunionPrivilegeChangeNotify_CmdId {
  ReunionPrivilegeChangeNotify_CmdId_NONE = 0,
  ReunionPrivilegeChangeNotify_CmdId_CMD_ID = 5098,
  ReunionPrivilegeChangeNotify_CmdId_ENET_CHANNEL_ID = 0,
  ReunionPrivilegeChangeNotify_CmdId_ENET_IS_RELIABLE = 1,
  ReunionPrivilegeChangeNotify_CmdId_ReunionPrivilegeChangeNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReunionPrivilegeChangeNotify_CmdId_ReunionPrivilegeChangeNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReunionPrivilegeChangeNotify_CmdId_IsValid(int value);
const ReunionPrivilegeChangeNotify_CmdId ReunionPrivilegeChangeNotify_CmdId_CmdId_MIN = ReunionPrivilegeChangeNotify_CmdId_NONE;
const ReunionPrivilegeChangeNotify_CmdId ReunionPrivilegeChangeNotify_CmdId_CmdId_MAX = ReunionPrivilegeChangeNotify_CmdId_CMD_ID;
const int ReunionPrivilegeChangeNotify_CmdId_CmdId_ARRAYSIZE = ReunionPrivilegeChangeNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReunionPrivilegeChangeNotify_CmdId_descriptor();
inline const ::std::string& ReunionPrivilegeChangeNotify_CmdId_Name(ReunionPrivilegeChangeNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReunionPrivilegeChangeNotify_CmdId_descriptor(), value);
}
inline bool ReunionPrivilegeChangeNotify_CmdId_Parse(
    const ::std::string& name, ReunionPrivilegeChangeNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReunionPrivilegeChangeNotify_CmdId>(
    ReunionPrivilegeChangeNotify_CmdId_descriptor(), name, value);
}
enum ReunionDailyRefreshNotify_CmdId {
  ReunionDailyRefreshNotify_CmdId_NONE = 0,
  ReunionDailyRefreshNotify_CmdId_CMD_ID = 5100,
  ReunionDailyRefreshNotify_CmdId_ENET_CHANNEL_ID = 0,
  ReunionDailyRefreshNotify_CmdId_ENET_IS_RELIABLE = 1,
  ReunionDailyRefreshNotify_CmdId_ReunionDailyRefreshNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReunionDailyRefreshNotify_CmdId_ReunionDailyRefreshNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReunionDailyRefreshNotify_CmdId_IsValid(int value);
const ReunionDailyRefreshNotify_CmdId ReunionDailyRefreshNotify_CmdId_CmdId_MIN = ReunionDailyRefreshNotify_CmdId_NONE;
const ReunionDailyRefreshNotify_CmdId ReunionDailyRefreshNotify_CmdId_CmdId_MAX = ReunionDailyRefreshNotify_CmdId_CMD_ID;
const int ReunionDailyRefreshNotify_CmdId_CmdId_ARRAYSIZE = ReunionDailyRefreshNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReunionDailyRefreshNotify_CmdId_descriptor();
inline const ::std::string& ReunionDailyRefreshNotify_CmdId_Name(ReunionDailyRefreshNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReunionDailyRefreshNotify_CmdId_descriptor(), value);
}
inline bool ReunionDailyRefreshNotify_CmdId_Parse(
    const ::std::string& name, ReunionDailyRefreshNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReunionDailyRefreshNotify_CmdId>(
    ReunionDailyRefreshNotify_CmdId_descriptor(), name, value);
}
// ===================================================================

class ReunionSignInInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReunionSignInInfo) */ {
 public:
  ReunionSignInInfo();
  virtual ~ReunionSignInInfo();

  ReunionSignInInfo(const ReunionSignInInfo& from);

  inline ReunionSignInInfo& operator=(const ReunionSignInInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReunionSignInInfo(ReunionSignInInfo&& from) noexcept
    : ReunionSignInInfo() {
    *this = ::std::move(from);
  }

  inline ReunionSignInInfo& operator=(ReunionSignInInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReunionSignInInfo& default_instance();

  static inline const ReunionSignInInfo* internal_default_instance() {
    return reinterpret_cast<const ReunionSignInInfo*>(
               &_ReunionSignInInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ReunionSignInInfo* other);
  friend void swap(ReunionSignInInfo& a, ReunionSignInInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReunionSignInInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ReunionSignInInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReunionSignInInfo& from);
  void MergeFrom(const ReunionSignInInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReunionSignInInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 reward_day_list = 8;
  int reward_day_list_size() const;
  void clear_reward_day_list();
  static const int kRewardDayListFieldNumber = 8;
  ::google::protobuf::uint32 reward_day_list(int index) const;
  void set_reward_day_list(int index, ::google::protobuf::uint32 value);
  void add_reward_day_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      reward_day_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_reward_day_list();

  // uint32 config_id = 12;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 12;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // uint32 sign_in_count = 6;
  void clear_sign_in_count();
  static const int kSignInCountFieldNumber = 6;
  ::google::protobuf::uint32 sign_in_count() const;
  void set_sign_in_count(::google::protobuf::uint32 value);

  // uint32 last_sign_in_time = 11;
  void clear_last_sign_in_time();
  static const int kLastSignInTimeFieldNumber = 11;
  ::google::protobuf::uint32 last_sign_in_time() const;
  void set_last_sign_in_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ReunionSignInInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > reward_day_list_;
  mutable int _reward_day_list_cached_byte_size_;
  ::google::protobuf::uint32 config_id_;
  ::google::protobuf::uint32 sign_in_count_;
  ::google::protobuf::uint32 last_sign_in_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReunionWatcherInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReunionWatcherInfo) */ {
 public:
  ReunionWatcherInfo();
  virtual ~ReunionWatcherInfo();

  ReunionWatcherInfo(const ReunionWatcherInfo& from);

  inline ReunionWatcherInfo& operator=(const ReunionWatcherInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReunionWatcherInfo(ReunionWatcherInfo&& from) noexcept
    : ReunionWatcherInfo() {
    *this = ::std::move(from);
  }

  inline ReunionWatcherInfo& operator=(ReunionWatcherInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReunionWatcherInfo& default_instance();

  static inline const ReunionWatcherInfo* internal_default_instance() {
    return reinterpret_cast<const ReunionWatcherInfo*>(
               &_ReunionWatcherInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ReunionWatcherInfo* other);
  friend void swap(ReunionWatcherInfo& a, ReunionWatcherInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReunionWatcherInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ReunionWatcherInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReunionWatcherInfo& from);
  void MergeFrom(const ReunionWatcherInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReunionWatcherInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 watcher_id = 3;
  void clear_watcher_id();
  static const int kWatcherIdFieldNumber = 3;
  ::google::protobuf::uint32 watcher_id() const;
  void set_watcher_id(::google::protobuf::uint32 value);

  // uint32 total_progress = 4;
  void clear_total_progress();
  static const int kTotalProgressFieldNumber = 4;
  ::google::protobuf::uint32 total_progress() const;
  void set_total_progress(::google::protobuf::uint32 value);

  // bool is_taken_reward = 14;
  void clear_is_taken_reward();
  static const int kIsTakenRewardFieldNumber = 14;
  bool is_taken_reward() const;
  void set_is_taken_reward(bool value);

  // uint32 cur_progress = 11;
  void clear_cur_progress();
  static const int kCurProgressFieldNumber = 11;
  ::google::protobuf::uint32 cur_progress() const;
  void set_cur_progress(::google::protobuf::uint32 value);

  // uint32 reward_unlock_time = 12;
  void clear_reward_unlock_time();
  static const int kRewardUnlockTimeFieldNumber = 12;
  ::google::protobuf::uint32 reward_unlock_time() const;
  void set_reward_unlock_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ReunionWatcherInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 watcher_id_;
  ::google::protobuf::uint32 total_progress_;
  bool is_taken_reward_;
  ::google::protobuf::uint32 cur_progress_;
  ::google::protobuf::uint32 reward_unlock_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReunionMissionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReunionMissionInfo) */ {
 public:
  ReunionMissionInfo();
  virtual ~ReunionMissionInfo();

  ReunionMissionInfo(const ReunionMissionInfo& from);

  inline ReunionMissionInfo& operator=(const ReunionMissionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReunionMissionInfo(ReunionMissionInfo&& from) noexcept
    : ReunionMissionInfo() {
    *this = ::std::move(from);
  }

  inline ReunionMissionInfo& operator=(ReunionMissionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReunionMissionInfo& default_instance();

  static inline const ReunionMissionInfo* internal_default_instance() {
    return reinterpret_cast<const ReunionMissionInfo*>(
               &_ReunionMissionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ReunionMissionInfo* other);
  friend void swap(ReunionMissionInfo& a, ReunionMissionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReunionMissionInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ReunionMissionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReunionMissionInfo& from);
  void MergeFrom(const ReunionMissionInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReunionMissionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ReunionWatcherInfo watcher_list = 2;
  int watcher_list_size() const;
  void clear_watcher_list();
  static const int kWatcherListFieldNumber = 2;
  const ::proto::ReunionWatcherInfo& watcher_list(int index) const;
  ::proto::ReunionWatcherInfo* mutable_watcher_list(int index);
  ::proto::ReunionWatcherInfo* add_watcher_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ReunionWatcherInfo >*
      mutable_watcher_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ReunionWatcherInfo >&
      watcher_list() const;

  // repeated .proto.ReunionWatcherInfo cur_day_watcher_list = 3;
  int cur_day_watcher_list_size() const;
  void clear_cur_day_watcher_list();
  static const int kCurDayWatcherListFieldNumber = 3;
  const ::proto::ReunionWatcherInfo& cur_day_watcher_list(int index) const;
  ::proto::ReunionWatcherInfo* mutable_cur_day_watcher_list(int index);
  ::proto::ReunionWatcherInfo* add_cur_day_watcher_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ReunionWatcherInfo >*
      mutable_cur_day_watcher_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ReunionWatcherInfo >&
      cur_day_watcher_list() const;

  // repeated bool is_taken_reward_list = 6;
  int is_taken_reward_list_size() const;
  void clear_is_taken_reward_list();
  static const int kIsTakenRewardListFieldNumber = 6;
  bool is_taken_reward_list(int index) const;
  void set_is_taken_reward_list(int index, bool value);
  void add_is_taken_reward_list(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      is_taken_reward_list() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_is_taken_reward_list();

  // uint32 next_refresh_time = 5;
  void clear_next_refresh_time();
  static const int kNextRefreshTimeFieldNumber = 5;
  ::google::protobuf::uint32 next_refresh_time() const;
  void set_next_refresh_time(::google::protobuf::uint32 value);

  // bool is_taken_reward = 8;
  void clear_is_taken_reward();
  static const int kIsTakenRewardFieldNumber = 8;
  bool is_taken_reward() const;
  void set_is_taken_reward(bool value);

  // bool is_finished = 9;
  void clear_is_finished();
  static const int kIsFinishedFieldNumber = 9;
  bool is_finished() const;
  void set_is_finished(bool value);

  // uint32 cur_score = 11;
  void clear_cur_score();
  static const int kCurScoreFieldNumber = 11;
  ::google::protobuf::uint32 cur_score() const;
  void set_cur_score(::google::protobuf::uint32 value);

  // uint32 mission_id = 12;
  void clear_mission_id();
  static const int kMissionIdFieldNumber = 12;
  ::google::protobuf::uint32 mission_id() const;
  void set_mission_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ReunionMissionInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ReunionWatcherInfo > watcher_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::ReunionWatcherInfo > cur_day_watcher_list_;
  ::google::protobuf::RepeatedField< bool > is_taken_reward_list_;
  mutable int _is_taken_reward_list_cached_byte_size_;
  ::google::protobuf::uint32 next_refresh_time_;
  bool is_taken_reward_;
  bool is_finished_;
  ::google::protobuf::uint32 cur_score_;
  ::google::protobuf::uint32 mission_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReunionPrivilegeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReunionPrivilegeInfo) */ {
 public:
  ReunionPrivilegeInfo();
  virtual ~ReunionPrivilegeInfo();

  ReunionPrivilegeInfo(const ReunionPrivilegeInfo& from);

  inline ReunionPrivilegeInfo& operator=(const ReunionPrivilegeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReunionPrivilegeInfo(ReunionPrivilegeInfo&& from) noexcept
    : ReunionPrivilegeInfo() {
    *this = ::std::move(from);
  }

  inline ReunionPrivilegeInfo& operator=(ReunionPrivilegeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReunionPrivilegeInfo& default_instance();

  static inline const ReunionPrivilegeInfo* internal_default_instance() {
    return reinterpret_cast<const ReunionPrivilegeInfo*>(
               &_ReunionPrivilegeInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ReunionPrivilegeInfo* other);
  friend void swap(ReunionPrivilegeInfo& a, ReunionPrivilegeInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReunionPrivilegeInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ReunionPrivilegeInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReunionPrivilegeInfo& from);
  void MergeFrom(const ReunionPrivilegeInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReunionPrivilegeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 total_count = 10;
  void clear_total_count();
  static const int kTotalCountFieldNumber = 10;
  ::google::protobuf::uint32 total_count() const;
  void set_total_count(::google::protobuf::uint32 value);

  // uint32 privilege_id = 4;
  void clear_privilege_id();
  static const int kPrivilegeIdFieldNumber = 4;
  ::google::protobuf::uint32 privilege_id() const;
  void set_privilege_id(::google::protobuf::uint32 value);

  // uint32 cur_day_count = 7;
  void clear_cur_day_count();
  static const int kCurDayCountFieldNumber = 7;
  ::google::protobuf::uint32 cur_day_count() const;
  void set_cur_day_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ReunionPrivilegeInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 total_count_;
  ::google::protobuf::uint32 privilege_id_;
  ::google::protobuf::uint32 cur_day_count_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReunionBriefInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReunionBriefInfo) */ {
 public:
  ReunionBriefInfo();
  virtual ~ReunionBriefInfo();

  ReunionBriefInfo(const ReunionBriefInfo& from);

  inline ReunionBriefInfo& operator=(const ReunionBriefInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReunionBriefInfo(ReunionBriefInfo&& from) noexcept
    : ReunionBriefInfo() {
    *this = ::std::move(from);
  }

  inline ReunionBriefInfo& operator=(ReunionBriefInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReunionBriefInfo& default_instance();

  static inline const ReunionBriefInfo* internal_default_instance() {
    return reinterpret_cast<const ReunionBriefInfo*>(
               &_ReunionBriefInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ReunionBriefInfo* other);
  friend void swap(ReunionBriefInfo& a, ReunionBriefInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReunionBriefInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ReunionBriefInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReunionBriefInfo& from);
  void MergeFrom(const ReunionBriefInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReunionBriefInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string version = 13;
  void clear_version();
  static const int kVersionFieldNumber = 13;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // .proto.ReunionPrivilegeInfo privilege_info = 14;
  bool has_privilege_info() const;
  void clear_privilege_info();
  static const int kPrivilegeInfoFieldNumber = 14;
  const ::proto::ReunionPrivilegeInfo& privilege_info() const;
  ::proto::ReunionPrivilegeInfo* mutable_privilege_info();
  ::proto::ReunionPrivilegeInfo* release_privilege_info();
  void set_allocated_privilege_info(::proto::ReunionPrivilegeInfo* privilege_info);

  // uint32 first_day_start_time = 3;
  void clear_first_day_start_time();
  static const int kFirstDayStartTimeFieldNumber = 3;
  ::google::protobuf::uint32 first_day_start_time() const;
  void set_first_day_start_time(::google::protobuf::uint32 value);

  // uint32 privilege_id = 5;
  void clear_privilege_id();
  static const int kPrivilegeIdFieldNumber = 5;
  ::google::protobuf::uint32 privilege_id() const;
  void set_privilege_id(::google::protobuf::uint32 value);

  // uint32 sign_in_config_id = 6;
  void clear_sign_in_config_id();
  static const int kSignInConfigIdFieldNumber = 6;
  ::google::protobuf::uint32 sign_in_config_id() const;
  void set_sign_in_config_id(::google::protobuf::uint32 value);

  // bool sign_in_has_reward = 2;
  void clear_sign_in_has_reward();
  static const int kSignInHasRewardFieldNumber = 2;
  bool sign_in_has_reward() const;
  void set_sign_in_has_reward(bool value);

  // bool is_taken_first_gift = 8;
  void clear_is_taken_first_gift();
  static const int kIsTakenFirstGiftFieldNumber = 8;
  bool is_taken_first_gift() const;
  void set_is_taken_first_gift(bool value);

  // bool mission_has_reward = 9;
  void clear_mission_has_reward();
  static const int kMissionHasRewardFieldNumber = 9;
  bool mission_has_reward() const;
  void set_mission_has_reward(bool value);

  // uint32 start_time = 7;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 7;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // uint32 mission_id = 10;
  void clear_mission_id();
  static const int kMissionIdFieldNumber = 10;
  ::google::protobuf::uint32 mission_id() const;
  void set_mission_id(::google::protobuf::uint32 value);

  // uint32 finish_time = 12;
  void clear_finish_time();
  static const int kFinishTimeFieldNumber = 12;
  ::google::protobuf::uint32 finish_time() const;
  void set_finish_time(::google::protobuf::uint32 value);

  // uint32 first_gift_reward_id = 15;
  void clear_first_gift_reward_id();
  static const int kFirstGiftRewardIdFieldNumber = 15;
  ::google::protobuf::uint32 first_gift_reward_id() const;
  void set_first_gift_reward_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ReunionBriefInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::proto::ReunionPrivilegeInfo* privilege_info_;
  ::google::protobuf::uint32 first_day_start_time_;
  ::google::protobuf::uint32 privilege_id_;
  ::google::protobuf::uint32 sign_in_config_id_;
  bool sign_in_has_reward_;
  bool is_taken_first_gift_;
  bool mission_has_reward_;
  ::google::protobuf::uint32 start_time_;
  ::google::protobuf::uint32 mission_id_;
  ::google::protobuf::uint32 finish_time_;
  ::google::protobuf::uint32 first_gift_reward_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReunionBriefInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReunionBriefInfoReq) */ {
 public:
  ReunionBriefInfoReq();
  virtual ~ReunionBriefInfoReq();

  ReunionBriefInfoReq(const ReunionBriefInfoReq& from);

  inline ReunionBriefInfoReq& operator=(const ReunionBriefInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReunionBriefInfoReq(ReunionBriefInfoReq&& from) noexcept
    : ReunionBriefInfoReq() {
    *this = ::std::move(from);
  }

  inline ReunionBriefInfoReq& operator=(ReunionBriefInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReunionBriefInfoReq& default_instance();

  static inline const ReunionBriefInfoReq* internal_default_instance() {
    return reinterpret_cast<const ReunionBriefInfoReq*>(
               &_ReunionBriefInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ReunionBriefInfoReq* other);
  friend void swap(ReunionBriefInfoReq& a, ReunionBriefInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReunionBriefInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ReunionBriefInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReunionBriefInfoReq& from);
  void MergeFrom(const ReunionBriefInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReunionBriefInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ReunionBriefInfoReq_CmdId CmdId;
  static const CmdId NONE =
    ReunionBriefInfoReq_CmdId_NONE;
  static const CmdId CMD_ID =
    ReunionBriefInfoReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ReunionBriefInfoReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ReunionBriefInfoReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ReunionBriefInfoReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ReunionBriefInfoReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ReunionBriefInfoReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ReunionBriefInfoReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ReunionBriefInfoReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ReunionBriefInfoReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ReunionBriefInfoReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ReunionBriefInfoReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.ReunionBriefInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReunionBriefInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReunionBriefInfoRsp) */ {
 public:
  ReunionBriefInfoRsp();
  virtual ~ReunionBriefInfoRsp();

  ReunionBriefInfoRsp(const ReunionBriefInfoRsp& from);

  inline ReunionBriefInfoRsp& operator=(const ReunionBriefInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReunionBriefInfoRsp(ReunionBriefInfoRsp&& from) noexcept
    : ReunionBriefInfoRsp() {
    *this = ::std::move(from);
  }

  inline ReunionBriefInfoRsp& operator=(ReunionBriefInfoRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReunionBriefInfoRsp& default_instance();

  static inline const ReunionBriefInfoRsp* internal_default_instance() {
    return reinterpret_cast<const ReunionBriefInfoRsp*>(
               &_ReunionBriefInfoRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ReunionBriefInfoRsp* other);
  friend void swap(ReunionBriefInfoRsp& a, ReunionBriefInfoRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReunionBriefInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ReunionBriefInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReunionBriefInfoRsp& from);
  void MergeFrom(const ReunionBriefInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReunionBriefInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ReunionBriefInfoRsp_CmdId CmdId;
  static const CmdId NONE =
    ReunionBriefInfoRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    ReunionBriefInfoRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ReunionBriefInfoRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ReunionBriefInfoRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ReunionBriefInfoRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ReunionBriefInfoRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ReunionBriefInfoRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ReunionBriefInfoRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ReunionBriefInfoRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ReunionBriefInfoRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ReunionBriefInfoRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.ReunionBriefInfo reunion_brief_info = 5;
  bool has_reunion_brief_info() const;
  void clear_reunion_brief_info();
  static const int kReunionBriefInfoFieldNumber = 5;
  const ::proto::ReunionBriefInfo& reunion_brief_info() const;
  ::proto::ReunionBriefInfo* mutable_reunion_brief_info();
  ::proto::ReunionBriefInfo* release_reunion_brief_info();
  void set_allocated_reunion_brief_info(::proto::ReunionBriefInfo* reunion_brief_info);

  // bool is_activate = 13;
  void clear_is_activate();
  static const int kIsActivateFieldNumber = 13;
  bool is_activate() const;
  void set_is_activate(bool value);

  // int32 retcode = 14;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 14;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ReunionBriefInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ReunionBriefInfo* reunion_brief_info_;
  bool is_activate_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeReunionFirstGiftRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeReunionFirstGiftRewardReq) */ {
 public:
  TakeReunionFirstGiftRewardReq();
  virtual ~TakeReunionFirstGiftRewardReq();

  TakeReunionFirstGiftRewardReq(const TakeReunionFirstGiftRewardReq& from);

  inline TakeReunionFirstGiftRewardReq& operator=(const TakeReunionFirstGiftRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeReunionFirstGiftRewardReq(TakeReunionFirstGiftRewardReq&& from) noexcept
    : TakeReunionFirstGiftRewardReq() {
    *this = ::std::move(from);
  }

  inline TakeReunionFirstGiftRewardReq& operator=(TakeReunionFirstGiftRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeReunionFirstGiftRewardReq& default_instance();

  static inline const TakeReunionFirstGiftRewardReq* internal_default_instance() {
    return reinterpret_cast<const TakeReunionFirstGiftRewardReq*>(
               &_TakeReunionFirstGiftRewardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(TakeReunionFirstGiftRewardReq* other);
  friend void swap(TakeReunionFirstGiftRewardReq& a, TakeReunionFirstGiftRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeReunionFirstGiftRewardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeReunionFirstGiftRewardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeReunionFirstGiftRewardReq& from);
  void MergeFrom(const TakeReunionFirstGiftRewardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeReunionFirstGiftRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TakeReunionFirstGiftRewardReq_CmdId CmdId;
  static const CmdId NONE =
    TakeReunionFirstGiftRewardReq_CmdId_NONE;
  static const CmdId CMD_ID =
    TakeReunionFirstGiftRewardReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    TakeReunionFirstGiftRewardReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    TakeReunionFirstGiftRewardReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    TakeReunionFirstGiftRewardReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return TakeReunionFirstGiftRewardReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    TakeReunionFirstGiftRewardReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    TakeReunionFirstGiftRewardReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    TakeReunionFirstGiftRewardReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return TakeReunionFirstGiftRewardReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return TakeReunionFirstGiftRewardReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return TakeReunionFirstGiftRewardReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.TakeReunionFirstGiftRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeReunionFirstGiftRewardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeReunionFirstGiftRewardRsp) */ {
 public:
  TakeReunionFirstGiftRewardRsp();
  virtual ~TakeReunionFirstGiftRewardRsp();

  TakeReunionFirstGiftRewardRsp(const TakeReunionFirstGiftRewardRsp& from);

  inline TakeReunionFirstGiftRewardRsp& operator=(const TakeReunionFirstGiftRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeReunionFirstGiftRewardRsp(TakeReunionFirstGiftRewardRsp&& from) noexcept
    : TakeReunionFirstGiftRewardRsp() {
    *this = ::std::move(from);
  }

  inline TakeReunionFirstGiftRewardRsp& operator=(TakeReunionFirstGiftRewardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeReunionFirstGiftRewardRsp& default_instance();

  static inline const TakeReunionFirstGiftRewardRsp* internal_default_instance() {
    return reinterpret_cast<const TakeReunionFirstGiftRewardRsp*>(
               &_TakeReunionFirstGiftRewardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(TakeReunionFirstGiftRewardRsp* other);
  friend void swap(TakeReunionFirstGiftRewardRsp& a, TakeReunionFirstGiftRewardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeReunionFirstGiftRewardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeReunionFirstGiftRewardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeReunionFirstGiftRewardRsp& from);
  void MergeFrom(const TakeReunionFirstGiftRewardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeReunionFirstGiftRewardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TakeReunionFirstGiftRewardRsp_CmdId CmdId;
  static const CmdId NONE =
    TakeReunionFirstGiftRewardRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    TakeReunionFirstGiftRewardRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    TakeReunionFirstGiftRewardRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    TakeReunionFirstGiftRewardRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return TakeReunionFirstGiftRewardRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    TakeReunionFirstGiftRewardRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    TakeReunionFirstGiftRewardRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    TakeReunionFirstGiftRewardRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return TakeReunionFirstGiftRewardRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return TakeReunionFirstGiftRewardRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return TakeReunionFirstGiftRewardRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 reward_id = 9;
  void clear_reward_id();
  static const int kRewardIdFieldNumber = 9;
  ::google::protobuf::int32 reward_id() const;
  void set_reward_id(::google::protobuf::int32 value);

  // int32 retcode = 15;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 15;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeReunionFirstGiftRewardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetReunionSignInInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetReunionSignInInfoReq) */ {
 public:
  GetReunionSignInInfoReq();
  virtual ~GetReunionSignInInfoReq();

  GetReunionSignInInfoReq(const GetReunionSignInInfoReq& from);

  inline GetReunionSignInInfoReq& operator=(const GetReunionSignInInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetReunionSignInInfoReq(GetReunionSignInInfoReq&& from) noexcept
    : GetReunionSignInInfoReq() {
    *this = ::std::move(from);
  }

  inline GetReunionSignInInfoReq& operator=(GetReunionSignInInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetReunionSignInInfoReq& default_instance();

  static inline const GetReunionSignInInfoReq* internal_default_instance() {
    return reinterpret_cast<const GetReunionSignInInfoReq*>(
               &_GetReunionSignInInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GetReunionSignInInfoReq* other);
  friend void swap(GetReunionSignInInfoReq& a, GetReunionSignInInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetReunionSignInInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetReunionSignInInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetReunionSignInInfoReq& from);
  void MergeFrom(const GetReunionSignInInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetReunionSignInInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetReunionSignInInfoReq_CmdId CmdId;
  static const CmdId NONE =
    GetReunionSignInInfoReq_CmdId_NONE;
  static const CmdId CMD_ID =
    GetReunionSignInInfoReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetReunionSignInInfoReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetReunionSignInInfoReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    GetReunionSignInInfoReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return GetReunionSignInInfoReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetReunionSignInInfoReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetReunionSignInInfoReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetReunionSignInInfoReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetReunionSignInInfoReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetReunionSignInInfoReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetReunionSignInInfoReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 sign_in_config_id = 10;
  void clear_sign_in_config_id();
  static const int kSignInConfigIdFieldNumber = 10;
  ::google::protobuf::uint32 sign_in_config_id() const;
  void set_sign_in_config_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetReunionSignInInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 sign_in_config_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetReunionSignInInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetReunionSignInInfoRsp) */ {
 public:
  GetReunionSignInInfoRsp();
  virtual ~GetReunionSignInInfoRsp();

  GetReunionSignInInfoRsp(const GetReunionSignInInfoRsp& from);

  inline GetReunionSignInInfoRsp& operator=(const GetReunionSignInInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetReunionSignInInfoRsp(GetReunionSignInInfoRsp&& from) noexcept
    : GetReunionSignInInfoRsp() {
    *this = ::std::move(from);
  }

  inline GetReunionSignInInfoRsp& operator=(GetReunionSignInInfoRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetReunionSignInInfoRsp& default_instance();

  static inline const GetReunionSignInInfoRsp* internal_default_instance() {
    return reinterpret_cast<const GetReunionSignInInfoRsp*>(
               &_GetReunionSignInInfoRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(GetReunionSignInInfoRsp* other);
  friend void swap(GetReunionSignInInfoRsp& a, GetReunionSignInInfoRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetReunionSignInInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetReunionSignInInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetReunionSignInInfoRsp& from);
  void MergeFrom(const GetReunionSignInInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetReunionSignInInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetReunionSignInInfoRsp_CmdId CmdId;
  static const CmdId NONE =
    GetReunionSignInInfoRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    GetReunionSignInInfoRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetReunionSignInInfoRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetReunionSignInInfoRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GetReunionSignInInfoRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetReunionSignInInfoRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetReunionSignInInfoRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetReunionSignInInfoRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetReunionSignInInfoRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetReunionSignInInfoRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetReunionSignInInfoRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.ReunionSignInInfo sign_in_info = 5;
  bool has_sign_in_info() const;
  void clear_sign_in_info();
  static const int kSignInInfoFieldNumber = 5;
  const ::proto::ReunionSignInInfo& sign_in_info() const;
  ::proto::ReunionSignInInfo* mutable_sign_in_info();
  ::proto::ReunionSignInInfo* release_sign_in_info();
  void set_allocated_sign_in_info(::proto::ReunionSignInInfo* sign_in_info);

  // int32 retcode = 15;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 15;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetReunionSignInInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ReunionSignInInfo* sign_in_info_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeReunionSignInRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeReunionSignInRewardReq) */ {
 public:
  TakeReunionSignInRewardReq();
  virtual ~TakeReunionSignInRewardReq();

  TakeReunionSignInRewardReq(const TakeReunionSignInRewardReq& from);

  inline TakeReunionSignInRewardReq& operator=(const TakeReunionSignInRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeReunionSignInRewardReq(TakeReunionSignInRewardReq&& from) noexcept
    : TakeReunionSignInRewardReq() {
    *this = ::std::move(from);
  }

  inline TakeReunionSignInRewardReq& operator=(TakeReunionSignInRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeReunionSignInRewardReq& default_instance();

  static inline const TakeReunionSignInRewardReq* internal_default_instance() {
    return reinterpret_cast<const TakeReunionSignInRewardReq*>(
               &_TakeReunionSignInRewardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(TakeReunionSignInRewardReq* other);
  friend void swap(TakeReunionSignInRewardReq& a, TakeReunionSignInRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeReunionSignInRewardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeReunionSignInRewardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeReunionSignInRewardReq& from);
  void MergeFrom(const TakeReunionSignInRewardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeReunionSignInRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TakeReunionSignInRewardReq_CmdId CmdId;
  static const CmdId NONE =
    TakeReunionSignInRewardReq_CmdId_NONE;
  static const CmdId CMD_ID =
    TakeReunionSignInRewardReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    TakeReunionSignInRewardReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    TakeReunionSignInRewardReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    TakeReunionSignInRewardReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return TakeReunionSignInRewardReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    TakeReunionSignInRewardReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    TakeReunionSignInRewardReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    TakeReunionSignInRewardReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return TakeReunionSignInRewardReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return TakeReunionSignInRewardReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return TakeReunionSignInRewardReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 reward_day = 12;
  void clear_reward_day();
  static const int kRewardDayFieldNumber = 12;
  ::google::protobuf::uint32 reward_day() const;
  void set_reward_day(::google::protobuf::uint32 value);

  // uint32 config_id = 14;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 14;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeReunionSignInRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 reward_day_;
  ::google::protobuf::uint32 config_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeReunionSignInRewardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeReunionSignInRewardRsp) */ {
 public:
  TakeReunionSignInRewardRsp();
  virtual ~TakeReunionSignInRewardRsp();

  TakeReunionSignInRewardRsp(const TakeReunionSignInRewardRsp& from);

  inline TakeReunionSignInRewardRsp& operator=(const TakeReunionSignInRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeReunionSignInRewardRsp(TakeReunionSignInRewardRsp&& from) noexcept
    : TakeReunionSignInRewardRsp() {
    *this = ::std::move(from);
  }

  inline TakeReunionSignInRewardRsp& operator=(TakeReunionSignInRewardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeReunionSignInRewardRsp& default_instance();

  static inline const TakeReunionSignInRewardRsp* internal_default_instance() {
    return reinterpret_cast<const TakeReunionSignInRewardRsp*>(
               &_TakeReunionSignInRewardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(TakeReunionSignInRewardRsp* other);
  friend void swap(TakeReunionSignInRewardRsp& a, TakeReunionSignInRewardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeReunionSignInRewardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeReunionSignInRewardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeReunionSignInRewardRsp& from);
  void MergeFrom(const TakeReunionSignInRewardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeReunionSignInRewardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TakeReunionSignInRewardRsp_CmdId CmdId;
  static const CmdId NONE =
    TakeReunionSignInRewardRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    TakeReunionSignInRewardRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    TakeReunionSignInRewardRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    TakeReunionSignInRewardRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return TakeReunionSignInRewardRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    TakeReunionSignInRewardRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    TakeReunionSignInRewardRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    TakeReunionSignInRewardRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return TakeReunionSignInRewardRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return TakeReunionSignInRewardRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return TakeReunionSignInRewardRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.ReunionSignInInfo sign_in_info = 10;
  bool has_sign_in_info() const;
  void clear_sign_in_info();
  static const int kSignInInfoFieldNumber = 10;
  const ::proto::ReunionSignInInfo& sign_in_info() const;
  ::proto::ReunionSignInInfo* mutable_sign_in_info();
  ::proto::ReunionSignInInfo* release_sign_in_info();
  void set_allocated_sign_in_info(::proto::ReunionSignInInfo* sign_in_info);

  // int32 retcode = 5;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 5;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeReunionSignInRewardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ReunionSignInInfo* sign_in_info_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetReunionMissionInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetReunionMissionInfoReq) */ {
 public:
  GetReunionMissionInfoReq();
  virtual ~GetReunionMissionInfoReq();

  GetReunionMissionInfoReq(const GetReunionMissionInfoReq& from);

  inline GetReunionMissionInfoReq& operator=(const GetReunionMissionInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetReunionMissionInfoReq(GetReunionMissionInfoReq&& from) noexcept
    : GetReunionMissionInfoReq() {
    *this = ::std::move(from);
  }

  inline GetReunionMissionInfoReq& operator=(GetReunionMissionInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetReunionMissionInfoReq& default_instance();

  static inline const GetReunionMissionInfoReq* internal_default_instance() {
    return reinterpret_cast<const GetReunionMissionInfoReq*>(
               &_GetReunionMissionInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(GetReunionMissionInfoReq* other);
  friend void swap(GetReunionMissionInfoReq& a, GetReunionMissionInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetReunionMissionInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetReunionMissionInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetReunionMissionInfoReq& from);
  void MergeFrom(const GetReunionMissionInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetReunionMissionInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetReunionMissionInfoReq_CmdId CmdId;
  static const CmdId NONE =
    GetReunionMissionInfoReq_CmdId_NONE;
  static const CmdId CMD_ID =
    GetReunionMissionInfoReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetReunionMissionInfoReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetReunionMissionInfoReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    GetReunionMissionInfoReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return GetReunionMissionInfoReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetReunionMissionInfoReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetReunionMissionInfoReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetReunionMissionInfoReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetReunionMissionInfoReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetReunionMissionInfoReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetReunionMissionInfoReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 mission_id = 14;
  void clear_mission_id();
  static const int kMissionIdFieldNumber = 14;
  ::google::protobuf::uint32 mission_id() const;
  void set_mission_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetReunionMissionInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 mission_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetReunionMissionInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetReunionMissionInfoRsp) */ {
 public:
  GetReunionMissionInfoRsp();
  virtual ~GetReunionMissionInfoRsp();

  GetReunionMissionInfoRsp(const GetReunionMissionInfoRsp& from);

  inline GetReunionMissionInfoRsp& operator=(const GetReunionMissionInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetReunionMissionInfoRsp(GetReunionMissionInfoRsp&& from) noexcept
    : GetReunionMissionInfoRsp() {
    *this = ::std::move(from);
  }

  inline GetReunionMissionInfoRsp& operator=(GetReunionMissionInfoRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetReunionMissionInfoRsp& default_instance();

  static inline const GetReunionMissionInfoRsp* internal_default_instance() {
    return reinterpret_cast<const GetReunionMissionInfoRsp*>(
               &_GetReunionMissionInfoRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(GetReunionMissionInfoRsp* other);
  friend void swap(GetReunionMissionInfoRsp& a, GetReunionMissionInfoRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetReunionMissionInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetReunionMissionInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetReunionMissionInfoRsp& from);
  void MergeFrom(const GetReunionMissionInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetReunionMissionInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetReunionMissionInfoRsp_CmdId CmdId;
  static const CmdId NONE =
    GetReunionMissionInfoRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    GetReunionMissionInfoRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetReunionMissionInfoRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetReunionMissionInfoRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GetReunionMissionInfoRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetReunionMissionInfoRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetReunionMissionInfoRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetReunionMissionInfoRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetReunionMissionInfoRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetReunionMissionInfoRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetReunionMissionInfoRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.ReunionMissionInfo mission_info = 14;
  bool has_mission_info() const;
  void clear_mission_info();
  static const int kMissionInfoFieldNumber = 14;
  const ::proto::ReunionMissionInfo& mission_info() const;
  ::proto::ReunionMissionInfo* mutable_mission_info();
  ::proto::ReunionMissionInfo* release_mission_info();
  void set_allocated_mission_info(::proto::ReunionMissionInfo* mission_info);

  // int32 retcode = 9;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 9;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetReunionMissionInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ReunionMissionInfo* mission_info_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeReunionWatcherRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeReunionWatcherRewardReq) */ {
 public:
  TakeReunionWatcherRewardReq();
  virtual ~TakeReunionWatcherRewardReq();

  TakeReunionWatcherRewardReq(const TakeReunionWatcherRewardReq& from);

  inline TakeReunionWatcherRewardReq& operator=(const TakeReunionWatcherRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeReunionWatcherRewardReq(TakeReunionWatcherRewardReq&& from) noexcept
    : TakeReunionWatcherRewardReq() {
    *this = ::std::move(from);
  }

  inline TakeReunionWatcherRewardReq& operator=(TakeReunionWatcherRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeReunionWatcherRewardReq& default_instance();

  static inline const TakeReunionWatcherRewardReq* internal_default_instance() {
    return reinterpret_cast<const TakeReunionWatcherRewardReq*>(
               &_TakeReunionWatcherRewardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(TakeReunionWatcherRewardReq* other);
  friend void swap(TakeReunionWatcherRewardReq& a, TakeReunionWatcherRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeReunionWatcherRewardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeReunionWatcherRewardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeReunionWatcherRewardReq& from);
  void MergeFrom(const TakeReunionWatcherRewardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeReunionWatcherRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TakeReunionWatcherRewardReq_CmdId CmdId;
  static const CmdId NONE =
    TakeReunionWatcherRewardReq_CmdId_NONE;
  static const CmdId CMD_ID =
    TakeReunionWatcherRewardReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    TakeReunionWatcherRewardReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    TakeReunionWatcherRewardReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    TakeReunionWatcherRewardReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return TakeReunionWatcherRewardReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    TakeReunionWatcherRewardReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    TakeReunionWatcherRewardReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    TakeReunionWatcherRewardReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return TakeReunionWatcherRewardReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return TakeReunionWatcherRewardReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return TakeReunionWatcherRewardReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 watcher_id = 12;
  void clear_watcher_id();
  static const int kWatcherIdFieldNumber = 12;
  ::google::protobuf::uint32 watcher_id() const;
  void set_watcher_id(::google::protobuf::uint32 value);

  // uint32 mission_id = 15;
  void clear_mission_id();
  static const int kMissionIdFieldNumber = 15;
  ::google::protobuf::uint32 mission_id() const;
  void set_mission_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeReunionWatcherRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 watcher_id_;
  ::google::protobuf::uint32 mission_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeReunionWatcherRewardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeReunionWatcherRewardRsp) */ {
 public:
  TakeReunionWatcherRewardRsp();
  virtual ~TakeReunionWatcherRewardRsp();

  TakeReunionWatcherRewardRsp(const TakeReunionWatcherRewardRsp& from);

  inline TakeReunionWatcherRewardRsp& operator=(const TakeReunionWatcherRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeReunionWatcherRewardRsp(TakeReunionWatcherRewardRsp&& from) noexcept
    : TakeReunionWatcherRewardRsp() {
    *this = ::std::move(from);
  }

  inline TakeReunionWatcherRewardRsp& operator=(TakeReunionWatcherRewardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeReunionWatcherRewardRsp& default_instance();

  static inline const TakeReunionWatcherRewardRsp* internal_default_instance() {
    return reinterpret_cast<const TakeReunionWatcherRewardRsp*>(
               &_TakeReunionWatcherRewardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(TakeReunionWatcherRewardRsp* other);
  friend void swap(TakeReunionWatcherRewardRsp& a, TakeReunionWatcherRewardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeReunionWatcherRewardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeReunionWatcherRewardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeReunionWatcherRewardRsp& from);
  void MergeFrom(const TakeReunionWatcherRewardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeReunionWatcherRewardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TakeReunionWatcherRewardRsp_CmdId CmdId;
  static const CmdId NONE =
    TakeReunionWatcherRewardRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    TakeReunionWatcherRewardRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    TakeReunionWatcherRewardRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    TakeReunionWatcherRewardRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return TakeReunionWatcherRewardRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    TakeReunionWatcherRewardRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    TakeReunionWatcherRewardRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    TakeReunionWatcherRewardRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return TakeReunionWatcherRewardRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return TakeReunionWatcherRewardRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return TakeReunionWatcherRewardRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 mission_id = 15;
  void clear_mission_id();
  static const int kMissionIdFieldNumber = 15;
  ::google::protobuf::uint32 mission_id() const;
  void set_mission_id(::google::protobuf::uint32 value);

  // uint32 watcher_id = 9;
  void clear_watcher_id();
  static const int kWatcherIdFieldNumber = 9;
  ::google::protobuf::uint32 watcher_id() const;
  void set_watcher_id(::google::protobuf::uint32 value);

  // int32 retcode = 10;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 10;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeReunionWatcherRewardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 mission_id_;
  ::google::protobuf::uint32 watcher_id_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateReunionWatcherNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UpdateReunionWatcherNotify) */ {
 public:
  UpdateReunionWatcherNotify();
  virtual ~UpdateReunionWatcherNotify();

  UpdateReunionWatcherNotify(const UpdateReunionWatcherNotify& from);

  inline UpdateReunionWatcherNotify& operator=(const UpdateReunionWatcherNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateReunionWatcherNotify(UpdateReunionWatcherNotify&& from) noexcept
    : UpdateReunionWatcherNotify() {
    *this = ::std::move(from);
  }

  inline UpdateReunionWatcherNotify& operator=(UpdateReunionWatcherNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateReunionWatcherNotify& default_instance();

  static inline const UpdateReunionWatcherNotify* internal_default_instance() {
    return reinterpret_cast<const UpdateReunionWatcherNotify*>(
               &_UpdateReunionWatcherNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(UpdateReunionWatcherNotify* other);
  friend void swap(UpdateReunionWatcherNotify& a, UpdateReunionWatcherNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateReunionWatcherNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateReunionWatcherNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateReunionWatcherNotify& from);
  void MergeFrom(const UpdateReunionWatcherNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateReunionWatcherNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef UpdateReunionWatcherNotify_CmdId CmdId;
  static const CmdId NONE =
    UpdateReunionWatcherNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    UpdateReunionWatcherNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    UpdateReunionWatcherNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    UpdateReunionWatcherNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return UpdateReunionWatcherNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    UpdateReunionWatcherNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    UpdateReunionWatcherNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    UpdateReunionWatcherNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return UpdateReunionWatcherNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return UpdateReunionWatcherNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return UpdateReunionWatcherNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.ReunionWatcherInfo watcher_info = 10;
  bool has_watcher_info() const;
  void clear_watcher_info();
  static const int kWatcherInfoFieldNumber = 10;
  const ::proto::ReunionWatcherInfo& watcher_info() const;
  ::proto::ReunionWatcherInfo* mutable_watcher_info();
  ::proto::ReunionWatcherInfo* release_watcher_info();
  void set_allocated_watcher_info(::proto::ReunionWatcherInfo* watcher_info);

  // uint32 mission_id = 3;
  void clear_mission_id();
  static const int kMissionIdFieldNumber = 3;
  ::google::protobuf::uint32 mission_id() const;
  void set_mission_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.UpdateReunionWatcherNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ReunionWatcherInfo* watcher_info_;
  ::google::protobuf::uint32 mission_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeReunionMissionRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeReunionMissionRewardReq) */ {
 public:
  TakeReunionMissionRewardReq();
  virtual ~TakeReunionMissionRewardReq();

  TakeReunionMissionRewardReq(const TakeReunionMissionRewardReq& from);

  inline TakeReunionMissionRewardReq& operator=(const TakeReunionMissionRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeReunionMissionRewardReq(TakeReunionMissionRewardReq&& from) noexcept
    : TakeReunionMissionRewardReq() {
    *this = ::std::move(from);
  }

  inline TakeReunionMissionRewardReq& operator=(TakeReunionMissionRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeReunionMissionRewardReq& default_instance();

  static inline const TakeReunionMissionRewardReq* internal_default_instance() {
    return reinterpret_cast<const TakeReunionMissionRewardReq*>(
               &_TakeReunionMissionRewardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(TakeReunionMissionRewardReq* other);
  friend void swap(TakeReunionMissionRewardReq& a, TakeReunionMissionRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeReunionMissionRewardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeReunionMissionRewardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeReunionMissionRewardReq& from);
  void MergeFrom(const TakeReunionMissionRewardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeReunionMissionRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TakeReunionMissionRewardReq_CmdId CmdId;
  static const CmdId NONE =
    TakeReunionMissionRewardReq_CmdId_NONE;
  static const CmdId CMD_ID =
    TakeReunionMissionRewardReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    TakeReunionMissionRewardReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    TakeReunionMissionRewardReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    TakeReunionMissionRewardReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return TakeReunionMissionRewardReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    TakeReunionMissionRewardReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    TakeReunionMissionRewardReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    TakeReunionMissionRewardReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return TakeReunionMissionRewardReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return TakeReunionMissionRewardReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return TakeReunionMissionRewardReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 mission_id = 12;
  void clear_mission_id();
  static const int kMissionIdFieldNumber = 12;
  ::google::protobuf::uint32 mission_id() const;
  void set_mission_id(::google::protobuf::uint32 value);

  // uint32 reward_index = 4;
  void clear_reward_index();
  static const int kRewardIndexFieldNumber = 4;
  ::google::protobuf::uint32 reward_index() const;
  void set_reward_index(::google::protobuf::uint32 value);

  // uint32 reward_id = 7;
  void clear_reward_id();
  static const int kRewardIdFieldNumber = 7;
  ::google::protobuf::uint32 reward_id() const;
  void set_reward_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeReunionMissionRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 mission_id_;
  ::google::protobuf::uint32 reward_index_;
  ::google::protobuf::uint32 reward_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeReunionMissionRewardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeReunionMissionRewardRsp) */ {
 public:
  TakeReunionMissionRewardRsp();
  virtual ~TakeReunionMissionRewardRsp();

  TakeReunionMissionRewardRsp(const TakeReunionMissionRewardRsp& from);

  inline TakeReunionMissionRewardRsp& operator=(const TakeReunionMissionRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeReunionMissionRewardRsp(TakeReunionMissionRewardRsp&& from) noexcept
    : TakeReunionMissionRewardRsp() {
    *this = ::std::move(from);
  }

  inline TakeReunionMissionRewardRsp& operator=(TakeReunionMissionRewardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeReunionMissionRewardRsp& default_instance();

  static inline const TakeReunionMissionRewardRsp* internal_default_instance() {
    return reinterpret_cast<const TakeReunionMissionRewardRsp*>(
               &_TakeReunionMissionRewardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(TakeReunionMissionRewardRsp* other);
  friend void swap(TakeReunionMissionRewardRsp& a, TakeReunionMissionRewardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeReunionMissionRewardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeReunionMissionRewardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeReunionMissionRewardRsp& from);
  void MergeFrom(const TakeReunionMissionRewardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeReunionMissionRewardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TakeReunionMissionRewardRsp_CmdId CmdId;
  static const CmdId NONE =
    TakeReunionMissionRewardRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    TakeReunionMissionRewardRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    TakeReunionMissionRewardRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    TakeReunionMissionRewardRsp_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    TakeReunionMissionRewardRsp_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return TakeReunionMissionRewardRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    TakeReunionMissionRewardRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    TakeReunionMissionRewardRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    TakeReunionMissionRewardRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return TakeReunionMissionRewardRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return TakeReunionMissionRewardRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return TakeReunionMissionRewardRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.ReunionMissionInfo mission_info = 9;
  bool has_mission_info() const;
  void clear_mission_info();
  static const int kMissionInfoFieldNumber = 9;
  const ::proto::ReunionMissionInfo& mission_info() const;
  ::proto::ReunionMissionInfo* mutable_mission_info();
  ::proto::ReunionMissionInfo* release_mission_info();
  void set_allocated_mission_info(::proto::ReunionMissionInfo* mission_info);

  // int32 retcode = 2;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 2;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 reward_id = 3;
  void clear_reward_id();
  static const int kRewardIdFieldNumber = 3;
  ::google::protobuf::uint32 reward_id() const;
  void set_reward_id(::google::protobuf::uint32 value);

  // uint32 reward_index = 12;
  void clear_reward_index();
  static const int kRewardIndexFieldNumber = 12;
  ::google::protobuf::uint32 reward_index() const;
  void set_reward_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeReunionMissionRewardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ReunionMissionInfo* mission_info_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 reward_id_;
  ::google::protobuf::uint32 reward_index_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetReunionPrivilegeInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetReunionPrivilegeInfoReq) */ {
 public:
  GetReunionPrivilegeInfoReq();
  virtual ~GetReunionPrivilegeInfoReq();

  GetReunionPrivilegeInfoReq(const GetReunionPrivilegeInfoReq& from);

  inline GetReunionPrivilegeInfoReq& operator=(const GetReunionPrivilegeInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetReunionPrivilegeInfoReq(GetReunionPrivilegeInfoReq&& from) noexcept
    : GetReunionPrivilegeInfoReq() {
    *this = ::std::move(from);
  }

  inline GetReunionPrivilegeInfoReq& operator=(GetReunionPrivilegeInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetReunionPrivilegeInfoReq& default_instance();

  static inline const GetReunionPrivilegeInfoReq* internal_default_instance() {
    return reinterpret_cast<const GetReunionPrivilegeInfoReq*>(
               &_GetReunionPrivilegeInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(GetReunionPrivilegeInfoReq* other);
  friend void swap(GetReunionPrivilegeInfoReq& a, GetReunionPrivilegeInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetReunionPrivilegeInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetReunionPrivilegeInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetReunionPrivilegeInfoReq& from);
  void MergeFrom(const GetReunionPrivilegeInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetReunionPrivilegeInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetReunionPrivilegeInfoReq_CmdId CmdId;
  static const CmdId NONE =
    GetReunionPrivilegeInfoReq_CmdId_NONE;
  static const CmdId CMD_ID =
    GetReunionPrivilegeInfoReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetReunionPrivilegeInfoReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetReunionPrivilegeInfoReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    GetReunionPrivilegeInfoReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return GetReunionPrivilegeInfoReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetReunionPrivilegeInfoReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetReunionPrivilegeInfoReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetReunionPrivilegeInfoReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetReunionPrivilegeInfoReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetReunionPrivilegeInfoReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetReunionPrivilegeInfoReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 privilege_id = 10;
  void clear_privilege_id();
  static const int kPrivilegeIdFieldNumber = 10;
  ::google::protobuf::uint32 privilege_id() const;
  void set_privilege_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetReunionPrivilegeInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 privilege_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetReunionPrivilegeInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetReunionPrivilegeInfoRsp) */ {
 public:
  GetReunionPrivilegeInfoRsp();
  virtual ~GetReunionPrivilegeInfoRsp();

  GetReunionPrivilegeInfoRsp(const GetReunionPrivilegeInfoRsp& from);

  inline GetReunionPrivilegeInfoRsp& operator=(const GetReunionPrivilegeInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetReunionPrivilegeInfoRsp(GetReunionPrivilegeInfoRsp&& from) noexcept
    : GetReunionPrivilegeInfoRsp() {
    *this = ::std::move(from);
  }

  inline GetReunionPrivilegeInfoRsp& operator=(GetReunionPrivilegeInfoRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetReunionPrivilegeInfoRsp& default_instance();

  static inline const GetReunionPrivilegeInfoRsp* internal_default_instance() {
    return reinterpret_cast<const GetReunionPrivilegeInfoRsp*>(
               &_GetReunionPrivilegeInfoRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(GetReunionPrivilegeInfoRsp* other);
  friend void swap(GetReunionPrivilegeInfoRsp& a, GetReunionPrivilegeInfoRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetReunionPrivilegeInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetReunionPrivilegeInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetReunionPrivilegeInfoRsp& from);
  void MergeFrom(const GetReunionPrivilegeInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetReunionPrivilegeInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetReunionPrivilegeInfoRsp_CmdId CmdId;
  static const CmdId NONE =
    GetReunionPrivilegeInfoRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    GetReunionPrivilegeInfoRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetReunionPrivilegeInfoRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetReunionPrivilegeInfoRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GetReunionPrivilegeInfoRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetReunionPrivilegeInfoRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetReunionPrivilegeInfoRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetReunionPrivilegeInfoRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetReunionPrivilegeInfoRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetReunionPrivilegeInfoRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetReunionPrivilegeInfoRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.ReunionPrivilegeInfo privilege_info = 1;
  bool has_privilege_info() const;
  void clear_privilege_info();
  static const int kPrivilegeInfoFieldNumber = 1;
  const ::proto::ReunionPrivilegeInfo& privilege_info() const;
  ::proto::ReunionPrivilegeInfo* mutable_privilege_info();
  ::proto::ReunionPrivilegeInfo* release_privilege_info();
  void set_allocated_privilege_info(::proto::ReunionPrivilegeInfo* privilege_info);

  // int32 retcode = 3;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 3;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetReunionPrivilegeInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ReunionPrivilegeInfo* privilege_info_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReunionSettleNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReunionSettleNotify) */ {
 public:
  ReunionSettleNotify();
  virtual ~ReunionSettleNotify();

  ReunionSettleNotify(const ReunionSettleNotify& from);

  inline ReunionSettleNotify& operator=(const ReunionSettleNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReunionSettleNotify(ReunionSettleNotify&& from) noexcept
    : ReunionSettleNotify() {
    *this = ::std::move(from);
  }

  inline ReunionSettleNotify& operator=(ReunionSettleNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReunionSettleNotify& default_instance();

  static inline const ReunionSettleNotify* internal_default_instance() {
    return reinterpret_cast<const ReunionSettleNotify*>(
               &_ReunionSettleNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(ReunionSettleNotify* other);
  friend void swap(ReunionSettleNotify& a, ReunionSettleNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReunionSettleNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ReunionSettleNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReunionSettleNotify& from);
  void MergeFrom(const ReunionSettleNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReunionSettleNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ReunionSettleNotify_CmdId CmdId;
  static const CmdId NONE =
    ReunionSettleNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ReunionSettleNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ReunionSettleNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ReunionSettleNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ReunionSettleNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ReunionSettleNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ReunionSettleNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ReunionSettleNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ReunionSettleNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ReunionSettleNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ReunionSettleNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.ReunionSettleNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReunionActivateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReunionActivateNotify) */ {
 public:
  ReunionActivateNotify();
  virtual ~ReunionActivateNotify();

  ReunionActivateNotify(const ReunionActivateNotify& from);

  inline ReunionActivateNotify& operator=(const ReunionActivateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReunionActivateNotify(ReunionActivateNotify&& from) noexcept
    : ReunionActivateNotify() {
    *this = ::std::move(from);
  }

  inline ReunionActivateNotify& operator=(ReunionActivateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReunionActivateNotify& default_instance();

  static inline const ReunionActivateNotify* internal_default_instance() {
    return reinterpret_cast<const ReunionActivateNotify*>(
               &_ReunionActivateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(ReunionActivateNotify* other);
  friend void swap(ReunionActivateNotify& a, ReunionActivateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReunionActivateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ReunionActivateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReunionActivateNotify& from);
  void MergeFrom(const ReunionActivateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReunionActivateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ReunionActivateNotify_CmdId CmdId;
  static const CmdId NONE =
    ReunionActivateNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ReunionActivateNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ReunionActivateNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ReunionActivateNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ReunionActivateNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ReunionActivateNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ReunionActivateNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ReunionActivateNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ReunionActivateNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ReunionActivateNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ReunionActivateNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.ReunionBriefInfo reunion_brief_info = 13;
  bool has_reunion_brief_info() const;
  void clear_reunion_brief_info();
  static const int kReunionBriefInfoFieldNumber = 13;
  const ::proto::ReunionBriefInfo& reunion_brief_info() const;
  ::proto::ReunionBriefInfo* mutable_reunion_brief_info();
  ::proto::ReunionBriefInfo* release_reunion_brief_info();
  void set_allocated_reunion_brief_info(::proto::ReunionBriefInfo* reunion_brief_info);

  // bool is_activate = 9;
  void clear_is_activate();
  static const int kIsActivateFieldNumber = 9;
  bool is_activate() const;
  void set_is_activate(bool value);

  // @@protoc_insertion_point(class_scope:proto.ReunionActivateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ReunionBriefInfo* reunion_brief_info_;
  bool is_activate_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReunionPrivilegeChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReunionPrivilegeChangeNotify) */ {
 public:
  ReunionPrivilegeChangeNotify();
  virtual ~ReunionPrivilegeChangeNotify();

  ReunionPrivilegeChangeNotify(const ReunionPrivilegeChangeNotify& from);

  inline ReunionPrivilegeChangeNotify& operator=(const ReunionPrivilegeChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReunionPrivilegeChangeNotify(ReunionPrivilegeChangeNotify&& from) noexcept
    : ReunionPrivilegeChangeNotify() {
    *this = ::std::move(from);
  }

  inline ReunionPrivilegeChangeNotify& operator=(ReunionPrivilegeChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReunionPrivilegeChangeNotify& default_instance();

  static inline const ReunionPrivilegeChangeNotify* internal_default_instance() {
    return reinterpret_cast<const ReunionPrivilegeChangeNotify*>(
               &_ReunionPrivilegeChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(ReunionPrivilegeChangeNotify* other);
  friend void swap(ReunionPrivilegeChangeNotify& a, ReunionPrivilegeChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReunionPrivilegeChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ReunionPrivilegeChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReunionPrivilegeChangeNotify& from);
  void MergeFrom(const ReunionPrivilegeChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReunionPrivilegeChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ReunionPrivilegeChangeNotify_CmdId CmdId;
  static const CmdId NONE =
    ReunionPrivilegeChangeNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ReunionPrivilegeChangeNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ReunionPrivilegeChangeNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ReunionPrivilegeChangeNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ReunionPrivilegeChangeNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ReunionPrivilegeChangeNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ReunionPrivilegeChangeNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ReunionPrivilegeChangeNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ReunionPrivilegeChangeNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ReunionPrivilegeChangeNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ReunionPrivilegeChangeNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.ReunionPrivilegeInfo privilege_info = 13;
  bool has_privilege_info() const;
  void clear_privilege_info();
  static const int kPrivilegeInfoFieldNumber = 13;
  const ::proto::ReunionPrivilegeInfo& privilege_info() const;
  ::proto::ReunionPrivilegeInfo* mutable_privilege_info();
  ::proto::ReunionPrivilegeInfo* release_privilege_info();
  void set_allocated_privilege_info(::proto::ReunionPrivilegeInfo* privilege_info);

  // @@protoc_insertion_point(class_scope:proto.ReunionPrivilegeChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ReunionPrivilegeInfo* privilege_info_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReunionDailyRefreshNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReunionDailyRefreshNotify) */ {
 public:
  ReunionDailyRefreshNotify();
  virtual ~ReunionDailyRefreshNotify();

  ReunionDailyRefreshNotify(const ReunionDailyRefreshNotify& from);

  inline ReunionDailyRefreshNotify& operator=(const ReunionDailyRefreshNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReunionDailyRefreshNotify(ReunionDailyRefreshNotify&& from) noexcept
    : ReunionDailyRefreshNotify() {
    *this = ::std::move(from);
  }

  inline ReunionDailyRefreshNotify& operator=(ReunionDailyRefreshNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReunionDailyRefreshNotify& default_instance();

  static inline const ReunionDailyRefreshNotify* internal_default_instance() {
    return reinterpret_cast<const ReunionDailyRefreshNotify*>(
               &_ReunionDailyRefreshNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(ReunionDailyRefreshNotify* other);
  friend void swap(ReunionDailyRefreshNotify& a, ReunionDailyRefreshNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReunionDailyRefreshNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ReunionDailyRefreshNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReunionDailyRefreshNotify& from);
  void MergeFrom(const ReunionDailyRefreshNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReunionDailyRefreshNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ReunionDailyRefreshNotify_CmdId CmdId;
  static const CmdId NONE =
    ReunionDailyRefreshNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ReunionDailyRefreshNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ReunionDailyRefreshNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ReunionDailyRefreshNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ReunionDailyRefreshNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ReunionDailyRefreshNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ReunionDailyRefreshNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ReunionDailyRefreshNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ReunionDailyRefreshNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ReunionDailyRefreshNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ReunionDailyRefreshNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.ReunionBriefInfo reunion_brief_info = 4;
  bool has_reunion_brief_info() const;
  void clear_reunion_brief_info();
  static const int kReunionBriefInfoFieldNumber = 4;
  const ::proto::ReunionBriefInfo& reunion_brief_info() const;
  ::proto::ReunionBriefInfo* mutable_reunion_brief_info();
  ::proto::ReunionBriefInfo* release_reunion_brief_info();
  void set_allocated_reunion_brief_info(::proto::ReunionBriefInfo* reunion_brief_info);

  // @@protoc_insertion_point(class_scope:proto.ReunionDailyRefreshNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ReunionBriefInfo* reunion_brief_info_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5freunion_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================


// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::ReunionBriefInfoReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ReunionBriefInfoReq_CmdId>() {
  return ::proto::ReunionBriefInfoReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ReunionBriefInfoRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ReunionBriefInfoRsp_CmdId>() {
  return ::proto::ReunionBriefInfoRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::TakeReunionFirstGiftRewardReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TakeReunionFirstGiftRewardReq_CmdId>() {
  return ::proto::TakeReunionFirstGiftRewardReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::TakeReunionFirstGiftRewardRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TakeReunionFirstGiftRewardRsp_CmdId>() {
  return ::proto::TakeReunionFirstGiftRewardRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetReunionSignInInfoReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetReunionSignInInfoReq_CmdId>() {
  return ::proto::GetReunionSignInInfoReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetReunionSignInInfoRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetReunionSignInInfoRsp_CmdId>() {
  return ::proto::GetReunionSignInInfoRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::TakeReunionSignInRewardReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TakeReunionSignInRewardReq_CmdId>() {
  return ::proto::TakeReunionSignInRewardReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::TakeReunionSignInRewardRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TakeReunionSignInRewardRsp_CmdId>() {
  return ::proto::TakeReunionSignInRewardRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetReunionMissionInfoReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetReunionMissionInfoReq_CmdId>() {
  return ::proto::GetReunionMissionInfoReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetReunionMissionInfoRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetReunionMissionInfoRsp_CmdId>() {
  return ::proto::GetReunionMissionInfoRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::TakeReunionWatcherRewardReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TakeReunionWatcherRewardReq_CmdId>() {
  return ::proto::TakeReunionWatcherRewardReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::TakeReunionWatcherRewardRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TakeReunionWatcherRewardRsp_CmdId>() {
  return ::proto::TakeReunionWatcherRewardRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::UpdateReunionWatcherNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::UpdateReunionWatcherNotify_CmdId>() {
  return ::proto::UpdateReunionWatcherNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::TakeReunionMissionRewardReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TakeReunionMissionRewardReq_CmdId>() {
  return ::proto::TakeReunionMissionRewardReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::TakeReunionMissionRewardRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TakeReunionMissionRewardRsp_CmdId>() {
  return ::proto::TakeReunionMissionRewardRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetReunionPrivilegeInfoReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetReunionPrivilegeInfoReq_CmdId>() {
  return ::proto::GetReunionPrivilegeInfoReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetReunionPrivilegeInfoRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetReunionPrivilegeInfoRsp_CmdId>() {
  return ::proto::GetReunionPrivilegeInfoRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ReunionSettleNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ReunionSettleNotify_CmdId>() {
  return ::proto::ReunionSettleNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ReunionActivateNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ReunionActivateNotify_CmdId>() {
  return ::proto::ReunionActivateNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ReunionPrivilegeChangeNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ReunionPrivilegeChangeNotify_CmdId>() {
  return ::proto::ReunionPrivilegeChangeNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ReunionDailyRefreshNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ReunionDailyRefreshNotify_CmdId>() {
  return ::proto::ReunionDailyRefreshNotify_CmdId_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5freunion_2eproto__INCLUDED
