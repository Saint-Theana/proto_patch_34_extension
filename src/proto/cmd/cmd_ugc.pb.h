// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_ugc.proto

#ifndef PROTOBUF_cmd_2fcmd_5fugc_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fugc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
#include "cmd/cmd_social.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class CheckUgcStateReq;
class CheckUgcStateReqDefaultTypeInternal;
extern CheckUgcStateReqDefaultTypeInternal _CheckUgcStateReq_default_instance_;
class CheckUgcStateRsp;
class CheckUgcStateRspDefaultTypeInternal;
extern CheckUgcStateRspDefaultTypeInternal _CheckUgcStateRsp_default_instance_;
class CheckUgcUpdateReq;
class CheckUgcUpdateReqDefaultTypeInternal;
extern CheckUgcUpdateReqDefaultTypeInternal _CheckUgcUpdateReq_default_instance_;
class CheckUgcUpdateRsp;
class CheckUgcUpdateRspDefaultTypeInternal;
extern CheckUgcUpdateRspDefaultTypeInternal _CheckUgcUpdateRsp_default_instance_;
class GetUgcBriefInfoReq;
class GetUgcBriefInfoReqDefaultTypeInternal;
extern GetUgcBriefInfoReqDefaultTypeInternal _GetUgcBriefInfoReq_default_instance_;
class GetUgcBriefInfoRsp;
class GetUgcBriefInfoRspDefaultTypeInternal;
extern GetUgcBriefInfoRspDefaultTypeInternal _GetUgcBriefInfoRsp_default_instance_;
class GetUgcReq;
class GetUgcReqDefaultTypeInternal;
extern GetUgcReqDefaultTypeInternal _GetUgcReq_default_instance_;
class GetUgcRsp;
class GetUgcRspDefaultTypeInternal;
extern GetUgcRspDefaultTypeInternal _GetUgcRsp_default_instance_;
class PublishUgcReq;
class PublishUgcReqDefaultTypeInternal;
extern PublishUgcReqDefaultTypeInternal _PublishUgcReq_default_instance_;
class PublishUgcRsp;
class PublishUgcRspDefaultTypeInternal;
extern PublishUgcRspDefaultTypeInternal _PublishUgcRsp_default_instance_;
class SaveUgcReq;
class SaveUgcReqDefaultTypeInternal;
extern SaveUgcReqDefaultTypeInternal _SaveUgcReq_default_instance_;
class SaveUgcRsp;
class SaveUgcRspDefaultTypeInternal;
extern SaveUgcRspDefaultTypeInternal _SaveUgcRsp_default_instance_;
class UgcMusicBriefInfo;
class UgcMusicBriefInfoDefaultTypeInternal;
extern UgcMusicBriefInfoDefaultTypeInternal _UgcMusicBriefInfo_default_instance_;
class UgcMusicNote;
class UgcMusicNoteDefaultTypeInternal;
extern UgcMusicNoteDefaultTypeInternal _UgcMusicNote_default_instance_;
class UgcMusicRecord;
class UgcMusicRecordDefaultTypeInternal;
extern UgcMusicRecordDefaultTypeInternal _UgcMusicRecord_default_instance_;
class UgcMusicTrack;
class UgcMusicTrackDefaultTypeInternal;
extern UgcMusicTrackDefaultTypeInternal _UgcMusicTrack_default_instance_;
class UgcNotify;
class UgcNotifyDefaultTypeInternal;
extern UgcNotifyDefaultTypeInternal _UgcNotify_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fugc_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fugc_2eproto

enum GetUgcReq_CmdId {
  GetUgcReq_CmdId_NONE = 0,
  GetUgcReq_CmdId_CMD_ID = 6326,
  GetUgcReq_CmdId_ENET_CHANNEL_ID = 0,
  GetUgcReq_CmdId_ENET_IS_RELIABLE = 1,
  GetUgcReq_CmdId_IS_ALLOW_CLIENT = 1,
  GetUgcReq_CmdId_GetUgcReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetUgcReq_CmdId_GetUgcReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetUgcReq_CmdId_IsValid(int value);
const GetUgcReq_CmdId GetUgcReq_CmdId_CmdId_MIN = GetUgcReq_CmdId_NONE;
const GetUgcReq_CmdId GetUgcReq_CmdId_CmdId_MAX = GetUgcReq_CmdId_CMD_ID;
const int GetUgcReq_CmdId_CmdId_ARRAYSIZE = GetUgcReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetUgcReq_CmdId_descriptor();
inline const ::std::string& GetUgcReq_CmdId_Name(GetUgcReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetUgcReq_CmdId_descriptor(), value);
}
inline bool GetUgcReq_CmdId_Parse(
    const ::std::string& name, GetUgcReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetUgcReq_CmdId>(
    GetUgcReq_CmdId_descriptor(), name, value);
}
enum GetUgcRsp_CmdId {
  GetUgcRsp_CmdId_NONE = 0,
  GetUgcRsp_CmdId_CMD_ID = 6318,
  GetUgcRsp_CmdId_ENET_CHANNEL_ID = 0,
  GetUgcRsp_CmdId_ENET_IS_RELIABLE = 1,
  GetUgcRsp_CmdId_GetUgcRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetUgcRsp_CmdId_GetUgcRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetUgcRsp_CmdId_IsValid(int value);
const GetUgcRsp_CmdId GetUgcRsp_CmdId_CmdId_MIN = GetUgcRsp_CmdId_NONE;
const GetUgcRsp_CmdId GetUgcRsp_CmdId_CmdId_MAX = GetUgcRsp_CmdId_CMD_ID;
const int GetUgcRsp_CmdId_CmdId_ARRAYSIZE = GetUgcRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetUgcRsp_CmdId_descriptor();
inline const ::std::string& GetUgcRsp_CmdId_Name(GetUgcRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetUgcRsp_CmdId_descriptor(), value);
}
inline bool GetUgcRsp_CmdId_Parse(
    const ::std::string& name, GetUgcRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetUgcRsp_CmdId>(
    GetUgcRsp_CmdId_descriptor(), name, value);
}
enum GetUgcBriefInfoReq_CmdId {
  GetUgcBriefInfoReq_CmdId_NONE = 0,
  GetUgcBriefInfoReq_CmdId_CMD_ID = 6325,
  GetUgcBriefInfoReq_CmdId_ENET_CHANNEL_ID = 0,
  GetUgcBriefInfoReq_CmdId_ENET_IS_RELIABLE = 1,
  GetUgcBriefInfoReq_CmdId_IS_ALLOW_CLIENT = 1,
  GetUgcBriefInfoReq_CmdId_GetUgcBriefInfoReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetUgcBriefInfoReq_CmdId_GetUgcBriefInfoReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetUgcBriefInfoReq_CmdId_IsValid(int value);
const GetUgcBriefInfoReq_CmdId GetUgcBriefInfoReq_CmdId_CmdId_MIN = GetUgcBriefInfoReq_CmdId_NONE;
const GetUgcBriefInfoReq_CmdId GetUgcBriefInfoReq_CmdId_CmdId_MAX = GetUgcBriefInfoReq_CmdId_CMD_ID;
const int GetUgcBriefInfoReq_CmdId_CmdId_ARRAYSIZE = GetUgcBriefInfoReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetUgcBriefInfoReq_CmdId_descriptor();
inline const ::std::string& GetUgcBriefInfoReq_CmdId_Name(GetUgcBriefInfoReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetUgcBriefInfoReq_CmdId_descriptor(), value);
}
inline bool GetUgcBriefInfoReq_CmdId_Parse(
    const ::std::string& name, GetUgcBriefInfoReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetUgcBriefInfoReq_CmdId>(
    GetUgcBriefInfoReq_CmdId_descriptor(), name, value);
}
enum GetUgcBriefInfoRsp_CmdId {
  GetUgcBriefInfoRsp_CmdId_NONE = 0,
  GetUgcBriefInfoRsp_CmdId_CMD_ID = 6307,
  GetUgcBriefInfoRsp_CmdId_ENET_CHANNEL_ID = 0,
  GetUgcBriefInfoRsp_CmdId_ENET_IS_RELIABLE = 1,
  GetUgcBriefInfoRsp_CmdId_GetUgcBriefInfoRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetUgcBriefInfoRsp_CmdId_GetUgcBriefInfoRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetUgcBriefInfoRsp_CmdId_IsValid(int value);
const GetUgcBriefInfoRsp_CmdId GetUgcBriefInfoRsp_CmdId_CmdId_MIN = GetUgcBriefInfoRsp_CmdId_NONE;
const GetUgcBriefInfoRsp_CmdId GetUgcBriefInfoRsp_CmdId_CmdId_MAX = GetUgcBriefInfoRsp_CmdId_CMD_ID;
const int GetUgcBriefInfoRsp_CmdId_CmdId_ARRAYSIZE = GetUgcBriefInfoRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetUgcBriefInfoRsp_CmdId_descriptor();
inline const ::std::string& GetUgcBriefInfoRsp_CmdId_Name(GetUgcBriefInfoRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetUgcBriefInfoRsp_CmdId_descriptor(), value);
}
inline bool GetUgcBriefInfoRsp_CmdId_Parse(
    const ::std::string& name, GetUgcBriefInfoRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetUgcBriefInfoRsp_CmdId>(
    GetUgcBriefInfoRsp_CmdId_descriptor(), name, value);
}
enum SaveUgcReq_CmdId {
  SaveUgcReq_CmdId_NONE = 0,
  SaveUgcReq_CmdId_CMD_ID = 6329,
  SaveUgcReq_CmdId_ENET_CHANNEL_ID = 0,
  SaveUgcReq_CmdId_ENET_IS_RELIABLE = 1,
  SaveUgcReq_CmdId_IS_ALLOW_CLIENT = 1,
  SaveUgcReq_CmdId_SaveUgcReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SaveUgcReq_CmdId_SaveUgcReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SaveUgcReq_CmdId_IsValid(int value);
const SaveUgcReq_CmdId SaveUgcReq_CmdId_CmdId_MIN = SaveUgcReq_CmdId_NONE;
const SaveUgcReq_CmdId SaveUgcReq_CmdId_CmdId_MAX = SaveUgcReq_CmdId_CMD_ID;
const int SaveUgcReq_CmdId_CmdId_ARRAYSIZE = SaveUgcReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SaveUgcReq_CmdId_descriptor();
inline const ::std::string& SaveUgcReq_CmdId_Name(SaveUgcReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SaveUgcReq_CmdId_descriptor(), value);
}
inline bool SaveUgcReq_CmdId_Parse(
    const ::std::string& name, SaveUgcReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SaveUgcReq_CmdId>(
    SaveUgcReq_CmdId_descriptor(), name, value);
}
enum SaveUgcRsp_CmdId {
  SaveUgcRsp_CmdId_NONE = 0,
  SaveUgcRsp_CmdId_CMD_ID = 6322,
  SaveUgcRsp_CmdId_ENET_CHANNEL_ID = 0,
  SaveUgcRsp_CmdId_ENET_IS_RELIABLE = 1,
  SaveUgcRsp_CmdId_SaveUgcRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SaveUgcRsp_CmdId_SaveUgcRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SaveUgcRsp_CmdId_IsValid(int value);
const SaveUgcRsp_CmdId SaveUgcRsp_CmdId_CmdId_MIN = SaveUgcRsp_CmdId_NONE;
const SaveUgcRsp_CmdId SaveUgcRsp_CmdId_CmdId_MAX = SaveUgcRsp_CmdId_CMD_ID;
const int SaveUgcRsp_CmdId_CmdId_ARRAYSIZE = SaveUgcRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SaveUgcRsp_CmdId_descriptor();
inline const ::std::string& SaveUgcRsp_CmdId_Name(SaveUgcRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SaveUgcRsp_CmdId_descriptor(), value);
}
inline bool SaveUgcRsp_CmdId_Parse(
    const ::std::string& name, SaveUgcRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SaveUgcRsp_CmdId>(
    SaveUgcRsp_CmdId_descriptor(), name, value);
}
enum PublishUgcReq_CmdId {
  PublishUgcReq_CmdId_NONE = 0,
  PublishUgcReq_CmdId_CMD_ID = 6344,
  PublishUgcReq_CmdId_ENET_CHANNEL_ID = 0,
  PublishUgcReq_CmdId_ENET_IS_RELIABLE = 1,
  PublishUgcReq_CmdId_IS_ALLOW_CLIENT = 1,
  PublishUgcReq_CmdId_PublishUgcReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PublishUgcReq_CmdId_PublishUgcReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PublishUgcReq_CmdId_IsValid(int value);
const PublishUgcReq_CmdId PublishUgcReq_CmdId_CmdId_MIN = PublishUgcReq_CmdId_NONE;
const PublishUgcReq_CmdId PublishUgcReq_CmdId_CmdId_MAX = PublishUgcReq_CmdId_CMD_ID;
const int PublishUgcReq_CmdId_CmdId_ARRAYSIZE = PublishUgcReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PublishUgcReq_CmdId_descriptor();
inline const ::std::string& PublishUgcReq_CmdId_Name(PublishUgcReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PublishUgcReq_CmdId_descriptor(), value);
}
inline bool PublishUgcReq_CmdId_Parse(
    const ::std::string& name, PublishUgcReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PublishUgcReq_CmdId>(
    PublishUgcReq_CmdId_descriptor(), name, value);
}
enum PublishUgcRsp_CmdId {
  PublishUgcRsp_CmdId_NONE = 0,
  PublishUgcRsp_CmdId_CMD_ID = 6349,
  PublishUgcRsp_CmdId_ENET_CHANNEL_ID = 0,
  PublishUgcRsp_CmdId_ENET_IS_RELIABLE = 1,
  PublishUgcRsp_CmdId_PublishUgcRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PublishUgcRsp_CmdId_PublishUgcRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PublishUgcRsp_CmdId_IsValid(int value);
const PublishUgcRsp_CmdId PublishUgcRsp_CmdId_CmdId_MIN = PublishUgcRsp_CmdId_NONE;
const PublishUgcRsp_CmdId PublishUgcRsp_CmdId_CmdId_MAX = PublishUgcRsp_CmdId_CMD_ID;
const int PublishUgcRsp_CmdId_CmdId_ARRAYSIZE = PublishUgcRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PublishUgcRsp_CmdId_descriptor();
inline const ::std::string& PublishUgcRsp_CmdId_Name(PublishUgcRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PublishUgcRsp_CmdId_descriptor(), value);
}
inline bool PublishUgcRsp_CmdId_Parse(
    const ::std::string& name, PublishUgcRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PublishUgcRsp_CmdId>(
    PublishUgcRsp_CmdId_descriptor(), name, value);
}
enum CheckUgcUpdateReq_CmdId {
  CheckUgcUpdateReq_CmdId_NONE = 0,
  CheckUgcUpdateReq_CmdId_CMD_ID = 6320,
  CheckUgcUpdateReq_CmdId_ENET_CHANNEL_ID = 0,
  CheckUgcUpdateReq_CmdId_ENET_IS_RELIABLE = 1,
  CheckUgcUpdateReq_CmdId_IS_ALLOW_CLIENT = 1,
  CheckUgcUpdateReq_CmdId_CheckUgcUpdateReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CheckUgcUpdateReq_CmdId_CheckUgcUpdateReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CheckUgcUpdateReq_CmdId_IsValid(int value);
const CheckUgcUpdateReq_CmdId CheckUgcUpdateReq_CmdId_CmdId_MIN = CheckUgcUpdateReq_CmdId_NONE;
const CheckUgcUpdateReq_CmdId CheckUgcUpdateReq_CmdId_CmdId_MAX = CheckUgcUpdateReq_CmdId_CMD_ID;
const int CheckUgcUpdateReq_CmdId_CmdId_ARRAYSIZE = CheckUgcUpdateReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckUgcUpdateReq_CmdId_descriptor();
inline const ::std::string& CheckUgcUpdateReq_CmdId_Name(CheckUgcUpdateReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckUgcUpdateReq_CmdId_descriptor(), value);
}
inline bool CheckUgcUpdateReq_CmdId_Parse(
    const ::std::string& name, CheckUgcUpdateReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckUgcUpdateReq_CmdId>(
    CheckUgcUpdateReq_CmdId_descriptor(), name, value);
}
enum CheckUgcUpdateRsp_CmdId {
  CheckUgcUpdateRsp_CmdId_NONE = 0,
  CheckUgcUpdateRsp_CmdId_CMD_ID = 6345,
  CheckUgcUpdateRsp_CmdId_ENET_CHANNEL_ID = 0,
  CheckUgcUpdateRsp_CmdId_ENET_IS_RELIABLE = 1,
  CheckUgcUpdateRsp_CmdId_CheckUgcUpdateRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CheckUgcUpdateRsp_CmdId_CheckUgcUpdateRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CheckUgcUpdateRsp_CmdId_IsValid(int value);
const CheckUgcUpdateRsp_CmdId CheckUgcUpdateRsp_CmdId_CmdId_MIN = CheckUgcUpdateRsp_CmdId_NONE;
const CheckUgcUpdateRsp_CmdId CheckUgcUpdateRsp_CmdId_CmdId_MAX = CheckUgcUpdateRsp_CmdId_CMD_ID;
const int CheckUgcUpdateRsp_CmdId_CmdId_ARRAYSIZE = CheckUgcUpdateRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckUgcUpdateRsp_CmdId_descriptor();
inline const ::std::string& CheckUgcUpdateRsp_CmdId_Name(CheckUgcUpdateRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckUgcUpdateRsp_CmdId_descriptor(), value);
}
inline bool CheckUgcUpdateRsp_CmdId_Parse(
    const ::std::string& name, CheckUgcUpdateRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckUgcUpdateRsp_CmdId>(
    CheckUgcUpdateRsp_CmdId_descriptor(), name, value);
}
enum UgcNotify_CmdId {
  UgcNotify_CmdId_NONE = 0,
  UgcNotify_CmdId_CMD_ID = 6341,
  UgcNotify_CmdId_ENET_CHANNEL_ID = 0,
  UgcNotify_CmdId_ENET_IS_RELIABLE = 1,
  UgcNotify_CmdId_UgcNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UgcNotify_CmdId_UgcNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UgcNotify_CmdId_IsValid(int value);
const UgcNotify_CmdId UgcNotify_CmdId_CmdId_MIN = UgcNotify_CmdId_NONE;
const UgcNotify_CmdId UgcNotify_CmdId_CmdId_MAX = UgcNotify_CmdId_CMD_ID;
const int UgcNotify_CmdId_CmdId_ARRAYSIZE = UgcNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* UgcNotify_CmdId_descriptor();
inline const ::std::string& UgcNotify_CmdId_Name(UgcNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    UgcNotify_CmdId_descriptor(), value);
}
inline bool UgcNotify_CmdId_Parse(
    const ::std::string& name, UgcNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UgcNotify_CmdId>(
    UgcNotify_CmdId_descriptor(), name, value);
}
enum CheckUgcStateReq_CmdId {
  CheckUgcStateReq_CmdId_NONE = 0,
  CheckUgcStateReq_CmdId_CMD_ID = 6342,
  CheckUgcStateReq_CmdId_ENET_CHANNEL_ID = 0,
  CheckUgcStateReq_CmdId_ENET_IS_RELIABLE = 1,
  CheckUgcStateReq_CmdId_IS_ALLOW_CLIENT = 1,
  CheckUgcStateReq_CmdId_CheckUgcStateReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CheckUgcStateReq_CmdId_CheckUgcStateReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CheckUgcStateReq_CmdId_IsValid(int value);
const CheckUgcStateReq_CmdId CheckUgcStateReq_CmdId_CmdId_MIN = CheckUgcStateReq_CmdId_NONE;
const CheckUgcStateReq_CmdId CheckUgcStateReq_CmdId_CmdId_MAX = CheckUgcStateReq_CmdId_CMD_ID;
const int CheckUgcStateReq_CmdId_CmdId_ARRAYSIZE = CheckUgcStateReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckUgcStateReq_CmdId_descriptor();
inline const ::std::string& CheckUgcStateReq_CmdId_Name(CheckUgcStateReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckUgcStateReq_CmdId_descriptor(), value);
}
inline bool CheckUgcStateReq_CmdId_Parse(
    const ::std::string& name, CheckUgcStateReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckUgcStateReq_CmdId>(
    CheckUgcStateReq_CmdId_descriptor(), name, value);
}
enum CheckUgcStateRsp_CmdId {
  CheckUgcStateRsp_CmdId_NONE = 0,
  CheckUgcStateRsp_CmdId_CMD_ID = 6314,
  CheckUgcStateRsp_CmdId_ENET_CHANNEL_ID = 0,
  CheckUgcStateRsp_CmdId_ENET_IS_RELIABLE = 1,
  CheckUgcStateRsp_CmdId_CheckUgcStateRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CheckUgcStateRsp_CmdId_CheckUgcStateRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CheckUgcStateRsp_CmdId_IsValid(int value);
const CheckUgcStateRsp_CmdId CheckUgcStateRsp_CmdId_CmdId_MIN = CheckUgcStateRsp_CmdId_NONE;
const CheckUgcStateRsp_CmdId CheckUgcStateRsp_CmdId_CmdId_MAX = CheckUgcStateRsp_CmdId_CMD_ID;
const int CheckUgcStateRsp_CmdId_CmdId_ARRAYSIZE = CheckUgcStateRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckUgcStateRsp_CmdId_descriptor();
inline const ::std::string& CheckUgcStateRsp_CmdId_Name(CheckUgcStateRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckUgcStateRsp_CmdId_descriptor(), value);
}
inline bool CheckUgcStateRsp_CmdId_Parse(
    const ::std::string& name, CheckUgcStateRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckUgcStateRsp_CmdId>(
    CheckUgcStateRsp_CmdId_descriptor(), name, value);
}
enum UgcType {
  UGC_TYPE_NONE = 0,
  UGC_TYPE_MUSIC_GAME = 1,
  UgcType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UgcType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UgcType_IsValid(int value);
const UgcType UgcType_MIN = UGC_TYPE_NONE;
const UgcType UgcType_MAX = UGC_TYPE_MUSIC_GAME;
const int UgcType_ARRAYSIZE = UgcType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UgcType_descriptor();
inline const ::std::string& UgcType_Name(UgcType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UgcType_descriptor(), value);
}
inline bool UgcType_Parse(
    const ::std::string& name, UgcType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UgcType>(
    UgcType_descriptor(), name, value);
}
enum GetUgcType {
  GET_UGC_NONE = 0,
  GET_UGC_TYPE_MINE = 1,
  GET_UGC_TYPE_PUBLISH = 2,
  GetUgcType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetUgcType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetUgcType_IsValid(int value);
const GetUgcType GetUgcType_MIN = GET_UGC_NONE;
const GetUgcType GetUgcType_MAX = GET_UGC_TYPE_PUBLISH;
const int GetUgcType_ARRAYSIZE = GetUgcType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetUgcType_descriptor();
inline const ::std::string& GetUgcType_Name(GetUgcType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetUgcType_descriptor(), value);
}
inline bool GetUgcType_Parse(
    const ::std::string& name, GetUgcType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetUgcType>(
    GetUgcType_descriptor(), name, value);
}
enum RecordUsage {
  UGC_RECORD_USAGE_NONE = 0,
  UGC_RECORD_USAGE_IMPORT = 1,
  UGC_RECORD_USAGE_PLAY = 2,
  UGC_RECORD_USAGE_TRIAL = 3,
  UGC_RECORD_USAGE_COMPARE = 4,
  RecordUsage_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RecordUsage_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RecordUsage_IsValid(int value);
const RecordUsage RecordUsage_MIN = UGC_RECORD_USAGE_NONE;
const RecordUsage RecordUsage_MAX = UGC_RECORD_USAGE_COMPARE;
const int RecordUsage_ARRAYSIZE = RecordUsage_MAX + 1;

const ::google::protobuf::EnumDescriptor* RecordUsage_descriptor();
inline const ::std::string& RecordUsage_Name(RecordUsage value) {
  return ::google::protobuf::internal::NameOfEnum(
    RecordUsage_descriptor(), value);
}
inline bool RecordUsage_Parse(
    const ::std::string& name, RecordUsage* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RecordUsage>(
    RecordUsage_descriptor(), name, value);
}
// ===================================================================

class UgcMusicNote : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UgcMusicNote) */ {
 public:
  UgcMusicNote();
  virtual ~UgcMusicNote();

  UgcMusicNote(const UgcMusicNote& from);

  inline UgcMusicNote& operator=(const UgcMusicNote& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UgcMusicNote(UgcMusicNote&& from) noexcept
    : UgcMusicNote() {
    *this = ::std::move(from);
  }

  inline UgcMusicNote& operator=(UgcMusicNote&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UgcMusicNote& default_instance();

  static inline const UgcMusicNote* internal_default_instance() {
    return reinterpret_cast<const UgcMusicNote*>(
               &_UgcMusicNote_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(UgcMusicNote* other);
  friend void swap(UgcMusicNote& a, UgcMusicNote& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UgcMusicNote* New() const PROTOBUF_FINAL { return New(NULL); }

  UgcMusicNote* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UgcMusicNote& from);
  void MergeFrom(const UgcMusicNote& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UgcMusicNote* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 end_time = 5;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 5;
  ::google::protobuf::uint32 end_time() const;
  void set_end_time(::google::protobuf::uint32 value);

  // uint32 start_time = 12;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 12;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.UgcMusicNote)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 end_time_;
  ::google::protobuf::uint32 start_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UgcMusicTrack : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UgcMusicTrack) */ {
 public:
  UgcMusicTrack();
  virtual ~UgcMusicTrack();

  UgcMusicTrack(const UgcMusicTrack& from);

  inline UgcMusicTrack& operator=(const UgcMusicTrack& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UgcMusicTrack(UgcMusicTrack&& from) noexcept
    : UgcMusicTrack() {
    *this = ::std::move(from);
  }

  inline UgcMusicTrack& operator=(UgcMusicTrack&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UgcMusicTrack& default_instance();

  static inline const UgcMusicTrack* internal_default_instance() {
    return reinterpret_cast<const UgcMusicTrack*>(
               &_UgcMusicTrack_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(UgcMusicTrack* other);
  friend void swap(UgcMusicTrack& a, UgcMusicTrack& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UgcMusicTrack* New() const PROTOBUF_FINAL { return New(NULL); }

  UgcMusicTrack* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UgcMusicTrack& from);
  void MergeFrom(const UgcMusicTrack& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UgcMusicTrack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.UgcMusicNote music_note_list = 6;
  int music_note_list_size() const;
  void clear_music_note_list();
  static const int kMusicNoteListFieldNumber = 6;
  const ::proto::UgcMusicNote& music_note_list(int index) const;
  ::proto::UgcMusicNote* mutable_music_note_list(int index);
  ::proto::UgcMusicNote* add_music_note_list();
  ::google::protobuf::RepeatedPtrField< ::proto::UgcMusicNote >*
      mutable_music_note_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::UgcMusicNote >&
      music_note_list() const;

  // @@protoc_insertion_point(class_scope:proto.UgcMusicTrack)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::UgcMusicNote > music_note_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UgcMusicRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UgcMusicRecord) */ {
 public:
  UgcMusicRecord();
  virtual ~UgcMusicRecord();

  UgcMusicRecord(const UgcMusicRecord& from);

  inline UgcMusicRecord& operator=(const UgcMusicRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UgcMusicRecord(UgcMusicRecord&& from) noexcept
    : UgcMusicRecord() {
    *this = ::std::move(from);
  }

  inline UgcMusicRecord& operator=(UgcMusicRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UgcMusicRecord& default_instance();

  static inline const UgcMusicRecord* internal_default_instance() {
    return reinterpret_cast<const UgcMusicRecord*>(
               &_UgcMusicRecord_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(UgcMusicRecord* other);
  friend void swap(UgcMusicRecord& a, UgcMusicRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UgcMusicRecord* New() const PROTOBUF_FINAL { return New(NULL); }

  UgcMusicRecord* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UgcMusicRecord& from);
  void MergeFrom(const UgcMusicRecord& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UgcMusicRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.UgcMusicTrack music_track_list = 4;
  int music_track_list_size() const;
  void clear_music_track_list();
  static const int kMusicTrackListFieldNumber = 4;
  const ::proto::UgcMusicTrack& music_track_list(int index) const;
  ::proto::UgcMusicTrack* mutable_music_track_list(int index);
  ::proto::UgcMusicTrack* add_music_track_list();
  ::google::protobuf::RepeatedPtrField< ::proto::UgcMusicTrack >*
      mutable_music_track_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::UgcMusicTrack >&
      music_track_list() const;

  // uint32 music_id = 13;
  void clear_music_id();
  static const int kMusicIdFieldNumber = 13;
  ::google::protobuf::uint32 music_id() const;
  void set_music_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.UgcMusicRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::UgcMusicTrack > music_track_list_;
  ::google::protobuf::uint32 music_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UgcMusicBriefInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UgcMusicBriefInfo) */ {
 public:
  UgcMusicBriefInfo();
  virtual ~UgcMusicBriefInfo();

  UgcMusicBriefInfo(const UgcMusicBriefInfo& from);

  inline UgcMusicBriefInfo& operator=(const UgcMusicBriefInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UgcMusicBriefInfo(UgcMusicBriefInfo&& from) noexcept
    : UgcMusicBriefInfo() {
    *this = ::std::move(from);
  }

  inline UgcMusicBriefInfo& operator=(UgcMusicBriefInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UgcMusicBriefInfo& default_instance();

  static inline const UgcMusicBriefInfo* internal_default_instance() {
    return reinterpret_cast<const UgcMusicBriefInfo*>(
               &_UgcMusicBriefInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(UgcMusicBriefInfo* other);
  friend void swap(UgcMusicBriefInfo& a, UgcMusicBriefInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UgcMusicBriefInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  UgcMusicBriefInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UgcMusicBriefInfo& from);
  void MergeFrom(const UgcMusicBriefInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UgcMusicBriefInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 before_note_list = 982;
  int before_note_list_size() const;
  void clear_before_note_list();
  static const int kBeforeNoteListFieldNumber = 982;
  ::google::protobuf::uint32 before_note_list(int index) const;
  void set_before_note_list(int index, ::google::protobuf::uint32 value);
  void add_before_note_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      before_note_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_before_note_list();

  // repeated uint32 after_note_list = 1002;
  int after_note_list_size() const;
  void clear_after_note_list();
  static const int kAfterNoteListFieldNumber = 1002;
  ::google::protobuf::uint32 after_note_list(int index) const;
  void set_after_note_list(int index, ::google::protobuf::uint32 value);
  void add_after_note_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      after_note_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_after_note_list();

  // string creator_nickname = 10;
  void clear_creator_nickname();
  static const int kCreatorNicknameFieldNumber = 10;
  const ::std::string& creator_nickname() const;
  void set_creator_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_creator_nickname(::std::string&& value);
  #endif
  void set_creator_nickname(const char* value);
  void set_creator_nickname(const char* value, size_t size);
  ::std::string* mutable_creator_nickname();
  ::std::string* release_creator_nickname();
  void set_allocated_creator_nickname(::std::string* creator_nickname);

  // uint32 music_id = 2;
  void clear_music_id();
  static const int kMusicIdFieldNumber = 2;
  ::google::protobuf::uint32 music_id() const;
  void set_music_id(::google::protobuf::uint32 value);

  // uint32 save_time = 3;
  void clear_save_time();
  static const int kSaveTimeFieldNumber = 3;
  ::google::protobuf::uint32 save_time() const;
  void set_save_time(::google::protobuf::uint32 value);

  // uint64 ugc_guid = 4;
  void clear_ugc_guid();
  static const int kUgcGuidFieldNumber = 4;
  ::google::protobuf::uint64 ugc_guid() const;
  void set_ugc_guid(::google::protobuf::uint64 value);

  // uint64 import_from_ugc_guid = 5;
  void clear_import_from_ugc_guid();
  static const int kImportFromUgcGuidFieldNumber = 5;
  ::google::protobuf::uint64 import_from_ugc_guid() const;
  void set_import_from_ugc_guid(::google::protobuf::uint64 value);

  // uint32 self_max_score = 6;
  void clear_self_max_score();
  static const int kSelfMaxScoreFieldNumber = 6;
  ::google::protobuf::uint32 self_max_score() const;
  void set_self_max_score(::google::protobuf::uint32 value);

  // uint32 note_count = 7;
  void clear_note_count();
  static const int kNoteCountFieldNumber = 7;
  ::google::protobuf::uint32 note_count() const;
  void set_note_count(::google::protobuf::uint32 value);

  // bool is_published = 8;
  void clear_is_published();
  static const int kIsPublishedFieldNumber = 8;
  bool is_published() const;
  void set_is_published(bool value);

  // bool is_played = 1;
  void clear_is_played();
  static const int kIsPlayedFieldNumber = 1;
  bool is_played() const;
  void set_is_played(bool value);

  // bool is_psn_platform = 9;
  void clear_is_psn_platform();
  static const int kIsPsnPlatformFieldNumber = 9;
  bool is_psn_platform() const;
  void set_is_psn_platform(bool value);

  // bool is_changed_after_publish = 11;
  void clear_is_changed_after_publish();
  static const int kIsChangedAfterPublishFieldNumber = 11;
  bool is_changed_after_publish() const;
  void set_is_changed_after_publish(bool value);

  // uint32 save_idx = 12;
  void clear_save_idx();
  static const int kSaveIdxFieldNumber = 12;
  ::google::protobuf::uint32 save_idx() const;
  void set_save_idx(::google::protobuf::uint32 value);

  // uint32 publish_time = 13;
  void clear_publish_time();
  static const int kPublishTimeFieldNumber = 13;
  ::google::protobuf::uint32 publish_time() const;
  void set_publish_time(::google::protobuf::uint32 value);

  // uint32 max_score = 14;
  void clear_max_score();
  static const int kMaxScoreFieldNumber = 14;
  ::google::protobuf::uint32 max_score() const;
  void set_max_score(::google::protobuf::uint32 value);

  // uint32 version = 15;
  void clear_version();
  static const int kVersionFieldNumber = 15;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // uint32 real_time_edit_time = 576;
  void clear_real_time_edit_time();
  static const int kRealTimeEditTimeFieldNumber = 576;
  ::google::protobuf::uint32 real_time_edit_time() const;
  void set_real_time_edit_time(::google::protobuf::uint32 value);

  // uint32 save_page_type = 1182;
  void clear_save_page_type();
  static const int kSavePageTypeFieldNumber = 1182;
  ::google::protobuf::uint32 save_page_type() const;
  void set_save_page_type(::google::protobuf::uint32 value);

  // uint32 time_line_edit_time = 1822;
  void clear_time_line_edit_time();
  static const int kTimeLineEditTimeFieldNumber = 1822;
  ::google::protobuf::uint32 time_line_edit_time() const;
  void set_time_line_edit_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.UgcMusicBriefInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > before_note_list_;
  mutable int _before_note_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > after_note_list_;
  mutable int _after_note_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr creator_nickname_;
  ::google::protobuf::uint32 music_id_;
  ::google::protobuf::uint32 save_time_;
  ::google::protobuf::uint64 ugc_guid_;
  ::google::protobuf::uint64 import_from_ugc_guid_;
  ::google::protobuf::uint32 self_max_score_;
  ::google::protobuf::uint32 note_count_;
  bool is_published_;
  bool is_played_;
  bool is_psn_platform_;
  bool is_changed_after_publish_;
  ::google::protobuf::uint32 save_idx_;
  ::google::protobuf::uint32 publish_time_;
  ::google::protobuf::uint32 max_score_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 real_time_edit_time_;
  ::google::protobuf::uint32 save_page_type_;
  ::google::protobuf::uint32 time_line_edit_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetUgcReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetUgcReq) */ {
 public:
  GetUgcReq();
  virtual ~GetUgcReq();

  GetUgcReq(const GetUgcReq& from);

  inline GetUgcReq& operator=(const GetUgcReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetUgcReq(GetUgcReq&& from) noexcept
    : GetUgcReq() {
    *this = ::std::move(from);
  }

  inline GetUgcReq& operator=(GetUgcReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUgcReq& default_instance();

  static inline const GetUgcReq* internal_default_instance() {
    return reinterpret_cast<const GetUgcReq*>(
               &_GetUgcReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(GetUgcReq* other);
  friend void swap(GetUgcReq& a, GetUgcReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetUgcReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetUgcReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetUgcReq& from);
  void MergeFrom(const GetUgcReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetUgcReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetUgcReq_CmdId CmdId;
  static const CmdId NONE =
    GetUgcReq_CmdId_NONE;
  static const CmdId CMD_ID =
    GetUgcReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetUgcReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetUgcReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    GetUgcReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return GetUgcReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetUgcReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetUgcReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetUgcReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetUgcReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetUgcReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetUgcReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint64 ugc_guid = 5;
  void clear_ugc_guid();
  static const int kUgcGuidFieldNumber = 5;
  ::google::protobuf::uint64 ugc_guid() const;
  void set_ugc_guid(::google::protobuf::uint64 value);

  // .proto.RecordUsage ugc_record_usage = 6;
  void clear_ugc_record_usage();
  static const int kUgcRecordUsageFieldNumber = 6;
  ::proto::RecordUsage ugc_record_usage() const;
  void set_ugc_record_usage(::proto::RecordUsage value);

  // .proto.UgcType ugc_type = 8;
  void clear_ugc_type();
  static const int kUgcTypeFieldNumber = 8;
  ::proto::UgcType ugc_type() const;
  void set_ugc_type(::proto::UgcType value);

  // bool is_require_brief = 11;
  void clear_is_require_brief();
  static const int kIsRequireBriefFieldNumber = 11;
  bool is_require_brief() const;
  void set_is_require_brief(bool value);

  // .proto.GetUgcType get_ugc_type = 13;
  void clear_get_ugc_type();
  static const int kGetUgcTypeFieldNumber = 13;
  ::proto::GetUgcType get_ugc_type() const;
  void set_get_ugc_type(::proto::GetUgcType value);

  // @@protoc_insertion_point(class_scope:proto.GetUgcReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 ugc_guid_;
  int ugc_record_usage_;
  int ugc_type_;
  bool is_require_brief_;
  int get_ugc_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetUgcRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetUgcRsp) */ {
 public:
  GetUgcRsp();
  virtual ~GetUgcRsp();

  GetUgcRsp(const GetUgcRsp& from);

  inline GetUgcRsp& operator=(const GetUgcRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetUgcRsp(GetUgcRsp&& from) noexcept
    : GetUgcRsp() {
    *this = ::std::move(from);
  }

  inline GetUgcRsp& operator=(GetUgcRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUgcRsp& default_instance();

  enum RecordCase {
    kMusicRecord = 4,
    RECORD_NOT_SET = 0,
  };

  enum BriefCase {
    kMusicBriefInfo = 1819,
    BRIEF_NOT_SET = 0,
  };

  static inline const GetUgcRsp* internal_default_instance() {
    return reinterpret_cast<const GetUgcRsp*>(
               &_GetUgcRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(GetUgcRsp* other);
  friend void swap(GetUgcRsp& a, GetUgcRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetUgcRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetUgcRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetUgcRsp& from);
  void MergeFrom(const GetUgcRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetUgcRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetUgcRsp_CmdId CmdId;
  static const CmdId NONE =
    GetUgcRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    GetUgcRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetUgcRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetUgcRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GetUgcRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetUgcRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetUgcRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetUgcRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetUgcRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetUgcRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetUgcRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.RecordUsage ugc_record_usage = 14;
  void clear_ugc_record_usage();
  static const int kUgcRecordUsageFieldNumber = 14;
  ::proto::RecordUsage ugc_record_usage() const;
  void set_ugc_record_usage(::proto::RecordUsage value);

  // int32 retcode = 2;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 2;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // .proto.UgcType ugc_type = 10;
  void clear_ugc_type();
  static const int kUgcTypeFieldNumber = 10;
  ::proto::UgcType ugc_type() const;
  void set_ugc_type(::proto::UgcType value);

  // uint64 ugc_guid = 15;
  void clear_ugc_guid();
  static const int kUgcGuidFieldNumber = 15;
  ::google::protobuf::uint64 ugc_guid() const;
  void set_ugc_guid(::google::protobuf::uint64 value);

  // .proto.UgcMusicRecord music_record = 4;
  bool has_music_record() const;
  void clear_music_record();
  static const int kMusicRecordFieldNumber = 4;
  const ::proto::UgcMusicRecord& music_record() const;
  ::proto::UgcMusicRecord* mutable_music_record();
  ::proto::UgcMusicRecord* release_music_record();
  void set_allocated_music_record(::proto::UgcMusicRecord* music_record);

  // .proto.UgcMusicBriefInfo music_brief_info = 1819;
  bool has_music_brief_info() const;
  void clear_music_brief_info();
  static const int kMusicBriefInfoFieldNumber = 1819;
  const ::proto::UgcMusicBriefInfo& music_brief_info() const;
  ::proto::UgcMusicBriefInfo* mutable_music_brief_info();
  ::proto::UgcMusicBriefInfo* release_music_brief_info();
  void set_allocated_music_brief_info(::proto::UgcMusicBriefInfo* music_brief_info);

  RecordCase record_case() const;
  BriefCase brief_case() const;
  // @@protoc_insertion_point(class_scope:proto.GetUgcRsp)
 private:
  void set_has_music_record();
  void set_has_music_brief_info();

  inline bool has_record() const;
  void clear_record();
  inline void clear_has_record();

  inline bool has_brief() const;
  void clear_brief();
  inline void clear_has_brief();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int ugc_record_usage_;
  ::google::protobuf::int32 retcode_;
  int ugc_type_;
  ::google::protobuf::uint64 ugc_guid_;
  union RecordUnion {
    RecordUnion() {}
    ::proto::UgcMusicRecord* music_record_;
  } record_;
  union BriefUnion {
    BriefUnion() {}
    ::proto::UgcMusicBriefInfo* music_brief_info_;
  } brief_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[2];

  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetUgcBriefInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetUgcBriefInfoReq) */ {
 public:
  GetUgcBriefInfoReq();
  virtual ~GetUgcBriefInfoReq();

  GetUgcBriefInfoReq(const GetUgcBriefInfoReq& from);

  inline GetUgcBriefInfoReq& operator=(const GetUgcBriefInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetUgcBriefInfoReq(GetUgcBriefInfoReq&& from) noexcept
    : GetUgcBriefInfoReq() {
    *this = ::std::move(from);
  }

  inline GetUgcBriefInfoReq& operator=(GetUgcBriefInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUgcBriefInfoReq& default_instance();

  static inline const GetUgcBriefInfoReq* internal_default_instance() {
    return reinterpret_cast<const GetUgcBriefInfoReq*>(
               &_GetUgcBriefInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(GetUgcBriefInfoReq* other);
  friend void swap(GetUgcBriefInfoReq& a, GetUgcBriefInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetUgcBriefInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetUgcBriefInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetUgcBriefInfoReq& from);
  void MergeFrom(const GetUgcBriefInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetUgcBriefInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetUgcBriefInfoReq_CmdId CmdId;
  static const CmdId NONE =
    GetUgcBriefInfoReq_CmdId_NONE;
  static const CmdId CMD_ID =
    GetUgcBriefInfoReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetUgcBriefInfoReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetUgcBriefInfoReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    GetUgcBriefInfoReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return GetUgcBriefInfoReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetUgcBriefInfoReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetUgcBriefInfoReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetUgcBriefInfoReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetUgcBriefInfoReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetUgcBriefInfoReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetUgcBriefInfoReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.UgcType ugc_type = 10;
  void clear_ugc_type();
  static const int kUgcTypeFieldNumber = 10;
  ::proto::UgcType ugc_type() const;
  void set_ugc_type(::proto::UgcType value);

  // uint64 ugc_guid = 7;
  void clear_ugc_guid();
  static const int kUgcGuidFieldNumber = 7;
  ::google::protobuf::uint64 ugc_guid() const;
  void set_ugc_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.GetUgcBriefInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int ugc_type_;
  ::google::protobuf::uint64 ugc_guid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetUgcBriefInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetUgcBriefInfoRsp) */ {
 public:
  GetUgcBriefInfoRsp();
  virtual ~GetUgcBriefInfoRsp();

  GetUgcBriefInfoRsp(const GetUgcBriefInfoRsp& from);

  inline GetUgcBriefInfoRsp& operator=(const GetUgcBriefInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetUgcBriefInfoRsp(GetUgcBriefInfoRsp&& from) noexcept
    : GetUgcBriefInfoRsp() {
    *this = ::std::move(from);
  }

  inline GetUgcBriefInfoRsp& operator=(GetUgcBriefInfoRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUgcBriefInfoRsp& default_instance();

  enum BriefCase {
    kMusicBriefInfo = 2,
    BRIEF_NOT_SET = 0,
  };

  static inline const GetUgcBriefInfoRsp* internal_default_instance() {
    return reinterpret_cast<const GetUgcBriefInfoRsp*>(
               &_GetUgcBriefInfoRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(GetUgcBriefInfoRsp* other);
  friend void swap(GetUgcBriefInfoRsp& a, GetUgcBriefInfoRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetUgcBriefInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetUgcBriefInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetUgcBriefInfoRsp& from);
  void MergeFrom(const GetUgcBriefInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetUgcBriefInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetUgcBriefInfoRsp_CmdId CmdId;
  static const CmdId NONE =
    GetUgcBriefInfoRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    GetUgcBriefInfoRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetUgcBriefInfoRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetUgcBriefInfoRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GetUgcBriefInfoRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetUgcBriefInfoRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetUgcBriefInfoRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetUgcBriefInfoRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetUgcBriefInfoRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetUgcBriefInfoRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetUgcBriefInfoRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint64 ugc_guid = 3;
  void clear_ugc_guid();
  static const int kUgcGuidFieldNumber = 3;
  ::google::protobuf::uint64 ugc_guid() const;
  void set_ugc_guid(::google::protobuf::uint64 value);

  // int32 retcode = 4;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // .proto.UgcType ugc_type = 11;
  void clear_ugc_type();
  static const int kUgcTypeFieldNumber = 11;
  ::proto::UgcType ugc_type() const;
  void set_ugc_type(::proto::UgcType value);

  // .proto.UgcMusicBriefInfo music_brief_info = 2;
  bool has_music_brief_info() const;
  void clear_music_brief_info();
  static const int kMusicBriefInfoFieldNumber = 2;
  const ::proto::UgcMusicBriefInfo& music_brief_info() const;
  ::proto::UgcMusicBriefInfo* mutable_music_brief_info();
  ::proto::UgcMusicBriefInfo* release_music_brief_info();
  void set_allocated_music_brief_info(::proto::UgcMusicBriefInfo* music_brief_info);

  BriefCase brief_case() const;
  // @@protoc_insertion_point(class_scope:proto.GetUgcBriefInfoRsp)
 private:
  void set_has_music_brief_info();

  inline bool has_brief() const;
  void clear_brief();
  inline void clear_has_brief();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 ugc_guid_;
  ::google::protobuf::int32 retcode_;
  int ugc_type_;
  union BriefUnion {
    BriefUnion() {}
    ::proto::UgcMusicBriefInfo* music_brief_info_;
  } brief_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SaveUgcReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SaveUgcReq) */ {
 public:
  SaveUgcReq();
  virtual ~SaveUgcReq();

  SaveUgcReq(const SaveUgcReq& from);

  inline SaveUgcReq& operator=(const SaveUgcReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SaveUgcReq(SaveUgcReq&& from) noexcept
    : SaveUgcReq() {
    *this = ::std::move(from);
  }

  inline SaveUgcReq& operator=(SaveUgcReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveUgcReq& default_instance();

  enum RecordCase {
    kMusicRecord = 2,
    RECORD_NOT_SET = 0,
  };

  enum BriefCase {
    kMusicBriefInfo = 1488,
    BRIEF_NOT_SET = 0,
  };

  static inline const SaveUgcReq* internal_default_instance() {
    return reinterpret_cast<const SaveUgcReq*>(
               &_SaveUgcReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(SaveUgcReq* other);
  friend void swap(SaveUgcReq& a, SaveUgcReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SaveUgcReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SaveUgcReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SaveUgcReq& from);
  void MergeFrom(const SaveUgcReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SaveUgcReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SaveUgcReq_CmdId CmdId;
  static const CmdId NONE =
    SaveUgcReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SaveUgcReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SaveUgcReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SaveUgcReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SaveUgcReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SaveUgcReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SaveUgcReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SaveUgcReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SaveUgcReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SaveUgcReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SaveUgcReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SaveUgcReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.UgcType ugc_type = 11;
  void clear_ugc_type();
  static const int kUgcTypeFieldNumber = 11;
  ::proto::UgcType ugc_type() const;
  void set_ugc_type(::proto::UgcType value);

  // .proto.UgcMusicRecord music_record = 2;
  bool has_music_record() const;
  void clear_music_record();
  static const int kMusicRecordFieldNumber = 2;
  const ::proto::UgcMusicRecord& music_record() const;
  ::proto::UgcMusicRecord* mutable_music_record();
  ::proto::UgcMusicRecord* release_music_record();
  void set_allocated_music_record(::proto::UgcMusicRecord* music_record);

  // .proto.UgcMusicBriefInfo music_brief_info = 1488;
  bool has_music_brief_info() const;
  void clear_music_brief_info();
  static const int kMusicBriefInfoFieldNumber = 1488;
  const ::proto::UgcMusicBriefInfo& music_brief_info() const;
  ::proto::UgcMusicBriefInfo* mutable_music_brief_info();
  ::proto::UgcMusicBriefInfo* release_music_brief_info();
  void set_allocated_music_brief_info(::proto::UgcMusicBriefInfo* music_brief_info);

  RecordCase record_case() const;
  BriefCase brief_case() const;
  // @@protoc_insertion_point(class_scope:proto.SaveUgcReq)
 private:
  void set_has_music_record();
  void set_has_music_brief_info();

  inline bool has_record() const;
  void clear_record();
  inline void clear_has_record();

  inline bool has_brief() const;
  void clear_brief();
  inline void clear_has_brief();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int ugc_type_;
  union RecordUnion {
    RecordUnion() {}
    ::proto::UgcMusicRecord* music_record_;
  } record_;
  union BriefUnion {
    BriefUnion() {}
    ::proto::UgcMusicBriefInfo* music_brief_info_;
  } brief_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[2];

  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SaveUgcRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SaveUgcRsp) */ {
 public:
  SaveUgcRsp();
  virtual ~SaveUgcRsp();

  SaveUgcRsp(const SaveUgcRsp& from);

  inline SaveUgcRsp& operator=(const SaveUgcRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SaveUgcRsp(SaveUgcRsp&& from) noexcept
    : SaveUgcRsp() {
    *this = ::std::move(from);
  }

  inline SaveUgcRsp& operator=(SaveUgcRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveUgcRsp& default_instance();

  static inline const SaveUgcRsp* internal_default_instance() {
    return reinterpret_cast<const SaveUgcRsp*>(
               &_SaveUgcRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(SaveUgcRsp* other);
  friend void swap(SaveUgcRsp& a, SaveUgcRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SaveUgcRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SaveUgcRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SaveUgcRsp& from);
  void MergeFrom(const SaveUgcRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SaveUgcRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SaveUgcRsp_CmdId CmdId;
  static const CmdId NONE =
    SaveUgcRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SaveUgcRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SaveUgcRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SaveUgcRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SaveUgcRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SaveUgcRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SaveUgcRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SaveUgcRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SaveUgcRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SaveUgcRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SaveUgcRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint64 ugc_guid = 8;
  void clear_ugc_guid();
  static const int kUgcGuidFieldNumber = 8;
  ::google::protobuf::uint64 ugc_guid() const;
  void set_ugc_guid(::google::protobuf::uint64 value);

  // .proto.UgcType ugc_type = 1;
  void clear_ugc_type();
  static const int kUgcTypeFieldNumber = 1;
  ::proto::UgcType ugc_type() const;
  void set_ugc_type(::proto::UgcType value);

  // int32 retcode = 15;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 15;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SaveUgcRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 ugc_guid_;
  int ugc_type_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PublishUgcReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PublishUgcReq) */ {
 public:
  PublishUgcReq();
  virtual ~PublishUgcReq();

  PublishUgcReq(const PublishUgcReq& from);

  inline PublishUgcReq& operator=(const PublishUgcReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PublishUgcReq(PublishUgcReq&& from) noexcept
    : PublishUgcReq() {
    *this = ::std::move(from);
  }

  inline PublishUgcReq& operator=(PublishUgcReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PublishUgcReq& default_instance();

  static inline const PublishUgcReq* internal_default_instance() {
    return reinterpret_cast<const PublishUgcReq*>(
               &_PublishUgcReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(PublishUgcReq* other);
  friend void swap(PublishUgcReq& a, PublishUgcReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PublishUgcReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PublishUgcReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PublishUgcReq& from);
  void MergeFrom(const PublishUgcReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PublishUgcReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PublishUgcReq_CmdId CmdId;
  static const CmdId NONE =
    PublishUgcReq_CmdId_NONE;
  static const CmdId CMD_ID =
    PublishUgcReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PublishUgcReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PublishUgcReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    PublishUgcReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return PublishUgcReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PublishUgcReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PublishUgcReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PublishUgcReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PublishUgcReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PublishUgcReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PublishUgcReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.UgcType ugc_type = 7;
  void clear_ugc_type();
  static const int kUgcTypeFieldNumber = 7;
  ::proto::UgcType ugc_type() const;
  void set_ugc_type(::proto::UgcType value);

  // uint64 ugc_guid = 12;
  void clear_ugc_guid();
  static const int kUgcGuidFieldNumber = 12;
  ::google::protobuf::uint64 ugc_guid() const;
  void set_ugc_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.PublishUgcReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int ugc_type_;
  ::google::protobuf::uint64 ugc_guid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PublishUgcRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PublishUgcRsp) */ {
 public:
  PublishUgcRsp();
  virtual ~PublishUgcRsp();

  PublishUgcRsp(const PublishUgcRsp& from);

  inline PublishUgcRsp& operator=(const PublishUgcRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PublishUgcRsp(PublishUgcRsp&& from) noexcept
    : PublishUgcRsp() {
    *this = ::std::move(from);
  }

  inline PublishUgcRsp& operator=(PublishUgcRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PublishUgcRsp& default_instance();

  static inline const PublishUgcRsp* internal_default_instance() {
    return reinterpret_cast<const PublishUgcRsp*>(
               &_PublishUgcRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(PublishUgcRsp* other);
  friend void swap(PublishUgcRsp& a, PublishUgcRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PublishUgcRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PublishUgcRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PublishUgcRsp& from);
  void MergeFrom(const PublishUgcRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PublishUgcRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PublishUgcRsp_CmdId CmdId;
  static const CmdId NONE =
    PublishUgcRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    PublishUgcRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PublishUgcRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PublishUgcRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PublishUgcRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PublishUgcRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PublishUgcRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PublishUgcRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PublishUgcRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PublishUgcRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PublishUgcRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint64 ugc_guid = 14;
  void clear_ugc_guid();
  static const int kUgcGuidFieldNumber = 14;
  ::google::protobuf::uint64 ugc_guid() const;
  void set_ugc_guid(::google::protobuf::uint64 value);

  // .proto.UgcType ugc_type = 13;
  void clear_ugc_type();
  static const int kUgcTypeFieldNumber = 13;
  ::proto::UgcType ugc_type() const;
  void set_ugc_type(::proto::UgcType value);

  // int32 retcode = 15;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 15;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PublishUgcRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 ugc_guid_;
  int ugc_type_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckUgcUpdateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CheckUgcUpdateReq) */ {
 public:
  CheckUgcUpdateReq();
  virtual ~CheckUgcUpdateReq();

  CheckUgcUpdateReq(const CheckUgcUpdateReq& from);

  inline CheckUgcUpdateReq& operator=(const CheckUgcUpdateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckUgcUpdateReq(CheckUgcUpdateReq&& from) noexcept
    : CheckUgcUpdateReq() {
    *this = ::std::move(from);
  }

  inline CheckUgcUpdateReq& operator=(CheckUgcUpdateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckUgcUpdateReq& default_instance();

  static inline const CheckUgcUpdateReq* internal_default_instance() {
    return reinterpret_cast<const CheckUgcUpdateReq*>(
               &_CheckUgcUpdateReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(CheckUgcUpdateReq* other);
  friend void swap(CheckUgcUpdateReq& a, CheckUgcUpdateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckUgcUpdateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckUgcUpdateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckUgcUpdateReq& from);
  void MergeFrom(const CheckUgcUpdateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckUgcUpdateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CheckUgcUpdateReq_CmdId CmdId;
  static const CmdId NONE =
    CheckUgcUpdateReq_CmdId_NONE;
  static const CmdId CMD_ID =
    CheckUgcUpdateReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CheckUgcUpdateReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CheckUgcUpdateReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    CheckUgcUpdateReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return CheckUgcUpdateReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CheckUgcUpdateReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CheckUgcUpdateReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CheckUgcUpdateReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CheckUgcUpdateReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CheckUgcUpdateReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CheckUgcUpdateReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.UgcType ugc_type = 13;
  void clear_ugc_type();
  static const int kUgcTypeFieldNumber = 13;
  ::proto::UgcType ugc_type() const;
  void set_ugc_type(::proto::UgcType value);

  // @@protoc_insertion_point(class_scope:proto.CheckUgcUpdateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int ugc_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckUgcUpdateRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CheckUgcUpdateRsp) */ {
 public:
  CheckUgcUpdateRsp();
  virtual ~CheckUgcUpdateRsp();

  CheckUgcUpdateRsp(const CheckUgcUpdateRsp& from);

  inline CheckUgcUpdateRsp& operator=(const CheckUgcUpdateRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckUgcUpdateRsp(CheckUgcUpdateRsp&& from) noexcept
    : CheckUgcUpdateRsp() {
    *this = ::std::move(from);
  }

  inline CheckUgcUpdateRsp& operator=(CheckUgcUpdateRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckUgcUpdateRsp& default_instance();

  static inline const CheckUgcUpdateRsp* internal_default_instance() {
    return reinterpret_cast<const CheckUgcUpdateRsp*>(
               &_CheckUgcUpdateRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(CheckUgcUpdateRsp* other);
  friend void swap(CheckUgcUpdateRsp& a, CheckUgcUpdateRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckUgcUpdateRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckUgcUpdateRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckUgcUpdateRsp& from);
  void MergeFrom(const CheckUgcUpdateRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckUgcUpdateRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CheckUgcUpdateRsp_CmdId CmdId;
  static const CmdId NONE =
    CheckUgcUpdateRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    CheckUgcUpdateRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CheckUgcUpdateRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CheckUgcUpdateRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CheckUgcUpdateRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CheckUgcUpdateRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CheckUgcUpdateRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CheckUgcUpdateRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CheckUgcUpdateRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CheckUgcUpdateRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CheckUgcUpdateRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint64 update_ugc_guid_list = 15;
  int update_ugc_guid_list_size() const;
  void clear_update_ugc_guid_list();
  static const int kUpdateUgcGuidListFieldNumber = 15;
  ::google::protobuf::uint64 update_ugc_guid_list(int index) const;
  void set_update_ugc_guid_list(int index, ::google::protobuf::uint64 value);
  void add_update_ugc_guid_list(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      update_ugc_guid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_update_ugc_guid_list();

  // int32 retcode = 10;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 10;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // .proto.UgcType ugc_type = 12;
  void clear_ugc_type();
  static const int kUgcTypeFieldNumber = 12;
  ::proto::UgcType ugc_type() const;
  void set_ugc_type(::proto::UgcType value);

  // @@protoc_insertion_point(class_scope:proto.CheckUgcUpdateRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > update_ugc_guid_list_;
  mutable int _update_ugc_guid_list_cached_byte_size_;
  ::google::protobuf::int32 retcode_;
  int ugc_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UgcNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UgcNotify) */ {
 public:
  UgcNotify();
  virtual ~UgcNotify();

  UgcNotify(const UgcNotify& from);

  inline UgcNotify& operator=(const UgcNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UgcNotify(UgcNotify&& from) noexcept
    : UgcNotify() {
    *this = ::std::move(from);
  }

  inline UgcNotify& operator=(UgcNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UgcNotify& default_instance();

  static inline const UgcNotify* internal_default_instance() {
    return reinterpret_cast<const UgcNotify*>(
               &_UgcNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(UgcNotify* other);
  friend void swap(UgcNotify& a, UgcNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UgcNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  UgcNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UgcNotify& from);
  void MergeFrom(const UgcNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UgcNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef UgcNotify_CmdId CmdId;
  static const CmdId NONE =
    UgcNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    UgcNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    UgcNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    UgcNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return UgcNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    UgcNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    UgcNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    UgcNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return UgcNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return UgcNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return UgcNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bool is_ugc_publish_ban = 12;
  void clear_is_ugc_publish_ban();
  static const int kIsUgcPublishBanFieldNumber = 12;
  bool is_ugc_publish_ban() const;
  void set_is_ugc_publish_ban(bool value);

  // bool is_ugc_publish_feature_closed = 8;
  void clear_is_ugc_publish_feature_closed();
  static const int kIsUgcPublishFeatureClosedFieldNumber = 8;
  bool is_ugc_publish_feature_closed() const;
  void set_is_ugc_publish_feature_closed(bool value);

  // bool is_ugc_feature_closed = 15;
  void clear_is_ugc_feature_closed();
  static const int kIsUgcFeatureClosedFieldNumber = 15;
  bool is_ugc_feature_closed() const;
  void set_is_ugc_feature_closed(bool value);

  // @@protoc_insertion_point(class_scope:proto.UgcNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_ugc_publish_ban_;
  bool is_ugc_publish_feature_closed_;
  bool is_ugc_feature_closed_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckUgcStateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CheckUgcStateReq) */ {
 public:
  CheckUgcStateReq();
  virtual ~CheckUgcStateReq();

  CheckUgcStateReq(const CheckUgcStateReq& from);

  inline CheckUgcStateReq& operator=(const CheckUgcStateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckUgcStateReq(CheckUgcStateReq&& from) noexcept
    : CheckUgcStateReq() {
    *this = ::std::move(from);
  }

  inline CheckUgcStateReq& operator=(CheckUgcStateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckUgcStateReq& default_instance();

  static inline const CheckUgcStateReq* internal_default_instance() {
    return reinterpret_cast<const CheckUgcStateReq*>(
               &_CheckUgcStateReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(CheckUgcStateReq* other);
  friend void swap(CheckUgcStateReq& a, CheckUgcStateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckUgcStateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckUgcStateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckUgcStateReq& from);
  void MergeFrom(const CheckUgcStateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckUgcStateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CheckUgcStateReq_CmdId CmdId;
  static const CmdId NONE =
    CheckUgcStateReq_CmdId_NONE;
  static const CmdId CMD_ID =
    CheckUgcStateReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CheckUgcStateReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CheckUgcStateReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    CheckUgcStateReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return CheckUgcStateReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CheckUgcStateReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CheckUgcStateReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CheckUgcStateReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CheckUgcStateReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CheckUgcStateReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CheckUgcStateReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.CheckUgcStateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckUgcStateRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CheckUgcStateRsp) */ {
 public:
  CheckUgcStateRsp();
  virtual ~CheckUgcStateRsp();

  CheckUgcStateRsp(const CheckUgcStateRsp& from);

  inline CheckUgcStateRsp& operator=(const CheckUgcStateRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckUgcStateRsp(CheckUgcStateRsp&& from) noexcept
    : CheckUgcStateRsp() {
    *this = ::std::move(from);
  }

  inline CheckUgcStateRsp& operator=(CheckUgcStateRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckUgcStateRsp& default_instance();

  static inline const CheckUgcStateRsp* internal_default_instance() {
    return reinterpret_cast<const CheckUgcStateRsp*>(
               &_CheckUgcStateRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(CheckUgcStateRsp* other);
  friend void swap(CheckUgcStateRsp& a, CheckUgcStateRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckUgcStateRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckUgcStateRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckUgcStateRsp& from);
  void MergeFrom(const CheckUgcStateRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckUgcStateRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CheckUgcStateRsp_CmdId CmdId;
  static const CmdId NONE =
    CheckUgcStateRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    CheckUgcStateRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CheckUgcStateRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CheckUgcStateRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CheckUgcStateRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CheckUgcStateRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CheckUgcStateRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CheckUgcStateRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CheckUgcStateRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CheckUgcStateRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CheckUgcStateRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 7;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 7;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.CheckUgcStateRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================


// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::GetUgcReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetUgcReq_CmdId>() {
  return ::proto::GetUgcReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetUgcRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetUgcRsp_CmdId>() {
  return ::proto::GetUgcRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetUgcBriefInfoReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetUgcBriefInfoReq_CmdId>() {
  return ::proto::GetUgcBriefInfoReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetUgcBriefInfoRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetUgcBriefInfoRsp_CmdId>() {
  return ::proto::GetUgcBriefInfoRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SaveUgcReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SaveUgcReq_CmdId>() {
  return ::proto::SaveUgcReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SaveUgcRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SaveUgcRsp_CmdId>() {
  return ::proto::SaveUgcRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PublishUgcReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PublishUgcReq_CmdId>() {
  return ::proto::PublishUgcReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PublishUgcRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PublishUgcRsp_CmdId>() {
  return ::proto::PublishUgcRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CheckUgcUpdateReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CheckUgcUpdateReq_CmdId>() {
  return ::proto::CheckUgcUpdateReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CheckUgcUpdateRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CheckUgcUpdateRsp_CmdId>() {
  return ::proto::CheckUgcUpdateRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::UgcNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::UgcNotify_CmdId>() {
  return ::proto::UgcNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CheckUgcStateReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CheckUgcStateReq_CmdId>() {
  return ::proto::CheckUgcStateReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CheckUgcStateRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CheckUgcStateRsp_CmdId>() {
  return ::proto::CheckUgcStateRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::UgcType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::UgcType>() {
  return ::proto::UgcType_descriptor();
}
template <> struct is_proto_enum< ::proto::GetUgcType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetUgcType>() {
  return ::proto::GetUgcType_descriptor();
}
template <> struct is_proto_enum< ::proto::RecordUsage> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::RecordUsage>() {
  return ::proto::RecordUsage_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fugc_2eproto__INCLUDED
