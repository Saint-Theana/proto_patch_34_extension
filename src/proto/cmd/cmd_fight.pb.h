// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_fight.proto

#ifndef PROTOBUF_cmd_2fcmd_5ffight_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5ffight_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class AbilityArgument;
class AbilityArgumentDefaultTypeInternal;
extern AbilityArgumentDefaultTypeInternal _AbilityArgument_default_instance_;
class AbilityIdentifier;
class AbilityIdentifierDefaultTypeInternal;
extern AbilityIdentifierDefaultTypeInternal _AbilityIdentifier_default_instance_;
class AiSkillCdInfo;
class AiSkillCdInfoDefaultTypeInternal;
extern AiSkillCdInfoDefaultTypeInternal _AiSkillCdInfo_default_instance_;
class AiSkillCdInfo_SkillCdMapEntry;
class AiSkillCdInfo_SkillCdMapEntryDefaultTypeInternal;
extern AiSkillCdInfo_SkillCdMapEntryDefaultTypeInternal _AiSkillCdInfo_SkillCdMapEntry_default_instance_;
class AiSkillCdInfo_SkillGroupCdMapEntry;
class AiSkillCdInfo_SkillGroupCdMapEntryDefaultTypeInternal;
extern AiSkillCdInfo_SkillGroupCdMapEntryDefaultTypeInternal _AiSkillCdInfo_SkillGroupCdMapEntry_default_instance_;
class AiSyncInfo;
class AiSyncInfoDefaultTypeInternal;
extern AiSyncInfoDefaultTypeInternal _AiSyncInfo_default_instance_;
class AiThreatInfo;
class AiThreatInfoDefaultTypeInternal;
extern AiThreatInfoDefaultTypeInternal _AiThreatInfo_default_instance_;
class AiThreatInfo_AiThreatMapEntry;
class AiThreatInfo_AiThreatMapEntryDefaultTypeInternal;
extern AiThreatInfo_AiThreatMapEntryDefaultTypeInternal _AiThreatInfo_AiThreatMapEntry_default_instance_;
class AnimatorForceSetAirMoveNotify;
class AnimatorForceSetAirMoveNotifyDefaultTypeInternal;
extern AnimatorForceSetAirMoveNotifyDefaultTypeInternal _AnimatorForceSetAirMoveNotify_default_instance_;
class AttackHitEffectResult;
class AttackHitEffectResultDefaultTypeInternal;
extern AttackHitEffectResultDefaultTypeInternal _AttackHitEffectResult_default_instance_;
class AttackResult;
class AttackResultDefaultTypeInternal;
extern AttackResultDefaultTypeInternal _AttackResult_default_instance_;
class AuthorityChange;
class AuthorityChangeDefaultTypeInternal;
extern AuthorityChangeDefaultTypeInternal _AuthorityChange_default_instance_;
class AvatarBuffAddNotify;
class AvatarBuffAddNotifyDefaultTypeInternal;
extern AvatarBuffAddNotifyDefaultTypeInternal _AvatarBuffAddNotify_default_instance_;
class AvatarBuffDelNotify;
class AvatarBuffDelNotifyDefaultTypeInternal;
extern AvatarBuffDelNotifyDefaultTypeInternal _AvatarBuffDelNotify_default_instance_;
class AvatarEnterElementViewNotify;
class AvatarEnterElementViewNotifyDefaultTypeInternal;
extern AvatarEnterElementViewNotifyDefaultTypeInternal _AvatarEnterElementViewNotify_default_instance_;
class CombatInvocationsNotify;
class CombatInvocationsNotifyDefaultTypeInternal;
extern CombatInvocationsNotifyDefaultTypeInternal _CombatInvocationsNotify_default_instance_;
class CombatInvokeEntry;
class CombatInvokeEntryDefaultTypeInternal;
extern CombatInvokeEntryDefaultTypeInternal _CombatInvokeEntry_default_instance_;
class CreateMassiveEntityNotify;
class CreateMassiveEntityNotifyDefaultTypeInternal;
extern CreateMassiveEntityNotifyDefaultTypeInternal _CreateMassiveEntityNotify_default_instance_;
class CreateMassiveEntityReq;
class CreateMassiveEntityReqDefaultTypeInternal;
extern CreateMassiveEntityReqDefaultTypeInternal _CreateMassiveEntityReq_default_instance_;
class CreateMassiveEntityRsp;
class CreateMassiveEntityRspDefaultTypeInternal;
extern CreateMassiveEntityRspDefaultTypeInternal _CreateMassiveEntityRsp_default_instance_;
class DelTeamEntityNotify;
class DelTeamEntityNotifyDefaultTypeInternal;
extern DelTeamEntityNotifyDefaultTypeInternal _DelTeamEntityNotify_default_instance_;
class DestroyMassiveEntityNotify;
class DestroyMassiveEntityNotifyDefaultTypeInternal;
extern DestroyMassiveEntityNotifyDefaultTypeInternal _DestroyMassiveEntityNotify_default_instance_;
class EntityAiKillSelfNotify;
class EntityAiKillSelfNotifyDefaultTypeInternal;
extern EntityAiKillSelfNotifyDefaultTypeInternal _EntityAiKillSelfNotify_default_instance_;
class EntityAiSyncNotify;
class EntityAiSyncNotifyDefaultTypeInternal;
extern EntityAiSyncNotifyDefaultTypeInternal _EntityAiSyncNotify_default_instance_;
class EntityAuthorityChangeNotify;
class EntityAuthorityChangeNotifyDefaultTypeInternal;
extern EntityAuthorityChangeNotifyDefaultTypeInternal _EntityAuthorityChangeNotify_default_instance_;
class EvtAiSyncCombatThreatInfoNotify;
class EvtAiSyncCombatThreatInfoNotifyDefaultTypeInternal;
extern EvtAiSyncCombatThreatInfoNotifyDefaultTypeInternal _EvtAiSyncCombatThreatInfoNotify_default_instance_;
class EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry;
class EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntryDefaultTypeInternal;
extern EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntryDefaultTypeInternal _EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry_default_instance_;
class EvtAiSyncSkillCdNotify;
class EvtAiSyncSkillCdNotifyDefaultTypeInternal;
extern EvtAiSyncSkillCdNotifyDefaultTypeInternal _EvtAiSyncSkillCdNotify_default_instance_;
class EvtAiSyncSkillCdNotify_AiCdMapEntry;
class EvtAiSyncSkillCdNotify_AiCdMapEntryDefaultTypeInternal;
extern EvtAiSyncSkillCdNotify_AiCdMapEntryDefaultTypeInternal _EvtAiSyncSkillCdNotify_AiCdMapEntry_default_instance_;
class EvtAnimatorParameterInfo;
class EvtAnimatorParameterInfoDefaultTypeInternal;
extern EvtAnimatorParameterInfoDefaultTypeInternal _EvtAnimatorParameterInfo_default_instance_;
class EvtAnimatorParameterNotify;
class EvtAnimatorParameterNotifyDefaultTypeInternal;
extern EvtAnimatorParameterNotifyDefaultTypeInternal _EvtAnimatorParameterNotify_default_instance_;
class EvtAnimatorStateChangedInfo;
class EvtAnimatorStateChangedInfoDefaultTypeInternal;
extern EvtAnimatorStateChangedInfoDefaultTypeInternal _EvtAnimatorStateChangedInfo_default_instance_;
class EvtAnimatorStateChangedNotify;
class EvtAnimatorStateChangedNotifyDefaultTypeInternal;
extern EvtAnimatorStateChangedNotifyDefaultTypeInternal _EvtAnimatorStateChangedNotify_default_instance_;
class EvtAvatarEnterFocusNotify;
class EvtAvatarEnterFocusNotifyDefaultTypeInternal;
extern EvtAvatarEnterFocusNotifyDefaultTypeInternal _EvtAvatarEnterFocusNotify_default_instance_;
class EvtAvatarExitFocusNotify;
class EvtAvatarExitFocusNotifyDefaultTypeInternal;
extern EvtAvatarExitFocusNotifyDefaultTypeInternal _EvtAvatarExitFocusNotify_default_instance_;
class EvtAvatarLockChairReq;
class EvtAvatarLockChairReqDefaultTypeInternal;
extern EvtAvatarLockChairReqDefaultTypeInternal _EvtAvatarLockChairReq_default_instance_;
class EvtAvatarLockChairRsp;
class EvtAvatarLockChairRspDefaultTypeInternal;
extern EvtAvatarLockChairRspDefaultTypeInternal _EvtAvatarLockChairRsp_default_instance_;
class EvtAvatarSitDownNotify;
class EvtAvatarSitDownNotifyDefaultTypeInternal;
extern EvtAvatarSitDownNotifyDefaultTypeInternal _EvtAvatarSitDownNotify_default_instance_;
class EvtAvatarStandUpNotify;
class EvtAvatarStandUpNotifyDefaultTypeInternal;
extern EvtAvatarStandUpNotifyDefaultTypeInternal _EvtAvatarStandUpNotify_default_instance_;
class EvtAvatarUpdateFocusNotify;
class EvtAvatarUpdateFocusNotifyDefaultTypeInternal;
extern EvtAvatarUpdateFocusNotifyDefaultTypeInternal _EvtAvatarUpdateFocusNotify_default_instance_;
class EvtBeingHealedNotify;
class EvtBeingHealedNotifyDefaultTypeInternal;
extern EvtBeingHealedNotifyDefaultTypeInternal _EvtBeingHealedNotify_default_instance_;
class EvtBeingHitInfo;
class EvtBeingHitInfoDefaultTypeInternal;
extern EvtBeingHitInfoDefaultTypeInternal _EvtBeingHitInfo_default_instance_;
class EvtBeingHitNotify;
class EvtBeingHitNotifyDefaultTypeInternal;
extern EvtBeingHitNotifyDefaultTypeInternal _EvtBeingHitNotify_default_instance_;
class EvtBeingHitsCombineNotify;
class EvtBeingHitsCombineNotifyDefaultTypeInternal;
extern EvtBeingHitsCombineNotifyDefaultTypeInternal _EvtBeingHitsCombineNotify_default_instance_;
class EvtBulletDeactiveNotify;
class EvtBulletDeactiveNotifyDefaultTypeInternal;
extern EvtBulletDeactiveNotifyDefaultTypeInternal _EvtBulletDeactiveNotify_default_instance_;
class EvtBulletHitNotify;
class EvtBulletHitNotifyDefaultTypeInternal;
extern EvtBulletHitNotifyDefaultTypeInternal _EvtBulletHitNotify_default_instance_;
class EvtBulletMoveNotify;
class EvtBulletMoveNotifyDefaultTypeInternal;
extern EvtBulletMoveNotifyDefaultTypeInternal _EvtBulletMoveNotify_default_instance_;
class EvtCombatForceSetPosInfo;
class EvtCombatForceSetPosInfoDefaultTypeInternal;
extern EvtCombatForceSetPosInfoDefaultTypeInternal _EvtCombatForceSetPosInfo_default_instance_;
class EvtCombatSteerMotionInfo;
class EvtCombatSteerMotionInfoDefaultTypeInternal;
extern EvtCombatSteerMotionInfoDefaultTypeInternal _EvtCombatSteerMotionInfo_default_instance_;
class EvtCompensatePosDiffInfo;
class EvtCompensatePosDiffInfoDefaultTypeInternal;
extern EvtCompensatePosDiffInfoDefaultTypeInternal _EvtCompensatePosDiffInfo_default_instance_;
class EvtCostStaminaNotify;
class EvtCostStaminaNotifyDefaultTypeInternal;
extern EvtCostStaminaNotifyDefaultTypeInternal _EvtCostStaminaNotify_default_instance_;
class EvtCreateGadgetNotify;
class EvtCreateGadgetNotifyDefaultTypeInternal;
extern EvtCreateGadgetNotifyDefaultTypeInternal _EvtCreateGadgetNotify_default_instance_;
class EvtDestroyGadgetNotify;
class EvtDestroyGadgetNotifyDefaultTypeInternal;
extern EvtDestroyGadgetNotifyDefaultTypeInternal _EvtDestroyGadgetNotify_default_instance_;
class EvtDestroyServerGadgetNotify;
class EvtDestroyServerGadgetNotifyDefaultTypeInternal;
extern EvtDestroyServerGadgetNotifyDefaultTypeInternal _EvtDestroyServerGadgetNotify_default_instance_;
class EvtDoSkillSuccNotify;
class EvtDoSkillSuccNotifyDefaultTypeInternal;
extern EvtDoSkillSuccNotifyDefaultTypeInternal _EvtDoSkillSuccNotify_default_instance_;
class EvtEntityRenderersChangedNotify;
class EvtEntityRenderersChangedNotifyDefaultTypeInternal;
extern EvtEntityRenderersChangedNotifyDefaultTypeInternal _EvtEntityRenderersChangedNotify_default_instance_;
class EvtEntityStartDieEndNotify;
class EvtEntityStartDieEndNotifyDefaultTypeInternal;
extern EvtEntityStartDieEndNotifyDefaultTypeInternal _EvtEntityStartDieEndNotify_default_instance_;
class EvtFaceToDirInfo;
class EvtFaceToDirInfoDefaultTypeInternal;
extern EvtFaceToDirInfoDefaultTypeInternal _EvtFaceToDirInfo_default_instance_;
class EvtFaceToDirNotify;
class EvtFaceToDirNotifyDefaultTypeInternal;
extern EvtFaceToDirNotifyDefaultTypeInternal _EvtFaceToDirNotify_default_instance_;
class EvtFaceToEntityNotify;
class EvtFaceToEntityNotifyDefaultTypeInternal;
extern EvtFaceToEntityNotifyDefaultTypeInternal _EvtFaceToEntityNotify_default_instance_;
class EvtFixedRushMove;
class EvtFixedRushMoveDefaultTypeInternal;
extern EvtFixedRushMoveDefaultTypeInternal _EvtFixedRushMove_default_instance_;
class EvtGrapplingHookMove;
class EvtGrapplingHookMoveDefaultTypeInternal;
extern EvtGrapplingHookMoveDefaultTypeInternal _EvtGrapplingHookMove_default_instance_;
class EvtHittingOtherInfo;
class EvtHittingOtherInfoDefaultTypeInternal;
extern EvtHittingOtherInfoDefaultTypeInternal _EvtHittingOtherInfo_default_instance_;
class EvtLightCoreMove;
class EvtLightCoreMoveDefaultTypeInternal;
extern EvtLightCoreMoveDefaultTypeInternal _EvtLightCoreMove_default_instance_;
class EvtLocalGadgetOwnerLeaveSceneNotify;
class EvtLocalGadgetOwnerLeaveSceneNotifyDefaultTypeInternal;
extern EvtLocalGadgetOwnerLeaveSceneNotifyDefaultTypeInternal _EvtLocalGadgetOwnerLeaveSceneNotify_default_instance_;
class EvtMonsterDoBlink;
class EvtMonsterDoBlinkDefaultTypeInternal;
extern EvtMonsterDoBlinkDefaultTypeInternal _EvtMonsterDoBlink_default_instance_;
class EvtMotionInfoDuringSteerAttack;
class EvtMotionInfoDuringSteerAttackDefaultTypeInternal;
extern EvtMotionInfoDuringSteerAttackDefaultTypeInternal _EvtMotionInfoDuringSteerAttack_default_instance_;
class EvtRushMoveInfo;
class EvtRushMoveInfoDefaultTypeInternal;
extern EvtRushMoveInfoDefaultTypeInternal _EvtRushMoveInfo_default_instance_;
class EvtRushMoveNotify;
class EvtRushMoveNotifyDefaultTypeInternal;
extern EvtRushMoveNotifyDefaultTypeInternal _EvtRushMoveNotify_default_instance_;
class EvtSetAttackTargetInfo;
class EvtSetAttackTargetInfoDefaultTypeInternal;
extern EvtSetAttackTargetInfoDefaultTypeInternal _EvtSetAttackTargetInfo_default_instance_;
class EvtSetAttackTargetNotify;
class EvtSetAttackTargetNotifyDefaultTypeInternal;
extern EvtSetAttackTargetNotifyDefaultTypeInternal _EvtSetAttackTargetNotify_default_instance_;
class EvtSyncEntityPositionInfo;
class EvtSyncEntityPositionInfoDefaultTypeInternal;
extern EvtSyncEntityPositionInfoDefaultTypeInternal _EvtSyncEntityPositionInfo_default_instance_;
class EvtSyncSkillAnchorPosition;
class EvtSyncSkillAnchorPositionDefaultTypeInternal;
extern EvtSyncSkillAnchorPositionDefaultTypeInternal _EvtSyncSkillAnchorPosition_default_instance_;
class EvtSyncTransform;
class EvtSyncTransformDefaultTypeInternal;
extern EvtSyncTransformDefaultTypeInternal _EvtSyncTransform_default_instance_;
class HitCollision;
class HitCollisionDefaultTypeInternal;
extern HitCollisionDefaultTypeInternal _HitCollision_default_instance_;
class HostPlayerNotify;
class HostPlayerNotifyDefaultTypeInternal;
extern HostPlayerNotifyDefaultTypeInternal _HostPlayerNotify_default_instance_;
class LuaSetOptionNotify;
class LuaSetOptionNotifyDefaultTypeInternal;
extern LuaSetOptionNotifyDefaultTypeInternal _LuaSetOptionNotify_default_instance_;
class MassiveEntityElementOpBatchNotify;
class MassiveEntityElementOpBatchNotifyDefaultTypeInternal;
extern MassiveEntityElementOpBatchNotifyDefaultTypeInternal _MassiveEntityElementOpBatchNotify_default_instance_;
class MassiveEntityStateChangedNotify;
class MassiveEntityStateChangedNotifyDefaultTypeInternal;
extern MassiveEntityStateChangedNotifyDefaultTypeInternal _MassiveEntityStateChangedNotify_default_instance_;
class MonsterAlertChangeNotify;
class MonsterAlertChangeNotifyDefaultTypeInternal;
extern MonsterAlertChangeNotifyDefaultTypeInternal _MonsterAlertChangeNotify_default_instance_;
class MonsterForceAlertNotify;
class MonsterForceAlertNotifyDefaultTypeInternal;
extern MonsterForceAlertNotifyDefaultTypeInternal _MonsterForceAlertNotify_default_instance_;
class ReportFightAntiCheatNotify;
class ReportFightAntiCheatNotifyDefaultTypeInternal;
extern ReportFightAntiCheatNotifyDefaultTypeInternal _ReportFightAntiCheatNotify_default_instance_;
class ServerBuffChangeNotify;
class ServerBuffChangeNotifyDefaultTypeInternal;
extern ServerBuffChangeNotifyDefaultTypeInternal _ServerBuffChangeNotify_default_instance_;
class SyncTeamEntityNotify;
class SyncTeamEntityNotifyDefaultTypeInternal;
extern SyncTeamEntityNotifyDefaultTypeInternal _SyncTeamEntityNotify_default_instance_;
class TeamEntityInfo;
class TeamEntityInfoDefaultTypeInternal;
extern TeamEntityInfoDefaultTypeInternal _TeamEntityInfo_default_instance_;
class TriggerCreateGadgetToEquipPartNotify;
class TriggerCreateGadgetToEquipPartNotifyDefaultTypeInternal;
extern TriggerCreateGadgetToEquipPartNotifyDefaultTypeInternal _TriggerCreateGadgetToEquipPartNotify_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5ffight_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5ffight_2eproto

enum EvtBeingHitNotify_CmdId {
  EvtBeingHitNotify_CmdId_NONE = 0,
  EvtBeingHitNotify_CmdId_CMD_ID = 372,
  EvtBeingHitNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtBeingHitNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtBeingHitNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtBeingHitNotify_CmdId_EvtBeingHitNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtBeingHitNotify_CmdId_EvtBeingHitNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtBeingHitNotify_CmdId_IsValid(int value);
const EvtBeingHitNotify_CmdId EvtBeingHitNotify_CmdId_CmdId_MIN = EvtBeingHitNotify_CmdId_NONE;
const EvtBeingHitNotify_CmdId EvtBeingHitNotify_CmdId_CmdId_MAX = EvtBeingHitNotify_CmdId_CMD_ID;
const int EvtBeingHitNotify_CmdId_CmdId_ARRAYSIZE = EvtBeingHitNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtBeingHitNotify_CmdId_descriptor();
inline const ::std::string& EvtBeingHitNotify_CmdId_Name(EvtBeingHitNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtBeingHitNotify_CmdId_descriptor(), value);
}
inline bool EvtBeingHitNotify_CmdId_Parse(
    const ::std::string& name, EvtBeingHitNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtBeingHitNotify_CmdId>(
    EvtBeingHitNotify_CmdId_descriptor(), name, value);
}
enum EvtAnimatorParameterNotify_CmdId {
  EvtAnimatorParameterNotify_CmdId_NONE = 0,
  EvtAnimatorParameterNotify_CmdId_CMD_ID = 398,
  EvtAnimatorParameterNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtAnimatorParameterNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtAnimatorParameterNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtAnimatorParameterNotify_CmdId_EvtAnimatorParameterNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtAnimatorParameterNotify_CmdId_EvtAnimatorParameterNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtAnimatorParameterNotify_CmdId_IsValid(int value);
const EvtAnimatorParameterNotify_CmdId EvtAnimatorParameterNotify_CmdId_CmdId_MIN = EvtAnimatorParameterNotify_CmdId_NONE;
const EvtAnimatorParameterNotify_CmdId EvtAnimatorParameterNotify_CmdId_CmdId_MAX = EvtAnimatorParameterNotify_CmdId_CMD_ID;
const int EvtAnimatorParameterNotify_CmdId_CmdId_ARRAYSIZE = EvtAnimatorParameterNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtAnimatorParameterNotify_CmdId_descriptor();
inline const ::std::string& EvtAnimatorParameterNotify_CmdId_Name(EvtAnimatorParameterNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtAnimatorParameterNotify_CmdId_descriptor(), value);
}
inline bool EvtAnimatorParameterNotify_CmdId_Parse(
    const ::std::string& name, EvtAnimatorParameterNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtAnimatorParameterNotify_CmdId>(
    EvtAnimatorParameterNotify_CmdId_descriptor(), name, value);
}
enum HostPlayerNotify_CmdId {
  HostPlayerNotify_CmdId_NONE = 0,
  HostPlayerNotify_CmdId_CMD_ID = 312,
  HostPlayerNotify_CmdId_ENET_CHANNEL_ID = 0,
  HostPlayerNotify_CmdId_ENET_IS_RELIABLE = 1,
  HostPlayerNotify_CmdId_HostPlayerNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HostPlayerNotify_CmdId_HostPlayerNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HostPlayerNotify_CmdId_IsValid(int value);
const HostPlayerNotify_CmdId HostPlayerNotify_CmdId_CmdId_MIN = HostPlayerNotify_CmdId_NONE;
const HostPlayerNotify_CmdId HostPlayerNotify_CmdId_CmdId_MAX = HostPlayerNotify_CmdId_CMD_ID;
const int HostPlayerNotify_CmdId_CmdId_ARRAYSIZE = HostPlayerNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* HostPlayerNotify_CmdId_descriptor();
inline const ::std::string& HostPlayerNotify_CmdId_Name(HostPlayerNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    HostPlayerNotify_CmdId_descriptor(), value);
}
inline bool HostPlayerNotify_CmdId_Parse(
    const ::std::string& name, HostPlayerNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HostPlayerNotify_CmdId>(
    HostPlayerNotify_CmdId_descriptor(), name, value);
}
enum EvtDoSkillSuccNotify_CmdId {
  EvtDoSkillSuccNotify_CmdId_NONE = 0,
  EvtDoSkillSuccNotify_CmdId_CMD_ID = 335,
  EvtDoSkillSuccNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtDoSkillSuccNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtDoSkillSuccNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtDoSkillSuccNotify_CmdId_EvtDoSkillSuccNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtDoSkillSuccNotify_CmdId_EvtDoSkillSuccNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtDoSkillSuccNotify_CmdId_IsValid(int value);
const EvtDoSkillSuccNotify_CmdId EvtDoSkillSuccNotify_CmdId_CmdId_MIN = EvtDoSkillSuccNotify_CmdId_NONE;
const EvtDoSkillSuccNotify_CmdId EvtDoSkillSuccNotify_CmdId_CmdId_MAX = EvtDoSkillSuccNotify_CmdId_CMD_ID;
const int EvtDoSkillSuccNotify_CmdId_CmdId_ARRAYSIZE = EvtDoSkillSuccNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtDoSkillSuccNotify_CmdId_descriptor();
inline const ::std::string& EvtDoSkillSuccNotify_CmdId_Name(EvtDoSkillSuccNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtDoSkillSuccNotify_CmdId_descriptor(), value);
}
inline bool EvtDoSkillSuccNotify_CmdId_Parse(
    const ::std::string& name, EvtDoSkillSuccNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtDoSkillSuccNotify_CmdId>(
    EvtDoSkillSuccNotify_CmdId_descriptor(), name, value);
}
enum EvtCreateGadgetNotify_CmdId {
  EvtCreateGadgetNotify_CmdId_NONE = 0,
  EvtCreateGadgetNotify_CmdId_CMD_ID = 307,
  EvtCreateGadgetNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtCreateGadgetNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtCreateGadgetNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtCreateGadgetNotify_CmdId_EvtCreateGadgetNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtCreateGadgetNotify_CmdId_EvtCreateGadgetNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtCreateGadgetNotify_CmdId_IsValid(int value);
const EvtCreateGadgetNotify_CmdId EvtCreateGadgetNotify_CmdId_CmdId_MIN = EvtCreateGadgetNotify_CmdId_NONE;
const EvtCreateGadgetNotify_CmdId EvtCreateGadgetNotify_CmdId_CmdId_MAX = EvtCreateGadgetNotify_CmdId_CMD_ID;
const int EvtCreateGadgetNotify_CmdId_CmdId_ARRAYSIZE = EvtCreateGadgetNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtCreateGadgetNotify_CmdId_descriptor();
inline const ::std::string& EvtCreateGadgetNotify_CmdId_Name(EvtCreateGadgetNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtCreateGadgetNotify_CmdId_descriptor(), value);
}
inline bool EvtCreateGadgetNotify_CmdId_Parse(
    const ::std::string& name, EvtCreateGadgetNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtCreateGadgetNotify_CmdId>(
    EvtCreateGadgetNotify_CmdId_descriptor(), name, value);
}
enum EvtDestroyGadgetNotify_CmdId {
  EvtDestroyGadgetNotify_CmdId_NONE = 0,
  EvtDestroyGadgetNotify_CmdId_CMD_ID = 321,
  EvtDestroyGadgetNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtDestroyGadgetNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtDestroyGadgetNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtDestroyGadgetNotify_CmdId_EvtDestroyGadgetNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtDestroyGadgetNotify_CmdId_EvtDestroyGadgetNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtDestroyGadgetNotify_CmdId_IsValid(int value);
const EvtDestroyGadgetNotify_CmdId EvtDestroyGadgetNotify_CmdId_CmdId_MIN = EvtDestroyGadgetNotify_CmdId_NONE;
const EvtDestroyGadgetNotify_CmdId EvtDestroyGadgetNotify_CmdId_CmdId_MAX = EvtDestroyGadgetNotify_CmdId_CMD_ID;
const int EvtDestroyGadgetNotify_CmdId_CmdId_ARRAYSIZE = EvtDestroyGadgetNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtDestroyGadgetNotify_CmdId_descriptor();
inline const ::std::string& EvtDestroyGadgetNotify_CmdId_Name(EvtDestroyGadgetNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtDestroyGadgetNotify_CmdId_descriptor(), value);
}
inline bool EvtDestroyGadgetNotify_CmdId_Parse(
    const ::std::string& name, EvtDestroyGadgetNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtDestroyGadgetNotify_CmdId>(
    EvtDestroyGadgetNotify_CmdId_descriptor(), name, value);
}
enum EvtFaceToEntityNotify_CmdId {
  EvtFaceToEntityNotify_CmdId_NONE = 0,
  EvtFaceToEntityNotify_CmdId_CMD_ID = 303,
  EvtFaceToEntityNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtFaceToEntityNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtFaceToEntityNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtFaceToEntityNotify_CmdId_EvtFaceToEntityNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtFaceToEntityNotify_CmdId_EvtFaceToEntityNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtFaceToEntityNotify_CmdId_IsValid(int value);
const EvtFaceToEntityNotify_CmdId EvtFaceToEntityNotify_CmdId_CmdId_MIN = EvtFaceToEntityNotify_CmdId_NONE;
const EvtFaceToEntityNotify_CmdId EvtFaceToEntityNotify_CmdId_CmdId_MAX = EvtFaceToEntityNotify_CmdId_CMD_ID;
const int EvtFaceToEntityNotify_CmdId_CmdId_ARRAYSIZE = EvtFaceToEntityNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtFaceToEntityNotify_CmdId_descriptor();
inline const ::std::string& EvtFaceToEntityNotify_CmdId_Name(EvtFaceToEntityNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtFaceToEntityNotify_CmdId_descriptor(), value);
}
inline bool EvtFaceToEntityNotify_CmdId_Parse(
    const ::std::string& name, EvtFaceToEntityNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtFaceToEntityNotify_CmdId>(
    EvtFaceToEntityNotify_CmdId_descriptor(), name, value);
}
enum EvtFaceToDirNotify_CmdId {
  EvtFaceToDirNotify_CmdId_NONE = 0,
  EvtFaceToDirNotify_CmdId_CMD_ID = 390,
  EvtFaceToDirNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtFaceToDirNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtFaceToDirNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtFaceToDirNotify_CmdId_EvtFaceToDirNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtFaceToDirNotify_CmdId_EvtFaceToDirNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtFaceToDirNotify_CmdId_IsValid(int value);
const EvtFaceToDirNotify_CmdId EvtFaceToDirNotify_CmdId_CmdId_MIN = EvtFaceToDirNotify_CmdId_NONE;
const EvtFaceToDirNotify_CmdId EvtFaceToDirNotify_CmdId_CmdId_MAX = EvtFaceToDirNotify_CmdId_CMD_ID;
const int EvtFaceToDirNotify_CmdId_CmdId_ARRAYSIZE = EvtFaceToDirNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtFaceToDirNotify_CmdId_descriptor();
inline const ::std::string& EvtFaceToDirNotify_CmdId_Name(EvtFaceToDirNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtFaceToDirNotify_CmdId_descriptor(), value);
}
inline bool EvtFaceToDirNotify_CmdId_Parse(
    const ::std::string& name, EvtFaceToDirNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtFaceToDirNotify_CmdId>(
    EvtFaceToDirNotify_CmdId_descriptor(), name, value);
}
enum EvtCostStaminaNotify_CmdId {
  EvtCostStaminaNotify_CmdId_NONE = 0,
  EvtCostStaminaNotify_CmdId_CMD_ID = 373,
  EvtCostStaminaNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtCostStaminaNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtCostStaminaNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtCostStaminaNotify_CmdId_EvtCostStaminaNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtCostStaminaNotify_CmdId_EvtCostStaminaNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtCostStaminaNotify_CmdId_IsValid(int value);
const EvtCostStaminaNotify_CmdId EvtCostStaminaNotify_CmdId_CmdId_MIN = EvtCostStaminaNotify_CmdId_NONE;
const EvtCostStaminaNotify_CmdId EvtCostStaminaNotify_CmdId_CmdId_MAX = EvtCostStaminaNotify_CmdId_CMD_ID;
const int EvtCostStaminaNotify_CmdId_CmdId_ARRAYSIZE = EvtCostStaminaNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtCostStaminaNotify_CmdId_descriptor();
inline const ::std::string& EvtCostStaminaNotify_CmdId_Name(EvtCostStaminaNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtCostStaminaNotify_CmdId_descriptor(), value);
}
inline bool EvtCostStaminaNotify_CmdId_Parse(
    const ::std::string& name, EvtCostStaminaNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtCostStaminaNotify_CmdId>(
    EvtCostStaminaNotify_CmdId_descriptor(), name, value);
}
enum EvtSetAttackTargetNotify_CmdId {
  EvtSetAttackTargetNotify_CmdId_NONE = 0,
  EvtSetAttackTargetNotify_CmdId_CMD_ID = 399,
  EvtSetAttackTargetNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtSetAttackTargetNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtSetAttackTargetNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtSetAttackTargetNotify_CmdId_EvtSetAttackTargetNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtSetAttackTargetNotify_CmdId_EvtSetAttackTargetNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtSetAttackTargetNotify_CmdId_IsValid(int value);
const EvtSetAttackTargetNotify_CmdId EvtSetAttackTargetNotify_CmdId_CmdId_MIN = EvtSetAttackTargetNotify_CmdId_NONE;
const EvtSetAttackTargetNotify_CmdId EvtSetAttackTargetNotify_CmdId_CmdId_MAX = EvtSetAttackTargetNotify_CmdId_CMD_ID;
const int EvtSetAttackTargetNotify_CmdId_CmdId_ARRAYSIZE = EvtSetAttackTargetNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtSetAttackTargetNotify_CmdId_descriptor();
inline const ::std::string& EvtSetAttackTargetNotify_CmdId_Name(EvtSetAttackTargetNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtSetAttackTargetNotify_CmdId_descriptor(), value);
}
inline bool EvtSetAttackTargetNotify_CmdId_Parse(
    const ::std::string& name, EvtSetAttackTargetNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtSetAttackTargetNotify_CmdId>(
    EvtSetAttackTargetNotify_CmdId_descriptor(), name, value);
}
enum EvtAnimatorStateChangedNotify_CmdId {
  EvtAnimatorStateChangedNotify_CmdId_NONE = 0,
  EvtAnimatorStateChangedNotify_CmdId_CMD_ID = 331,
  EvtAnimatorStateChangedNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtAnimatorStateChangedNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtAnimatorStateChangedNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtAnimatorStateChangedNotify_CmdId_EvtAnimatorStateChangedNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtAnimatorStateChangedNotify_CmdId_EvtAnimatorStateChangedNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtAnimatorStateChangedNotify_CmdId_IsValid(int value);
const EvtAnimatorStateChangedNotify_CmdId EvtAnimatorStateChangedNotify_CmdId_CmdId_MIN = EvtAnimatorStateChangedNotify_CmdId_NONE;
const EvtAnimatorStateChangedNotify_CmdId EvtAnimatorStateChangedNotify_CmdId_CmdId_MAX = EvtAnimatorStateChangedNotify_CmdId_CMD_ID;
const int EvtAnimatorStateChangedNotify_CmdId_CmdId_ARRAYSIZE = EvtAnimatorStateChangedNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtAnimatorStateChangedNotify_CmdId_descriptor();
inline const ::std::string& EvtAnimatorStateChangedNotify_CmdId_Name(EvtAnimatorStateChangedNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtAnimatorStateChangedNotify_CmdId_descriptor(), value);
}
inline bool EvtAnimatorStateChangedNotify_CmdId_Parse(
    const ::std::string& name, EvtAnimatorStateChangedNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtAnimatorStateChangedNotify_CmdId>(
    EvtAnimatorStateChangedNotify_CmdId_descriptor(), name, value);
}
enum EvtRushMoveNotify_CmdId {
  EvtRushMoveNotify_CmdId_NONE = 0,
  EvtRushMoveNotify_CmdId_CMD_ID = 375,
  EvtRushMoveNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtRushMoveNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtRushMoveNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtRushMoveNotify_CmdId_EvtRushMoveNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtRushMoveNotify_CmdId_EvtRushMoveNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtRushMoveNotify_CmdId_IsValid(int value);
const EvtRushMoveNotify_CmdId EvtRushMoveNotify_CmdId_CmdId_MIN = EvtRushMoveNotify_CmdId_NONE;
const EvtRushMoveNotify_CmdId EvtRushMoveNotify_CmdId_CmdId_MAX = EvtRushMoveNotify_CmdId_CMD_ID;
const int EvtRushMoveNotify_CmdId_CmdId_ARRAYSIZE = EvtRushMoveNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtRushMoveNotify_CmdId_descriptor();
inline const ::std::string& EvtRushMoveNotify_CmdId_Name(EvtRushMoveNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtRushMoveNotify_CmdId_descriptor(), value);
}
inline bool EvtRushMoveNotify_CmdId_Parse(
    const ::std::string& name, EvtRushMoveNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtRushMoveNotify_CmdId>(
    EvtRushMoveNotify_CmdId_descriptor(), name, value);
}
enum EvtBulletHitNotify_CmdId {
  EvtBulletHitNotify_CmdId_NONE = 0,
  EvtBulletHitNotify_CmdId_CMD_ID = 348,
  EvtBulletHitNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtBulletHitNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtBulletHitNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtBulletHitNotify_CmdId_EvtBulletHitNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtBulletHitNotify_CmdId_EvtBulletHitNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtBulletHitNotify_CmdId_IsValid(int value);
const EvtBulletHitNotify_CmdId EvtBulletHitNotify_CmdId_CmdId_MIN = EvtBulletHitNotify_CmdId_NONE;
const EvtBulletHitNotify_CmdId EvtBulletHitNotify_CmdId_CmdId_MAX = EvtBulletHitNotify_CmdId_CMD_ID;
const int EvtBulletHitNotify_CmdId_CmdId_ARRAYSIZE = EvtBulletHitNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtBulletHitNotify_CmdId_descriptor();
inline const ::std::string& EvtBulletHitNotify_CmdId_Name(EvtBulletHitNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtBulletHitNotify_CmdId_descriptor(), value);
}
inline bool EvtBulletHitNotify_CmdId_Parse(
    const ::std::string& name, EvtBulletHitNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtBulletHitNotify_CmdId>(
    EvtBulletHitNotify_CmdId_descriptor(), name, value);
}
enum EvtBulletDeactiveNotify_CmdId {
  EvtBulletDeactiveNotify_CmdId_NONE = 0,
  EvtBulletDeactiveNotify_CmdId_CMD_ID = 397,
  EvtBulletDeactiveNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtBulletDeactiveNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtBulletDeactiveNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtBulletDeactiveNotify_CmdId_EvtBulletDeactiveNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtBulletDeactiveNotify_CmdId_EvtBulletDeactiveNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtBulletDeactiveNotify_CmdId_IsValid(int value);
const EvtBulletDeactiveNotify_CmdId EvtBulletDeactiveNotify_CmdId_CmdId_MIN = EvtBulletDeactiveNotify_CmdId_NONE;
const EvtBulletDeactiveNotify_CmdId EvtBulletDeactiveNotify_CmdId_CmdId_MAX = EvtBulletDeactiveNotify_CmdId_CMD_ID;
const int EvtBulletDeactiveNotify_CmdId_CmdId_ARRAYSIZE = EvtBulletDeactiveNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtBulletDeactiveNotify_CmdId_descriptor();
inline const ::std::string& EvtBulletDeactiveNotify_CmdId_Name(EvtBulletDeactiveNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtBulletDeactiveNotify_CmdId_descriptor(), value);
}
inline bool EvtBulletDeactiveNotify_CmdId_Parse(
    const ::std::string& name, EvtBulletDeactiveNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtBulletDeactiveNotify_CmdId>(
    EvtBulletDeactiveNotify_CmdId_descriptor(), name, value);
}
enum EvtEntityStartDieEndNotify_CmdId {
  EvtEntityStartDieEndNotify_CmdId_NONE = 0,
  EvtEntityStartDieEndNotify_CmdId_CMD_ID = 381,
  EvtEntityStartDieEndNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtEntityStartDieEndNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtEntityStartDieEndNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtEntityStartDieEndNotify_CmdId_EvtEntityStartDieEndNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtEntityStartDieEndNotify_CmdId_EvtEntityStartDieEndNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtEntityStartDieEndNotify_CmdId_IsValid(int value);
const EvtEntityStartDieEndNotify_CmdId EvtEntityStartDieEndNotify_CmdId_CmdId_MIN = EvtEntityStartDieEndNotify_CmdId_NONE;
const EvtEntityStartDieEndNotify_CmdId EvtEntityStartDieEndNotify_CmdId_CmdId_MAX = EvtEntityStartDieEndNotify_CmdId_CMD_ID;
const int EvtEntityStartDieEndNotify_CmdId_CmdId_ARRAYSIZE = EvtEntityStartDieEndNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtEntityStartDieEndNotify_CmdId_descriptor();
inline const ::std::string& EvtEntityStartDieEndNotify_CmdId_Name(EvtEntityStartDieEndNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtEntityStartDieEndNotify_CmdId_descriptor(), value);
}
inline bool EvtEntityStartDieEndNotify_CmdId_Parse(
    const ::std::string& name, EvtEntityStartDieEndNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtEntityStartDieEndNotify_CmdId>(
    EvtEntityStartDieEndNotify_CmdId_descriptor(), name, value);
}
enum EvtBulletMoveNotify_CmdId {
  EvtBulletMoveNotify_CmdId_NONE = 0,
  EvtBulletMoveNotify_CmdId_CMD_ID = 365,
  EvtBulletMoveNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtBulletMoveNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtBulletMoveNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtBulletMoveNotify_CmdId_EvtBulletMoveNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtBulletMoveNotify_CmdId_EvtBulletMoveNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtBulletMoveNotify_CmdId_IsValid(int value);
const EvtBulletMoveNotify_CmdId EvtBulletMoveNotify_CmdId_CmdId_MIN = EvtBulletMoveNotify_CmdId_NONE;
const EvtBulletMoveNotify_CmdId EvtBulletMoveNotify_CmdId_CmdId_MAX = EvtBulletMoveNotify_CmdId_CMD_ID;
const int EvtBulletMoveNotify_CmdId_CmdId_ARRAYSIZE = EvtBulletMoveNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtBulletMoveNotify_CmdId_descriptor();
inline const ::std::string& EvtBulletMoveNotify_CmdId_Name(EvtBulletMoveNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtBulletMoveNotify_CmdId_descriptor(), value);
}
inline bool EvtBulletMoveNotify_CmdId_Parse(
    const ::std::string& name, EvtBulletMoveNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtBulletMoveNotify_CmdId>(
    EvtBulletMoveNotify_CmdId_descriptor(), name, value);
}
enum EvtAvatarEnterFocusNotify_CmdId {
  EvtAvatarEnterFocusNotify_CmdId_NONE = 0,
  EvtAvatarEnterFocusNotify_CmdId_CMD_ID = 304,
  EvtAvatarEnterFocusNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtAvatarEnterFocusNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtAvatarEnterFocusNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtAvatarEnterFocusNotify_CmdId_EvtAvatarEnterFocusNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtAvatarEnterFocusNotify_CmdId_EvtAvatarEnterFocusNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtAvatarEnterFocusNotify_CmdId_IsValid(int value);
const EvtAvatarEnterFocusNotify_CmdId EvtAvatarEnterFocusNotify_CmdId_CmdId_MIN = EvtAvatarEnterFocusNotify_CmdId_NONE;
const EvtAvatarEnterFocusNotify_CmdId EvtAvatarEnterFocusNotify_CmdId_CmdId_MAX = EvtAvatarEnterFocusNotify_CmdId_CMD_ID;
const int EvtAvatarEnterFocusNotify_CmdId_CmdId_ARRAYSIZE = EvtAvatarEnterFocusNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtAvatarEnterFocusNotify_CmdId_descriptor();
inline const ::std::string& EvtAvatarEnterFocusNotify_CmdId_Name(EvtAvatarEnterFocusNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtAvatarEnterFocusNotify_CmdId_descriptor(), value);
}
inline bool EvtAvatarEnterFocusNotify_CmdId_Parse(
    const ::std::string& name, EvtAvatarEnterFocusNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtAvatarEnterFocusNotify_CmdId>(
    EvtAvatarEnterFocusNotify_CmdId_descriptor(), name, value);
}
enum EvtAvatarExitFocusNotify_CmdId {
  EvtAvatarExitFocusNotify_CmdId_NONE = 0,
  EvtAvatarExitFocusNotify_CmdId_CMD_ID = 393,
  EvtAvatarExitFocusNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtAvatarExitFocusNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtAvatarExitFocusNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtAvatarExitFocusNotify_CmdId_EvtAvatarExitFocusNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtAvatarExitFocusNotify_CmdId_EvtAvatarExitFocusNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtAvatarExitFocusNotify_CmdId_IsValid(int value);
const EvtAvatarExitFocusNotify_CmdId EvtAvatarExitFocusNotify_CmdId_CmdId_MIN = EvtAvatarExitFocusNotify_CmdId_NONE;
const EvtAvatarExitFocusNotify_CmdId EvtAvatarExitFocusNotify_CmdId_CmdId_MAX = EvtAvatarExitFocusNotify_CmdId_CMD_ID;
const int EvtAvatarExitFocusNotify_CmdId_CmdId_ARRAYSIZE = EvtAvatarExitFocusNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtAvatarExitFocusNotify_CmdId_descriptor();
inline const ::std::string& EvtAvatarExitFocusNotify_CmdId_Name(EvtAvatarExitFocusNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtAvatarExitFocusNotify_CmdId_descriptor(), value);
}
inline bool EvtAvatarExitFocusNotify_CmdId_Parse(
    const ::std::string& name, EvtAvatarExitFocusNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtAvatarExitFocusNotify_CmdId>(
    EvtAvatarExitFocusNotify_CmdId_descriptor(), name, value);
}
enum EvtAvatarUpdateFocusNotify_CmdId {
  EvtAvatarUpdateFocusNotify_CmdId_NONE = 0,
  EvtAvatarUpdateFocusNotify_CmdId_CMD_ID = 327,
  EvtAvatarUpdateFocusNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtAvatarUpdateFocusNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtAvatarUpdateFocusNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtAvatarUpdateFocusNotify_CmdId_EvtAvatarUpdateFocusNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtAvatarUpdateFocusNotify_CmdId_EvtAvatarUpdateFocusNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtAvatarUpdateFocusNotify_CmdId_IsValid(int value);
const EvtAvatarUpdateFocusNotify_CmdId EvtAvatarUpdateFocusNotify_CmdId_CmdId_MIN = EvtAvatarUpdateFocusNotify_CmdId_NONE;
const EvtAvatarUpdateFocusNotify_CmdId EvtAvatarUpdateFocusNotify_CmdId_CmdId_MAX = EvtAvatarUpdateFocusNotify_CmdId_CMD_ID;
const int EvtAvatarUpdateFocusNotify_CmdId_CmdId_ARRAYSIZE = EvtAvatarUpdateFocusNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtAvatarUpdateFocusNotify_CmdId_descriptor();
inline const ::std::string& EvtAvatarUpdateFocusNotify_CmdId_Name(EvtAvatarUpdateFocusNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtAvatarUpdateFocusNotify_CmdId_descriptor(), value);
}
inline bool EvtAvatarUpdateFocusNotify_CmdId_Parse(
    const ::std::string& name, EvtAvatarUpdateFocusNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtAvatarUpdateFocusNotify_CmdId>(
    EvtAvatarUpdateFocusNotify_CmdId_descriptor(), name, value);
}
enum EntityAuthorityChangeNotify_CmdId {
  EntityAuthorityChangeNotify_CmdId_NONE = 0,
  EntityAuthorityChangeNotify_CmdId_CMD_ID = 394,
  EntityAuthorityChangeNotify_CmdId_ENET_CHANNEL_ID = 0,
  EntityAuthorityChangeNotify_CmdId_ENET_IS_RELIABLE = 1,
  EntityAuthorityChangeNotify_CmdId_EntityAuthorityChangeNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EntityAuthorityChangeNotify_CmdId_EntityAuthorityChangeNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EntityAuthorityChangeNotify_CmdId_IsValid(int value);
const EntityAuthorityChangeNotify_CmdId EntityAuthorityChangeNotify_CmdId_CmdId_MIN = EntityAuthorityChangeNotify_CmdId_NONE;
const EntityAuthorityChangeNotify_CmdId EntityAuthorityChangeNotify_CmdId_CmdId_MAX = EntityAuthorityChangeNotify_CmdId_CMD_ID;
const int EntityAuthorityChangeNotify_CmdId_CmdId_ARRAYSIZE = EntityAuthorityChangeNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EntityAuthorityChangeNotify_CmdId_descriptor();
inline const ::std::string& EntityAuthorityChangeNotify_CmdId_Name(EntityAuthorityChangeNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EntityAuthorityChangeNotify_CmdId_descriptor(), value);
}
inline bool EntityAuthorityChangeNotify_CmdId_Parse(
    const ::std::string& name, EntityAuthorityChangeNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EntityAuthorityChangeNotify_CmdId>(
    EntityAuthorityChangeNotify_CmdId_descriptor(), name, value);
}
enum AvatarBuffAddNotify_CmdId {
  AvatarBuffAddNotify_CmdId_NONE = 0,
  AvatarBuffAddNotify_CmdId_CMD_ID = 388,
  AvatarBuffAddNotify_CmdId_ENET_CHANNEL_ID = 0,
  AvatarBuffAddNotify_CmdId_ENET_IS_RELIABLE = 1,
  AvatarBuffAddNotify_CmdId_IS_ALLOW_CLIENT = 1,
  AvatarBuffAddNotify_CmdId_AvatarBuffAddNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarBuffAddNotify_CmdId_AvatarBuffAddNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarBuffAddNotify_CmdId_IsValid(int value);
const AvatarBuffAddNotify_CmdId AvatarBuffAddNotify_CmdId_CmdId_MIN = AvatarBuffAddNotify_CmdId_NONE;
const AvatarBuffAddNotify_CmdId AvatarBuffAddNotify_CmdId_CmdId_MAX = AvatarBuffAddNotify_CmdId_CMD_ID;
const int AvatarBuffAddNotify_CmdId_CmdId_ARRAYSIZE = AvatarBuffAddNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarBuffAddNotify_CmdId_descriptor();
inline const ::std::string& AvatarBuffAddNotify_CmdId_Name(AvatarBuffAddNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarBuffAddNotify_CmdId_descriptor(), value);
}
inline bool AvatarBuffAddNotify_CmdId_Parse(
    const ::std::string& name, AvatarBuffAddNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarBuffAddNotify_CmdId>(
    AvatarBuffAddNotify_CmdId_descriptor(), name, value);
}
enum AvatarBuffDelNotify_CmdId {
  AvatarBuffDelNotify_CmdId_NONE = 0,
  AvatarBuffDelNotify_CmdId_CMD_ID = 326,
  AvatarBuffDelNotify_CmdId_ENET_CHANNEL_ID = 0,
  AvatarBuffDelNotify_CmdId_ENET_IS_RELIABLE = 1,
  AvatarBuffDelNotify_CmdId_IS_ALLOW_CLIENT = 1,
  AvatarBuffDelNotify_CmdId_AvatarBuffDelNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarBuffDelNotify_CmdId_AvatarBuffDelNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarBuffDelNotify_CmdId_IsValid(int value);
const AvatarBuffDelNotify_CmdId AvatarBuffDelNotify_CmdId_CmdId_MIN = AvatarBuffDelNotify_CmdId_NONE;
const AvatarBuffDelNotify_CmdId AvatarBuffDelNotify_CmdId_CmdId_MAX = AvatarBuffDelNotify_CmdId_CMD_ID;
const int AvatarBuffDelNotify_CmdId_CmdId_ARRAYSIZE = AvatarBuffDelNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarBuffDelNotify_CmdId_descriptor();
inline const ::std::string& AvatarBuffDelNotify_CmdId_Name(AvatarBuffDelNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarBuffDelNotify_CmdId_descriptor(), value);
}
inline bool AvatarBuffDelNotify_CmdId_Parse(
    const ::std::string& name, AvatarBuffDelNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarBuffDelNotify_CmdId>(
    AvatarBuffDelNotify_CmdId_descriptor(), name, value);
}
enum MonsterAlertChangeNotify_CmdId {
  MonsterAlertChangeNotify_CmdId_NONE = 0,
  MonsterAlertChangeNotify_CmdId_CMD_ID = 363,
  MonsterAlertChangeNotify_CmdId_ENET_CHANNEL_ID = 0,
  MonsterAlertChangeNotify_CmdId_ENET_IS_RELIABLE = 1,
  MonsterAlertChangeNotify_CmdId_IS_ALLOW_CLIENT = 1,
  MonsterAlertChangeNotify_CmdId_MonsterAlertChangeNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MonsterAlertChangeNotify_CmdId_MonsterAlertChangeNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MonsterAlertChangeNotify_CmdId_IsValid(int value);
const MonsterAlertChangeNotify_CmdId MonsterAlertChangeNotify_CmdId_CmdId_MIN = MonsterAlertChangeNotify_CmdId_NONE;
const MonsterAlertChangeNotify_CmdId MonsterAlertChangeNotify_CmdId_CmdId_MAX = MonsterAlertChangeNotify_CmdId_CMD_ID;
const int MonsterAlertChangeNotify_CmdId_CmdId_ARRAYSIZE = MonsterAlertChangeNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MonsterAlertChangeNotify_CmdId_descriptor();
inline const ::std::string& MonsterAlertChangeNotify_CmdId_Name(MonsterAlertChangeNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MonsterAlertChangeNotify_CmdId_descriptor(), value);
}
inline bool MonsterAlertChangeNotify_CmdId_Parse(
    const ::std::string& name, MonsterAlertChangeNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MonsterAlertChangeNotify_CmdId>(
    MonsterAlertChangeNotify_CmdId_descriptor(), name, value);
}
enum MonsterForceAlertNotify_CmdId {
  MonsterForceAlertNotify_CmdId_NONE = 0,
  MonsterForceAlertNotify_CmdId_CMD_ID = 395,
  MonsterForceAlertNotify_CmdId_ENET_CHANNEL_ID = 0,
  MonsterForceAlertNotify_CmdId_ENET_IS_RELIABLE = 1,
  MonsterForceAlertNotify_CmdId_MonsterForceAlertNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MonsterForceAlertNotify_CmdId_MonsterForceAlertNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MonsterForceAlertNotify_CmdId_IsValid(int value);
const MonsterForceAlertNotify_CmdId MonsterForceAlertNotify_CmdId_CmdId_MIN = MonsterForceAlertNotify_CmdId_NONE;
const MonsterForceAlertNotify_CmdId MonsterForceAlertNotify_CmdId_CmdId_MAX = MonsterForceAlertNotify_CmdId_CMD_ID;
const int MonsterForceAlertNotify_CmdId_CmdId_ARRAYSIZE = MonsterForceAlertNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MonsterForceAlertNotify_CmdId_descriptor();
inline const ::std::string& MonsterForceAlertNotify_CmdId_Name(MonsterForceAlertNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MonsterForceAlertNotify_CmdId_descriptor(), value);
}
inline bool MonsterForceAlertNotify_CmdId_Parse(
    const ::std::string& name, MonsterForceAlertNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MonsterForceAlertNotify_CmdId>(
    MonsterForceAlertNotify_CmdId_descriptor(), name, value);
}
enum AvatarEnterElementViewNotify_CmdId {
  AvatarEnterElementViewNotify_CmdId_NONE = 0,
  AvatarEnterElementViewNotify_CmdId_CMD_ID = 334,
  AvatarEnterElementViewNotify_CmdId_ENET_CHANNEL_ID = 0,
  AvatarEnterElementViewNotify_CmdId_ENET_IS_RELIABLE = 1,
  AvatarEnterElementViewNotify_CmdId_IS_ALLOW_CLIENT = 1,
  AvatarEnterElementViewNotify_CmdId_AvatarEnterElementViewNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarEnterElementViewNotify_CmdId_AvatarEnterElementViewNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarEnterElementViewNotify_CmdId_IsValid(int value);
const AvatarEnterElementViewNotify_CmdId AvatarEnterElementViewNotify_CmdId_CmdId_MIN = AvatarEnterElementViewNotify_CmdId_NONE;
const AvatarEnterElementViewNotify_CmdId AvatarEnterElementViewNotify_CmdId_CmdId_MAX = AvatarEnterElementViewNotify_CmdId_CMD_ID;
const int AvatarEnterElementViewNotify_CmdId_CmdId_ARRAYSIZE = AvatarEnterElementViewNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarEnterElementViewNotify_CmdId_descriptor();
inline const ::std::string& AvatarEnterElementViewNotify_CmdId_Name(AvatarEnterElementViewNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarEnterElementViewNotify_CmdId_descriptor(), value);
}
inline bool AvatarEnterElementViewNotify_CmdId_Parse(
    const ::std::string& name, AvatarEnterElementViewNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarEnterElementViewNotify_CmdId>(
    AvatarEnterElementViewNotify_CmdId_descriptor(), name, value);
}
enum TriggerCreateGadgetToEquipPartNotify_CmdId {
  TriggerCreateGadgetToEquipPartNotify_CmdId_NONE = 0,
  TriggerCreateGadgetToEquipPartNotify_CmdId_CMD_ID = 350,
  TriggerCreateGadgetToEquipPartNotify_CmdId_ENET_CHANNEL_ID = 0,
  TriggerCreateGadgetToEquipPartNotify_CmdId_ENET_IS_RELIABLE = 1,
  TriggerCreateGadgetToEquipPartNotify_CmdId_TriggerCreateGadgetToEquipPartNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TriggerCreateGadgetToEquipPartNotify_CmdId_TriggerCreateGadgetToEquipPartNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TriggerCreateGadgetToEquipPartNotify_CmdId_IsValid(int value);
const TriggerCreateGadgetToEquipPartNotify_CmdId TriggerCreateGadgetToEquipPartNotify_CmdId_CmdId_MIN = TriggerCreateGadgetToEquipPartNotify_CmdId_NONE;
const TriggerCreateGadgetToEquipPartNotify_CmdId TriggerCreateGadgetToEquipPartNotify_CmdId_CmdId_MAX = TriggerCreateGadgetToEquipPartNotify_CmdId_CMD_ID;
const int TriggerCreateGadgetToEquipPartNotify_CmdId_CmdId_ARRAYSIZE = TriggerCreateGadgetToEquipPartNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TriggerCreateGadgetToEquipPartNotify_CmdId_descriptor();
inline const ::std::string& TriggerCreateGadgetToEquipPartNotify_CmdId_Name(TriggerCreateGadgetToEquipPartNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TriggerCreateGadgetToEquipPartNotify_CmdId_descriptor(), value);
}
inline bool TriggerCreateGadgetToEquipPartNotify_CmdId_Parse(
    const ::std::string& name, TriggerCreateGadgetToEquipPartNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TriggerCreateGadgetToEquipPartNotify_CmdId>(
    TriggerCreateGadgetToEquipPartNotify_CmdId_descriptor(), name, value);
}
enum EvtEntityRenderersChangedNotify_CmdId {
  EvtEntityRenderersChangedNotify_CmdId_NONE = 0,
  EvtEntityRenderersChangedNotify_CmdId_CMD_ID = 343,
  EvtEntityRenderersChangedNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtEntityRenderersChangedNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtEntityRenderersChangedNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtEntityRenderersChangedNotify_CmdId_EvtEntityRenderersChangedNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtEntityRenderersChangedNotify_CmdId_EvtEntityRenderersChangedNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtEntityRenderersChangedNotify_CmdId_IsValid(int value);
const EvtEntityRenderersChangedNotify_CmdId EvtEntityRenderersChangedNotify_CmdId_CmdId_MIN = EvtEntityRenderersChangedNotify_CmdId_NONE;
const EvtEntityRenderersChangedNotify_CmdId EvtEntityRenderersChangedNotify_CmdId_CmdId_MAX = EvtEntityRenderersChangedNotify_CmdId_CMD_ID;
const int EvtEntityRenderersChangedNotify_CmdId_CmdId_ARRAYSIZE = EvtEntityRenderersChangedNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtEntityRenderersChangedNotify_CmdId_descriptor();
inline const ::std::string& EvtEntityRenderersChangedNotify_CmdId_Name(EvtEntityRenderersChangedNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtEntityRenderersChangedNotify_CmdId_descriptor(), value);
}
inline bool EvtEntityRenderersChangedNotify_CmdId_Parse(
    const ::std::string& name, EvtEntityRenderersChangedNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtEntityRenderersChangedNotify_CmdId>(
    EvtEntityRenderersChangedNotify_CmdId_descriptor(), name, value);
}
enum AnimatorForceSetAirMoveNotify_CmdId {
  AnimatorForceSetAirMoveNotify_CmdId_NONE = 0,
  AnimatorForceSetAirMoveNotify_CmdId_CMD_ID = 374,
  AnimatorForceSetAirMoveNotify_CmdId_ENET_CHANNEL_ID = 0,
  AnimatorForceSetAirMoveNotify_CmdId_ENET_IS_RELIABLE = 1,
  AnimatorForceSetAirMoveNotify_CmdId_IS_ALLOW_CLIENT = 1,
  AnimatorForceSetAirMoveNotify_CmdId_AnimatorForceSetAirMoveNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AnimatorForceSetAirMoveNotify_CmdId_AnimatorForceSetAirMoveNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AnimatorForceSetAirMoveNotify_CmdId_IsValid(int value);
const AnimatorForceSetAirMoveNotify_CmdId AnimatorForceSetAirMoveNotify_CmdId_CmdId_MIN = AnimatorForceSetAirMoveNotify_CmdId_NONE;
const AnimatorForceSetAirMoveNotify_CmdId AnimatorForceSetAirMoveNotify_CmdId_CmdId_MAX = AnimatorForceSetAirMoveNotify_CmdId_CMD_ID;
const int AnimatorForceSetAirMoveNotify_CmdId_CmdId_ARRAYSIZE = AnimatorForceSetAirMoveNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AnimatorForceSetAirMoveNotify_CmdId_descriptor();
inline const ::std::string& AnimatorForceSetAirMoveNotify_CmdId_Name(AnimatorForceSetAirMoveNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AnimatorForceSetAirMoveNotify_CmdId_descriptor(), value);
}
inline bool AnimatorForceSetAirMoveNotify_CmdId_Parse(
    const ::std::string& name, AnimatorForceSetAirMoveNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AnimatorForceSetAirMoveNotify_CmdId>(
    AnimatorForceSetAirMoveNotify_CmdId_descriptor(), name, value);
}
enum EvtAiSyncSkillCdNotify_CmdId {
  EvtAiSyncSkillCdNotify_CmdId_NONE = 0,
  EvtAiSyncSkillCdNotify_CmdId_CMD_ID = 376,
  EvtAiSyncSkillCdNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtAiSyncSkillCdNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtAiSyncSkillCdNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtAiSyncSkillCdNotify_CmdId_EvtAiSyncSkillCdNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtAiSyncSkillCdNotify_CmdId_EvtAiSyncSkillCdNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtAiSyncSkillCdNotify_CmdId_IsValid(int value);
const EvtAiSyncSkillCdNotify_CmdId EvtAiSyncSkillCdNotify_CmdId_CmdId_MIN = EvtAiSyncSkillCdNotify_CmdId_NONE;
const EvtAiSyncSkillCdNotify_CmdId EvtAiSyncSkillCdNotify_CmdId_CmdId_MAX = EvtAiSyncSkillCdNotify_CmdId_CMD_ID;
const int EvtAiSyncSkillCdNotify_CmdId_CmdId_ARRAYSIZE = EvtAiSyncSkillCdNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtAiSyncSkillCdNotify_CmdId_descriptor();
inline const ::std::string& EvtAiSyncSkillCdNotify_CmdId_Name(EvtAiSyncSkillCdNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtAiSyncSkillCdNotify_CmdId_descriptor(), value);
}
inline bool EvtAiSyncSkillCdNotify_CmdId_Parse(
    const ::std::string& name, EvtAiSyncSkillCdNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtAiSyncSkillCdNotify_CmdId>(
    EvtAiSyncSkillCdNotify_CmdId_descriptor(), name, value);
}
enum EvtBeingHitsCombineNotify_CmdId {
  EvtBeingHitsCombineNotify_CmdId_NONE = 0,
  EvtBeingHitsCombineNotify_CmdId_CMD_ID = 346,
  EvtBeingHitsCombineNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtBeingHitsCombineNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtBeingHitsCombineNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtBeingHitsCombineNotify_CmdId_EvtBeingHitsCombineNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtBeingHitsCombineNotify_CmdId_EvtBeingHitsCombineNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtBeingHitsCombineNotify_CmdId_IsValid(int value);
const EvtBeingHitsCombineNotify_CmdId EvtBeingHitsCombineNotify_CmdId_CmdId_MIN = EvtBeingHitsCombineNotify_CmdId_NONE;
const EvtBeingHitsCombineNotify_CmdId EvtBeingHitsCombineNotify_CmdId_CmdId_MAX = EvtBeingHitsCombineNotify_CmdId_CMD_ID;
const int EvtBeingHitsCombineNotify_CmdId_CmdId_ARRAYSIZE = EvtBeingHitsCombineNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtBeingHitsCombineNotify_CmdId_descriptor();
inline const ::std::string& EvtBeingHitsCombineNotify_CmdId_Name(EvtBeingHitsCombineNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtBeingHitsCombineNotify_CmdId_descriptor(), value);
}
inline bool EvtBeingHitsCombineNotify_CmdId_Parse(
    const ::std::string& name, EvtBeingHitsCombineNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtBeingHitsCombineNotify_CmdId>(
    EvtBeingHitsCombineNotify_CmdId_descriptor(), name, value);
}
enum EvtAvatarSitDownNotify_CmdId {
  EvtAvatarSitDownNotify_CmdId_NONE = 0,
  EvtAvatarSitDownNotify_CmdId_CMD_ID = 324,
  EvtAvatarSitDownNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtAvatarSitDownNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtAvatarSitDownNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtAvatarSitDownNotify_CmdId_EvtAvatarSitDownNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtAvatarSitDownNotify_CmdId_EvtAvatarSitDownNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtAvatarSitDownNotify_CmdId_IsValid(int value);
const EvtAvatarSitDownNotify_CmdId EvtAvatarSitDownNotify_CmdId_CmdId_MIN = EvtAvatarSitDownNotify_CmdId_NONE;
const EvtAvatarSitDownNotify_CmdId EvtAvatarSitDownNotify_CmdId_CmdId_MAX = EvtAvatarSitDownNotify_CmdId_CMD_ID;
const int EvtAvatarSitDownNotify_CmdId_CmdId_ARRAYSIZE = EvtAvatarSitDownNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtAvatarSitDownNotify_CmdId_descriptor();
inline const ::std::string& EvtAvatarSitDownNotify_CmdId_Name(EvtAvatarSitDownNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtAvatarSitDownNotify_CmdId_descriptor(), value);
}
inline bool EvtAvatarSitDownNotify_CmdId_Parse(
    const ::std::string& name, EvtAvatarSitDownNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtAvatarSitDownNotify_CmdId>(
    EvtAvatarSitDownNotify_CmdId_descriptor(), name, value);
}
enum EvtAvatarStandUpNotify_CmdId {
  EvtAvatarStandUpNotify_CmdId_NONE = 0,
  EvtAvatarStandUpNotify_CmdId_CMD_ID = 356,
  EvtAvatarStandUpNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtAvatarStandUpNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtAvatarStandUpNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtAvatarStandUpNotify_CmdId_EvtAvatarStandUpNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtAvatarStandUpNotify_CmdId_EvtAvatarStandUpNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtAvatarStandUpNotify_CmdId_IsValid(int value);
const EvtAvatarStandUpNotify_CmdId EvtAvatarStandUpNotify_CmdId_CmdId_MIN = EvtAvatarStandUpNotify_CmdId_NONE;
const EvtAvatarStandUpNotify_CmdId EvtAvatarStandUpNotify_CmdId_CmdId_MAX = EvtAvatarStandUpNotify_CmdId_CMD_ID;
const int EvtAvatarStandUpNotify_CmdId_CmdId_ARRAYSIZE = EvtAvatarStandUpNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtAvatarStandUpNotify_CmdId_descriptor();
inline const ::std::string& EvtAvatarStandUpNotify_CmdId_Name(EvtAvatarStandUpNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtAvatarStandUpNotify_CmdId_descriptor(), value);
}
inline bool EvtAvatarStandUpNotify_CmdId_Parse(
    const ::std::string& name, EvtAvatarStandUpNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtAvatarStandUpNotify_CmdId>(
    EvtAvatarStandUpNotify_CmdId_descriptor(), name, value);
}
enum CreateMassiveEntityReq_CmdId {
  CreateMassiveEntityReq_CmdId_NONE = 0,
  CreateMassiveEntityReq_CmdId_CMD_ID = 342,
  CreateMassiveEntityReq_CmdId_ENET_CHANNEL_ID = 0,
  CreateMassiveEntityReq_CmdId_ENET_IS_RELIABLE = 1,
  CreateMassiveEntityReq_CmdId_IS_ALLOW_CLIENT = 1,
  CreateMassiveEntityReq_CmdId_CreateMassiveEntityReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CreateMassiveEntityReq_CmdId_CreateMassiveEntityReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CreateMassiveEntityReq_CmdId_IsValid(int value);
const CreateMassiveEntityReq_CmdId CreateMassiveEntityReq_CmdId_CmdId_MIN = CreateMassiveEntityReq_CmdId_NONE;
const CreateMassiveEntityReq_CmdId CreateMassiveEntityReq_CmdId_CmdId_MAX = CreateMassiveEntityReq_CmdId_CMD_ID;
const int CreateMassiveEntityReq_CmdId_CmdId_ARRAYSIZE = CreateMassiveEntityReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CreateMassiveEntityReq_CmdId_descriptor();
inline const ::std::string& CreateMassiveEntityReq_CmdId_Name(CreateMassiveEntityReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CreateMassiveEntityReq_CmdId_descriptor(), value);
}
inline bool CreateMassiveEntityReq_CmdId_Parse(
    const ::std::string& name, CreateMassiveEntityReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateMassiveEntityReq_CmdId>(
    CreateMassiveEntityReq_CmdId_descriptor(), name, value);
}
enum CreateMassiveEntityRsp_CmdId {
  CreateMassiveEntityRsp_CmdId_NONE = 0,
  CreateMassiveEntityRsp_CmdId_CMD_ID = 330,
  CreateMassiveEntityRsp_CmdId_ENET_CHANNEL_ID = 0,
  CreateMassiveEntityRsp_CmdId_ENET_IS_RELIABLE = 1,
  CreateMassiveEntityRsp_CmdId_CreateMassiveEntityRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CreateMassiveEntityRsp_CmdId_CreateMassiveEntityRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CreateMassiveEntityRsp_CmdId_IsValid(int value);
const CreateMassiveEntityRsp_CmdId CreateMassiveEntityRsp_CmdId_CmdId_MIN = CreateMassiveEntityRsp_CmdId_NONE;
const CreateMassiveEntityRsp_CmdId CreateMassiveEntityRsp_CmdId_CmdId_MAX = CreateMassiveEntityRsp_CmdId_CMD_ID;
const int CreateMassiveEntityRsp_CmdId_CmdId_ARRAYSIZE = CreateMassiveEntityRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CreateMassiveEntityRsp_CmdId_descriptor();
inline const ::std::string& CreateMassiveEntityRsp_CmdId_Name(CreateMassiveEntityRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CreateMassiveEntityRsp_CmdId_descriptor(), value);
}
inline bool CreateMassiveEntityRsp_CmdId_Parse(
    const ::std::string& name, CreateMassiveEntityRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateMassiveEntityRsp_CmdId>(
    CreateMassiveEntityRsp_CmdId_descriptor(), name, value);
}
enum CreateMassiveEntityNotify_CmdId {
  CreateMassiveEntityNotify_CmdId_NONE = 0,
  CreateMassiveEntityNotify_CmdId_CMD_ID = 367,
  CreateMassiveEntityNotify_CmdId_ENET_CHANNEL_ID = 0,
  CreateMassiveEntityNotify_CmdId_ENET_IS_RELIABLE = 1,
  CreateMassiveEntityNotify_CmdId_CreateMassiveEntityNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CreateMassiveEntityNotify_CmdId_CreateMassiveEntityNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CreateMassiveEntityNotify_CmdId_IsValid(int value);
const CreateMassiveEntityNotify_CmdId CreateMassiveEntityNotify_CmdId_CmdId_MIN = CreateMassiveEntityNotify_CmdId_NONE;
const CreateMassiveEntityNotify_CmdId CreateMassiveEntityNotify_CmdId_CmdId_MAX = CreateMassiveEntityNotify_CmdId_CMD_ID;
const int CreateMassiveEntityNotify_CmdId_CmdId_ARRAYSIZE = CreateMassiveEntityNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CreateMassiveEntityNotify_CmdId_descriptor();
inline const ::std::string& CreateMassiveEntityNotify_CmdId_Name(CreateMassiveEntityNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CreateMassiveEntityNotify_CmdId_descriptor(), value);
}
inline bool CreateMassiveEntityNotify_CmdId_Parse(
    const ::std::string& name, CreateMassiveEntityNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateMassiveEntityNotify_CmdId>(
    CreateMassiveEntityNotify_CmdId_descriptor(), name, value);
}
enum DestroyMassiveEntityNotify_CmdId {
  DestroyMassiveEntityNotify_CmdId_NONE = 0,
  DestroyMassiveEntityNotify_CmdId_CMD_ID = 358,
  DestroyMassiveEntityNotify_CmdId_ENET_CHANNEL_ID = 0,
  DestroyMassiveEntityNotify_CmdId_ENET_IS_RELIABLE = 1,
  DestroyMassiveEntityNotify_CmdId_IS_ALLOW_CLIENT = 1,
  DestroyMassiveEntityNotify_CmdId_DestroyMassiveEntityNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DestroyMassiveEntityNotify_CmdId_DestroyMassiveEntityNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DestroyMassiveEntityNotify_CmdId_IsValid(int value);
const DestroyMassiveEntityNotify_CmdId DestroyMassiveEntityNotify_CmdId_CmdId_MIN = DestroyMassiveEntityNotify_CmdId_NONE;
const DestroyMassiveEntityNotify_CmdId DestroyMassiveEntityNotify_CmdId_CmdId_MAX = DestroyMassiveEntityNotify_CmdId_CMD_ID;
const int DestroyMassiveEntityNotify_CmdId_CmdId_ARRAYSIZE = DestroyMassiveEntityNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* DestroyMassiveEntityNotify_CmdId_descriptor();
inline const ::std::string& DestroyMassiveEntityNotify_CmdId_Name(DestroyMassiveEntityNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    DestroyMassiveEntityNotify_CmdId_descriptor(), value);
}
inline bool DestroyMassiveEntityNotify_CmdId_Parse(
    const ::std::string& name, DestroyMassiveEntityNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DestroyMassiveEntityNotify_CmdId>(
    DestroyMassiveEntityNotify_CmdId_descriptor(), name, value);
}
enum MassiveEntityStateChangedNotify_CmdId {
  MassiveEntityStateChangedNotify_CmdId_NONE = 0,
  MassiveEntityStateChangedNotify_CmdId_CMD_ID = 370,
  MassiveEntityStateChangedNotify_CmdId_ENET_CHANNEL_ID = 0,
  MassiveEntityStateChangedNotify_CmdId_ENET_IS_RELIABLE = 1,
  MassiveEntityStateChangedNotify_CmdId_IS_ALLOW_CLIENT = 1,
  MassiveEntityStateChangedNotify_CmdId_MassiveEntityStateChangedNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MassiveEntityStateChangedNotify_CmdId_MassiveEntityStateChangedNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MassiveEntityStateChangedNotify_CmdId_IsValid(int value);
const MassiveEntityStateChangedNotify_CmdId MassiveEntityStateChangedNotify_CmdId_CmdId_MIN = MassiveEntityStateChangedNotify_CmdId_NONE;
const MassiveEntityStateChangedNotify_CmdId MassiveEntityStateChangedNotify_CmdId_CmdId_MAX = MassiveEntityStateChangedNotify_CmdId_CMD_ID;
const int MassiveEntityStateChangedNotify_CmdId_CmdId_ARRAYSIZE = MassiveEntityStateChangedNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MassiveEntityStateChangedNotify_CmdId_descriptor();
inline const ::std::string& MassiveEntityStateChangedNotify_CmdId_Name(MassiveEntityStateChangedNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MassiveEntityStateChangedNotify_CmdId_descriptor(), value);
}
inline bool MassiveEntityStateChangedNotify_CmdId_Parse(
    const ::std::string& name, MassiveEntityStateChangedNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MassiveEntityStateChangedNotify_CmdId>(
    MassiveEntityStateChangedNotify_CmdId_descriptor(), name, value);
}
enum SyncTeamEntityNotify_CmdId {
  SyncTeamEntityNotify_CmdId_NONE = 0,
  SyncTeamEntityNotify_CmdId_CMD_ID = 317,
  SyncTeamEntityNotify_CmdId_ENET_CHANNEL_ID = 0,
  SyncTeamEntityNotify_CmdId_ENET_IS_RELIABLE = 1,
  SyncTeamEntityNotify_CmdId_SyncTeamEntityNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SyncTeamEntityNotify_CmdId_SyncTeamEntityNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SyncTeamEntityNotify_CmdId_IsValid(int value);
const SyncTeamEntityNotify_CmdId SyncTeamEntityNotify_CmdId_CmdId_MIN = SyncTeamEntityNotify_CmdId_NONE;
const SyncTeamEntityNotify_CmdId SyncTeamEntityNotify_CmdId_CmdId_MAX = SyncTeamEntityNotify_CmdId_CMD_ID;
const int SyncTeamEntityNotify_CmdId_CmdId_ARRAYSIZE = SyncTeamEntityNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SyncTeamEntityNotify_CmdId_descriptor();
inline const ::std::string& SyncTeamEntityNotify_CmdId_Name(SyncTeamEntityNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SyncTeamEntityNotify_CmdId_descriptor(), value);
}
inline bool SyncTeamEntityNotify_CmdId_Parse(
    const ::std::string& name, SyncTeamEntityNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SyncTeamEntityNotify_CmdId>(
    SyncTeamEntityNotify_CmdId_descriptor(), name, value);
}
enum DelTeamEntityNotify_CmdId {
  DelTeamEntityNotify_CmdId_NONE = 0,
  DelTeamEntityNotify_CmdId_CMD_ID = 302,
  DelTeamEntityNotify_CmdId_ENET_CHANNEL_ID = 0,
  DelTeamEntityNotify_CmdId_ENET_IS_RELIABLE = 1,
  DelTeamEntityNotify_CmdId_DelTeamEntityNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DelTeamEntityNotify_CmdId_DelTeamEntityNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DelTeamEntityNotify_CmdId_IsValid(int value);
const DelTeamEntityNotify_CmdId DelTeamEntityNotify_CmdId_CmdId_MIN = DelTeamEntityNotify_CmdId_NONE;
const DelTeamEntityNotify_CmdId DelTeamEntityNotify_CmdId_CmdId_MAX = DelTeamEntityNotify_CmdId_CMD_ID;
const int DelTeamEntityNotify_CmdId_CmdId_ARRAYSIZE = DelTeamEntityNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* DelTeamEntityNotify_CmdId_descriptor();
inline const ::std::string& DelTeamEntityNotify_CmdId_Name(DelTeamEntityNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    DelTeamEntityNotify_CmdId_descriptor(), value);
}
inline bool DelTeamEntityNotify_CmdId_Parse(
    const ::std::string& name, DelTeamEntityNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DelTeamEntityNotify_CmdId>(
    DelTeamEntityNotify_CmdId_descriptor(), name, value);
}
enum CombatInvocationsNotify_CmdId {
  CombatInvocationsNotify_CmdId_NONE = 0,
  CombatInvocationsNotify_CmdId_CMD_ID = 319,
  CombatInvocationsNotify_CmdId_ENET_CHANNEL_ID = 0,
  CombatInvocationsNotify_CmdId_ENET_IS_RELIABLE = 1,
  CombatInvocationsNotify_CmdId_IS_ALLOW_CLIENT = 1,
  CombatInvocationsNotify_CmdId_CombatInvocationsNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CombatInvocationsNotify_CmdId_CombatInvocationsNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CombatInvocationsNotify_CmdId_IsValid(int value);
const CombatInvocationsNotify_CmdId CombatInvocationsNotify_CmdId_CmdId_MIN = CombatInvocationsNotify_CmdId_NONE;
const CombatInvocationsNotify_CmdId CombatInvocationsNotify_CmdId_CmdId_MAX = CombatInvocationsNotify_CmdId_CMD_ID;
const int CombatInvocationsNotify_CmdId_CmdId_ARRAYSIZE = CombatInvocationsNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CombatInvocationsNotify_CmdId_descriptor();
inline const ::std::string& CombatInvocationsNotify_CmdId_Name(CombatInvocationsNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CombatInvocationsNotify_CmdId_descriptor(), value);
}
inline bool CombatInvocationsNotify_CmdId_Parse(
    const ::std::string& name, CombatInvocationsNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CombatInvocationsNotify_CmdId>(
    CombatInvocationsNotify_CmdId_descriptor(), name, value);
}
enum ServerBuffChangeNotify_CmdId {
  ServerBuffChangeNotify_CmdId_NONE = 0,
  ServerBuffChangeNotify_CmdId_CMD_ID = 361,
  ServerBuffChangeNotify_CmdId_ENET_CHANNEL_ID = 0,
  ServerBuffChangeNotify_CmdId_ENET_IS_RELIABLE = 1,
  ServerBuffChangeNotify_CmdId_ServerBuffChangeNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServerBuffChangeNotify_CmdId_ServerBuffChangeNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ServerBuffChangeNotify_CmdId_IsValid(int value);
const ServerBuffChangeNotify_CmdId ServerBuffChangeNotify_CmdId_CmdId_MIN = ServerBuffChangeNotify_CmdId_NONE;
const ServerBuffChangeNotify_CmdId ServerBuffChangeNotify_CmdId_CmdId_MAX = ServerBuffChangeNotify_CmdId_CMD_ID;
const int ServerBuffChangeNotify_CmdId_CmdId_ARRAYSIZE = ServerBuffChangeNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerBuffChangeNotify_CmdId_descriptor();
inline const ::std::string& ServerBuffChangeNotify_CmdId_Name(ServerBuffChangeNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerBuffChangeNotify_CmdId_descriptor(), value);
}
inline bool ServerBuffChangeNotify_CmdId_Parse(
    const ::std::string& name, ServerBuffChangeNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerBuffChangeNotify_CmdId>(
    ServerBuffChangeNotify_CmdId_descriptor(), name, value);
}
enum ServerBuffChangeNotify_ServerBuffChangeType {
  ServerBuffChangeNotify_ServerBuffChangeType_ADD_SERVER_BUFF = 0,
  ServerBuffChangeNotify_ServerBuffChangeType_DEL_SERVER_BUFF = 1,
  ServerBuffChangeNotify_ServerBuffChangeType_ServerBuffChangeNotify_ServerBuffChangeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServerBuffChangeNotify_ServerBuffChangeType_ServerBuffChangeNotify_ServerBuffChangeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ServerBuffChangeNotify_ServerBuffChangeType_IsValid(int value);
const ServerBuffChangeNotify_ServerBuffChangeType ServerBuffChangeNotify_ServerBuffChangeType_ServerBuffChangeType_MIN = ServerBuffChangeNotify_ServerBuffChangeType_ADD_SERVER_BUFF;
const ServerBuffChangeNotify_ServerBuffChangeType ServerBuffChangeNotify_ServerBuffChangeType_ServerBuffChangeType_MAX = ServerBuffChangeNotify_ServerBuffChangeType_DEL_SERVER_BUFF;
const int ServerBuffChangeNotify_ServerBuffChangeType_ServerBuffChangeType_ARRAYSIZE = ServerBuffChangeNotify_ServerBuffChangeType_ServerBuffChangeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerBuffChangeNotify_ServerBuffChangeType_descriptor();
inline const ::std::string& ServerBuffChangeNotify_ServerBuffChangeType_Name(ServerBuffChangeNotify_ServerBuffChangeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerBuffChangeNotify_ServerBuffChangeType_descriptor(), value);
}
inline bool ServerBuffChangeNotify_ServerBuffChangeType_Parse(
    const ::std::string& name, ServerBuffChangeNotify_ServerBuffChangeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerBuffChangeNotify_ServerBuffChangeType>(
    ServerBuffChangeNotify_ServerBuffChangeType_descriptor(), name, value);
}
enum EvtAiSyncCombatThreatInfoNotify_CmdId {
  EvtAiSyncCombatThreatInfoNotify_CmdId_NONE = 0,
  EvtAiSyncCombatThreatInfoNotify_CmdId_CMD_ID = 329,
  EvtAiSyncCombatThreatInfoNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtAiSyncCombatThreatInfoNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtAiSyncCombatThreatInfoNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtAiSyncCombatThreatInfoNotify_CmdId_EvtAiSyncCombatThreatInfoNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtAiSyncCombatThreatInfoNotify_CmdId_EvtAiSyncCombatThreatInfoNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtAiSyncCombatThreatInfoNotify_CmdId_IsValid(int value);
const EvtAiSyncCombatThreatInfoNotify_CmdId EvtAiSyncCombatThreatInfoNotify_CmdId_CmdId_MIN = EvtAiSyncCombatThreatInfoNotify_CmdId_NONE;
const EvtAiSyncCombatThreatInfoNotify_CmdId EvtAiSyncCombatThreatInfoNotify_CmdId_CmdId_MAX = EvtAiSyncCombatThreatInfoNotify_CmdId_CMD_ID;
const int EvtAiSyncCombatThreatInfoNotify_CmdId_CmdId_ARRAYSIZE = EvtAiSyncCombatThreatInfoNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtAiSyncCombatThreatInfoNotify_CmdId_descriptor();
inline const ::std::string& EvtAiSyncCombatThreatInfoNotify_CmdId_Name(EvtAiSyncCombatThreatInfoNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtAiSyncCombatThreatInfoNotify_CmdId_descriptor(), value);
}
inline bool EvtAiSyncCombatThreatInfoNotify_CmdId_Parse(
    const ::std::string& name, EvtAiSyncCombatThreatInfoNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtAiSyncCombatThreatInfoNotify_CmdId>(
    EvtAiSyncCombatThreatInfoNotify_CmdId_descriptor(), name, value);
}
enum MassiveEntityElementOpBatchNotify_CmdId {
  MassiveEntityElementOpBatchNotify_CmdId_NONE = 0,
  MassiveEntityElementOpBatchNotify_CmdId_CMD_ID = 357,
  MassiveEntityElementOpBatchNotify_CmdId_ENET_CHANNEL_ID = 0,
  MassiveEntityElementOpBatchNotify_CmdId_ENET_IS_RELIABLE = 1,
  MassiveEntityElementOpBatchNotify_CmdId_IS_ALLOW_CLIENT = 1,
  MassiveEntityElementOpBatchNotify_CmdId_MassiveEntityElementOpBatchNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MassiveEntityElementOpBatchNotify_CmdId_MassiveEntityElementOpBatchNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MassiveEntityElementOpBatchNotify_CmdId_IsValid(int value);
const MassiveEntityElementOpBatchNotify_CmdId MassiveEntityElementOpBatchNotify_CmdId_CmdId_MIN = MassiveEntityElementOpBatchNotify_CmdId_NONE;
const MassiveEntityElementOpBatchNotify_CmdId MassiveEntityElementOpBatchNotify_CmdId_CmdId_MAX = MassiveEntityElementOpBatchNotify_CmdId_CMD_ID;
const int MassiveEntityElementOpBatchNotify_CmdId_CmdId_ARRAYSIZE = MassiveEntityElementOpBatchNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MassiveEntityElementOpBatchNotify_CmdId_descriptor();
inline const ::std::string& MassiveEntityElementOpBatchNotify_CmdId_Name(MassiveEntityElementOpBatchNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MassiveEntityElementOpBatchNotify_CmdId_descriptor(), value);
}
inline bool MassiveEntityElementOpBatchNotify_CmdId_Parse(
    const ::std::string& name, MassiveEntityElementOpBatchNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MassiveEntityElementOpBatchNotify_CmdId>(
    MassiveEntityElementOpBatchNotify_CmdId_descriptor(), name, value);
}
enum EntityAiSyncNotify_CmdId {
  EntityAiSyncNotify_CmdId_NONE = 0,
  EntityAiSyncNotify_CmdId_CMD_ID = 400,
  EntityAiSyncNotify_CmdId_ENET_CHANNEL_ID = 0,
  EntityAiSyncNotify_CmdId_ENET_IS_RELIABLE = 1,
  EntityAiSyncNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EntityAiSyncNotify_CmdId_EntityAiSyncNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EntityAiSyncNotify_CmdId_EntityAiSyncNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EntityAiSyncNotify_CmdId_IsValid(int value);
const EntityAiSyncNotify_CmdId EntityAiSyncNotify_CmdId_CmdId_MIN = EntityAiSyncNotify_CmdId_NONE;
const EntityAiSyncNotify_CmdId EntityAiSyncNotify_CmdId_CmdId_MAX = EntityAiSyncNotify_CmdId_CMD_ID;
const int EntityAiSyncNotify_CmdId_CmdId_ARRAYSIZE = EntityAiSyncNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EntityAiSyncNotify_CmdId_descriptor();
inline const ::std::string& EntityAiSyncNotify_CmdId_Name(EntityAiSyncNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EntityAiSyncNotify_CmdId_descriptor(), value);
}
inline bool EntityAiSyncNotify_CmdId_Parse(
    const ::std::string& name, EntityAiSyncNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EntityAiSyncNotify_CmdId>(
    EntityAiSyncNotify_CmdId_descriptor(), name, value);
}
enum LuaSetOptionNotify_CmdId {
  LuaSetOptionNotify_CmdId_NONE = 0,
  LuaSetOptionNotify_CmdId_CMD_ID = 316,
  LuaSetOptionNotify_CmdId_ENET_CHANNEL_ID = 0,
  LuaSetOptionNotify_CmdId_ENET_IS_RELIABLE = 1,
  LuaSetOptionNotify_CmdId_LuaSetOptionNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LuaSetOptionNotify_CmdId_LuaSetOptionNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LuaSetOptionNotify_CmdId_IsValid(int value);
const LuaSetOptionNotify_CmdId LuaSetOptionNotify_CmdId_CmdId_MIN = LuaSetOptionNotify_CmdId_NONE;
const LuaSetOptionNotify_CmdId LuaSetOptionNotify_CmdId_CmdId_MAX = LuaSetOptionNotify_CmdId_CMD_ID;
const int LuaSetOptionNotify_CmdId_CmdId_ARRAYSIZE = LuaSetOptionNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* LuaSetOptionNotify_CmdId_descriptor();
inline const ::std::string& LuaSetOptionNotify_CmdId_Name(LuaSetOptionNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    LuaSetOptionNotify_CmdId_descriptor(), value);
}
inline bool LuaSetOptionNotify_CmdId_Parse(
    const ::std::string& name, LuaSetOptionNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LuaSetOptionNotify_CmdId>(
    LuaSetOptionNotify_CmdId_descriptor(), name, value);
}
enum LuaSetOptionNotify_LuaOptionType {
  LuaSetOptionNotify_LuaOptionType_LUA_OPTION_NONE = 0,
  LuaSetOptionNotify_LuaOptionType_LUA_OPTION_PLAYER_INPUT = 1,
  LuaSetOptionNotify_LuaOptionType_LuaSetOptionNotify_LuaOptionType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LuaSetOptionNotify_LuaOptionType_LuaSetOptionNotify_LuaOptionType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LuaSetOptionNotify_LuaOptionType_IsValid(int value);
const LuaSetOptionNotify_LuaOptionType LuaSetOptionNotify_LuaOptionType_LuaOptionType_MIN = LuaSetOptionNotify_LuaOptionType_LUA_OPTION_NONE;
const LuaSetOptionNotify_LuaOptionType LuaSetOptionNotify_LuaOptionType_LuaOptionType_MAX = LuaSetOptionNotify_LuaOptionType_LUA_OPTION_PLAYER_INPUT;
const int LuaSetOptionNotify_LuaOptionType_LuaOptionType_ARRAYSIZE = LuaSetOptionNotify_LuaOptionType_LuaOptionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* LuaSetOptionNotify_LuaOptionType_descriptor();
inline const ::std::string& LuaSetOptionNotify_LuaOptionType_Name(LuaSetOptionNotify_LuaOptionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    LuaSetOptionNotify_LuaOptionType_descriptor(), value);
}
inline bool LuaSetOptionNotify_LuaOptionType_Parse(
    const ::std::string& name, LuaSetOptionNotify_LuaOptionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LuaSetOptionNotify_LuaOptionType>(
    LuaSetOptionNotify_LuaOptionType_descriptor(), name, value);
}
enum EvtDestroyServerGadgetNotify_CmdId {
  EvtDestroyServerGadgetNotify_CmdId_NONE = 0,
  EvtDestroyServerGadgetNotify_CmdId_CMD_ID = 387,
  EvtDestroyServerGadgetNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtDestroyServerGadgetNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtDestroyServerGadgetNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtDestroyServerGadgetNotify_CmdId_EvtDestroyServerGadgetNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtDestroyServerGadgetNotify_CmdId_EvtDestroyServerGadgetNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtDestroyServerGadgetNotify_CmdId_IsValid(int value);
const EvtDestroyServerGadgetNotify_CmdId EvtDestroyServerGadgetNotify_CmdId_CmdId_MIN = EvtDestroyServerGadgetNotify_CmdId_NONE;
const EvtDestroyServerGadgetNotify_CmdId EvtDestroyServerGadgetNotify_CmdId_CmdId_MAX = EvtDestroyServerGadgetNotify_CmdId_CMD_ID;
const int EvtDestroyServerGadgetNotify_CmdId_CmdId_ARRAYSIZE = EvtDestroyServerGadgetNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtDestroyServerGadgetNotify_CmdId_descriptor();
inline const ::std::string& EvtDestroyServerGadgetNotify_CmdId_Name(EvtDestroyServerGadgetNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtDestroyServerGadgetNotify_CmdId_descriptor(), value);
}
inline bool EvtDestroyServerGadgetNotify_CmdId_Parse(
    const ::std::string& name, EvtDestroyServerGadgetNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtDestroyServerGadgetNotify_CmdId>(
    EvtDestroyServerGadgetNotify_CmdId_descriptor(), name, value);
}
enum EntityAiKillSelfNotify_CmdId {
  EntityAiKillSelfNotify_CmdId_NONE = 0,
  EntityAiKillSelfNotify_CmdId_CMD_ID = 340,
  EntityAiKillSelfNotify_CmdId_ENET_CHANNEL_ID = 0,
  EntityAiKillSelfNotify_CmdId_ENET_IS_RELIABLE = 1,
  EntityAiKillSelfNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EntityAiKillSelfNotify_CmdId_EntityAiKillSelfNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EntityAiKillSelfNotify_CmdId_EntityAiKillSelfNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EntityAiKillSelfNotify_CmdId_IsValid(int value);
const EntityAiKillSelfNotify_CmdId EntityAiKillSelfNotify_CmdId_CmdId_MIN = EntityAiKillSelfNotify_CmdId_NONE;
const EntityAiKillSelfNotify_CmdId EntityAiKillSelfNotify_CmdId_CmdId_MAX = EntityAiKillSelfNotify_CmdId_CMD_ID;
const int EntityAiKillSelfNotify_CmdId_CmdId_ARRAYSIZE = EntityAiKillSelfNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EntityAiKillSelfNotify_CmdId_descriptor();
inline const ::std::string& EntityAiKillSelfNotify_CmdId_Name(EntityAiKillSelfNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EntityAiKillSelfNotify_CmdId_descriptor(), value);
}
inline bool EntityAiKillSelfNotify_CmdId_Parse(
    const ::std::string& name, EntityAiKillSelfNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EntityAiKillSelfNotify_CmdId>(
    EntityAiKillSelfNotify_CmdId_descriptor(), name, value);
}
enum EvtAvatarLockChairReq_CmdId {
  EvtAvatarLockChairReq_CmdId_NONE = 0,
  EvtAvatarLockChairReq_CmdId_CMD_ID = 318,
  EvtAvatarLockChairReq_CmdId_ENET_CHANNEL_ID = 0,
  EvtAvatarLockChairReq_CmdId_ENET_IS_RELIABLE = 1,
  EvtAvatarLockChairReq_CmdId_IS_ALLOW_CLIENT = 1,
  EvtAvatarLockChairReq_CmdId_EvtAvatarLockChairReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtAvatarLockChairReq_CmdId_EvtAvatarLockChairReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtAvatarLockChairReq_CmdId_IsValid(int value);
const EvtAvatarLockChairReq_CmdId EvtAvatarLockChairReq_CmdId_CmdId_MIN = EvtAvatarLockChairReq_CmdId_NONE;
const EvtAvatarLockChairReq_CmdId EvtAvatarLockChairReq_CmdId_CmdId_MAX = EvtAvatarLockChairReq_CmdId_CMD_ID;
const int EvtAvatarLockChairReq_CmdId_CmdId_ARRAYSIZE = EvtAvatarLockChairReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtAvatarLockChairReq_CmdId_descriptor();
inline const ::std::string& EvtAvatarLockChairReq_CmdId_Name(EvtAvatarLockChairReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtAvatarLockChairReq_CmdId_descriptor(), value);
}
inline bool EvtAvatarLockChairReq_CmdId_Parse(
    const ::std::string& name, EvtAvatarLockChairReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtAvatarLockChairReq_CmdId>(
    EvtAvatarLockChairReq_CmdId_descriptor(), name, value);
}
enum EvtAvatarLockChairRsp_CmdId {
  EvtAvatarLockChairRsp_CmdId_NONE = 0,
  EvtAvatarLockChairRsp_CmdId_CMD_ID = 366,
  EvtAvatarLockChairRsp_CmdId_ENET_CHANNEL_ID = 0,
  EvtAvatarLockChairRsp_CmdId_ENET_IS_RELIABLE = 1,
  EvtAvatarLockChairRsp_CmdId_EvtAvatarLockChairRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtAvatarLockChairRsp_CmdId_EvtAvatarLockChairRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtAvatarLockChairRsp_CmdId_IsValid(int value);
const EvtAvatarLockChairRsp_CmdId EvtAvatarLockChairRsp_CmdId_CmdId_MIN = EvtAvatarLockChairRsp_CmdId_NONE;
const EvtAvatarLockChairRsp_CmdId EvtAvatarLockChairRsp_CmdId_CmdId_MAX = EvtAvatarLockChairRsp_CmdId_CMD_ID;
const int EvtAvatarLockChairRsp_CmdId_CmdId_ARRAYSIZE = EvtAvatarLockChairRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtAvatarLockChairRsp_CmdId_descriptor();
inline const ::std::string& EvtAvatarLockChairRsp_CmdId_Name(EvtAvatarLockChairRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtAvatarLockChairRsp_CmdId_descriptor(), value);
}
inline bool EvtAvatarLockChairRsp_CmdId_Parse(
    const ::std::string& name, EvtAvatarLockChairRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtAvatarLockChairRsp_CmdId>(
    EvtAvatarLockChairRsp_CmdId_descriptor(), name, value);
}
enum ReportFightAntiCheatNotify_CmdId {
  ReportFightAntiCheatNotify_CmdId_NONE = 0,
  ReportFightAntiCheatNotify_CmdId_CMD_ID = 368,
  ReportFightAntiCheatNotify_CmdId_ENET_CHANNEL_ID = 0,
  ReportFightAntiCheatNotify_CmdId_ENET_IS_RELIABLE = 1,
  ReportFightAntiCheatNotify_CmdId_IS_ALLOW_CLIENT = 1,
  ReportFightAntiCheatNotify_CmdId_ReportFightAntiCheatNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReportFightAntiCheatNotify_CmdId_ReportFightAntiCheatNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReportFightAntiCheatNotify_CmdId_IsValid(int value);
const ReportFightAntiCheatNotify_CmdId ReportFightAntiCheatNotify_CmdId_CmdId_MIN = ReportFightAntiCheatNotify_CmdId_NONE;
const ReportFightAntiCheatNotify_CmdId ReportFightAntiCheatNotify_CmdId_CmdId_MAX = ReportFightAntiCheatNotify_CmdId_CMD_ID;
const int ReportFightAntiCheatNotify_CmdId_CmdId_ARRAYSIZE = ReportFightAntiCheatNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReportFightAntiCheatNotify_CmdId_descriptor();
inline const ::std::string& ReportFightAntiCheatNotify_CmdId_Name(ReportFightAntiCheatNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReportFightAntiCheatNotify_CmdId_descriptor(), value);
}
inline bool ReportFightAntiCheatNotify_CmdId_Parse(
    const ::std::string& name, ReportFightAntiCheatNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReportFightAntiCheatNotify_CmdId>(
    ReportFightAntiCheatNotify_CmdId_descriptor(), name, value);
}
enum EvtBeingHealedNotify_CmdId {
  EvtBeingHealedNotify_CmdId_NONE = 0,
  EvtBeingHealedNotify_CmdId_CMD_ID = 333,
  EvtBeingHealedNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtBeingHealedNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtBeingHealedNotify_CmdId_EvtBeingHealedNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtBeingHealedNotify_CmdId_EvtBeingHealedNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtBeingHealedNotify_CmdId_IsValid(int value);
const EvtBeingHealedNotify_CmdId EvtBeingHealedNotify_CmdId_CmdId_MIN = EvtBeingHealedNotify_CmdId_NONE;
const EvtBeingHealedNotify_CmdId EvtBeingHealedNotify_CmdId_CmdId_MAX = EvtBeingHealedNotify_CmdId_CMD_ID;
const int EvtBeingHealedNotify_CmdId_CmdId_ARRAYSIZE = EvtBeingHealedNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtBeingHealedNotify_CmdId_descriptor();
inline const ::std::string& EvtBeingHealedNotify_CmdId_Name(EvtBeingHealedNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtBeingHealedNotify_CmdId_descriptor(), value);
}
inline bool EvtBeingHealedNotify_CmdId_Parse(
    const ::std::string& name, EvtBeingHealedNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtBeingHealedNotify_CmdId>(
    EvtBeingHealedNotify_CmdId_descriptor(), name, value);
}
enum EvtLocalGadgetOwnerLeaveSceneNotify_CmdId {
  EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_NONE = 0,
  EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_CMD_ID = 384,
  EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_IsValid(int value);
const EvtLocalGadgetOwnerLeaveSceneNotify_CmdId EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_CmdId_MIN = EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_NONE;
const EvtLocalGadgetOwnerLeaveSceneNotify_CmdId EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_CmdId_MAX = EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_CMD_ID;
const int EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_CmdId_ARRAYSIZE = EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_descriptor();
inline const ::std::string& EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_Name(EvtLocalGadgetOwnerLeaveSceneNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_descriptor(), value);
}
inline bool EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_Parse(
    const ::std::string& name, EvtLocalGadgetOwnerLeaveSceneNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtLocalGadgetOwnerLeaveSceneNotify_CmdId>(
    EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_descriptor(), name, value);
}
enum ForwardType {
  FORWARD_LOCAL = 0,
  FORWARD_TO_ALL = 1,
  FORWARD_TO_ALL_EXCEPT_CUR = 2,
  FORWARD_TO_HOST = 3,
  FORWARD_TO_ALL_GUEST = 4,
  FORWARD_TO_PEER = 5,
  FORWARD_TO_PEERS = 6,
  FORWARD_ONLY_SERVER = 7,
  FORWARD_TO_ALL_EXIST_EXCEPT_CUR = 8,
  ForwardType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ForwardType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ForwardType_IsValid(int value);
const ForwardType ForwardType_MIN = FORWARD_LOCAL;
const ForwardType ForwardType_MAX = FORWARD_TO_ALL_EXIST_EXCEPT_CUR;
const int ForwardType_ARRAYSIZE = ForwardType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ForwardType_descriptor();
inline const ::std::string& ForwardType_Name(ForwardType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ForwardType_descriptor(), value);
}
inline bool ForwardType_Parse(
    const ::std::string& name, ForwardType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ForwardType>(
    ForwardType_descriptor(), name, value);
}
enum HitColliderType {
  HIT_COLLIDER_INVALID = 0,
  HIT_COLLIDER_HIT_BOX = 1,
  HIT_COLLIDER_WET_HIT_BOX = 2,
  HIT_COLLIDER_HEAD_BOX = 3,
  HitColliderType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HitColliderType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HitColliderType_IsValid(int value);
const HitColliderType HitColliderType_MIN = HIT_COLLIDER_INVALID;
const HitColliderType HitColliderType_MAX = HIT_COLLIDER_HEAD_BOX;
const int HitColliderType_ARRAYSIZE = HitColliderType_MAX + 1;

const ::google::protobuf::EnumDescriptor* HitColliderType_descriptor();
inline const ::std::string& HitColliderType_Name(HitColliderType value) {
  return ::google::protobuf::internal::NameOfEnum(
    HitColliderType_descriptor(), value);
}
inline bool HitColliderType_Parse(
    const ::std::string& name, HitColliderType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HitColliderType>(
    HitColliderType_descriptor(), name, value);
}
enum CombatTypeArgument {
  COMBAT_NONE = 0,
  COMBAT_EVT_BEING_HIT = 1,
  COMBAT_ANIMATOR_STATE_CHANGED = 2,
  COMBAT_FACE_TO_DIR = 3,
  COMBAT_SET_ATTACK_TARGET = 4,
  COMBAT_RUSH_MOVE = 5,
  COMBAT_ANIMATOR_PARAMETER_CHANGED = 6,
  ENTITY_MOVE = 7,
  SYNC_ENTITY_POSITION = 8,
  COMBAT_STEER_MOTION_INFO = 9,
  COMBAT_FORCE_SET_POS_INFO = 10,
  COMBAT_COMPENSATE_POS_DIFF = 11,
  COMBAT_MONSTER_DO_BLINK = 12,
  COMBAT_FIXED_RUSH_MOVE = 13,
  COMBAT_SYNC_TRANSFORM = 14,
  COMBAT_LIGHT_CORE_MOVE = 15,
  COMBAT_BEING_HEALED_NTF = 16,
  COMBAT_SKILL_ANCHOR_POSITION_NTF = 17,
  COMBAT_GRAPPLING_HOOK_MOVE = 18,
  CombatTypeArgument_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CombatTypeArgument_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CombatTypeArgument_IsValid(int value);
const CombatTypeArgument CombatTypeArgument_MIN = COMBAT_NONE;
const CombatTypeArgument CombatTypeArgument_MAX = COMBAT_GRAPPLING_HOOK_MOVE;
const int CombatTypeArgument_ARRAYSIZE = CombatTypeArgument_MAX + 1;

const ::google::protobuf::EnumDescriptor* CombatTypeArgument_descriptor();
inline const ::std::string& CombatTypeArgument_Name(CombatTypeArgument value) {
  return ::google::protobuf::internal::NameOfEnum(
    CombatTypeArgument_descriptor(), value);
}
inline bool CombatTypeArgument_Parse(
    const ::std::string& name, CombatTypeArgument* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CombatTypeArgument>(
    CombatTypeArgument_descriptor(), name, value);
}
// ===================================================================

class HitCollision : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HitCollision) */ {
 public:
  HitCollision();
  virtual ~HitCollision();

  HitCollision(const HitCollision& from);

  inline HitCollision& operator=(const HitCollision& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HitCollision(HitCollision&& from) noexcept
    : HitCollision() {
    *this = ::std::move(from);
  }

  inline HitCollision& operator=(HitCollision&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HitCollision& default_instance();

  static inline const HitCollision* internal_default_instance() {
    return reinterpret_cast<const HitCollision*>(
               &_HitCollision_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(HitCollision* other);
  friend void swap(HitCollision& a, HitCollision& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HitCollision* New() const PROTOBUF_FINAL { return New(NULL); }

  HitCollision* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HitCollision& from);
  void MergeFrom(const HitCollision& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HitCollision* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector hit_point = 7;
  bool has_hit_point() const;
  void clear_hit_point();
  static const int kHitPointFieldNumber = 7;
  const ::proto::Vector& hit_point() const;
  ::proto::Vector* mutable_hit_point();
  ::proto::Vector* release_hit_point();
  void set_allocated_hit_point(::proto::Vector* hit_point);

  // .proto.Vector hit_dir = 13;
  bool has_hit_dir() const;
  void clear_hit_dir();
  static const int kHitDirFieldNumber = 13;
  const ::proto::Vector& hit_dir() const;
  ::proto::Vector* mutable_hit_dir();
  ::proto::Vector* release_hit_dir();
  void set_allocated_hit_dir(::proto::Vector* hit_dir);

  // float attackee_hit_force_angle = 2;
  void clear_attackee_hit_force_angle();
  static const int kAttackeeHitForceAngleFieldNumber = 2;
  float attackee_hit_force_angle() const;
  void set_attackee_hit_force_angle(float value);

  // int32 hit_box_index = 4;
  void clear_hit_box_index();
  static const int kHitBoxIndexFieldNumber = 4;
  ::google::protobuf::int32 hit_box_index() const;
  void set_hit_box_index(::google::protobuf::int32 value);

  // .proto.HitColliderType hit_collider_type = 8;
  void clear_hit_collider_type();
  static const int kHitColliderTypeFieldNumber = 8;
  ::proto::HitColliderType hit_collider_type() const;
  void set_hit_collider_type(::proto::HitColliderType value);

  // float attackee_hit_entity_angle = 15;
  void clear_attackee_hit_entity_angle();
  static const int kAttackeeHitEntityAngleFieldNumber = 15;
  float attackee_hit_entity_angle() const;
  void set_attackee_hit_entity_angle(float value);

  // @@protoc_insertion_point(class_scope:proto.HitCollision)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* hit_point_;
  ::proto::Vector* hit_dir_;
  float attackee_hit_force_angle_;
  ::google::protobuf::int32 hit_box_index_;
  int hit_collider_type_;
  float attackee_hit_entity_angle_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AttackHitEffectResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AttackHitEffectResult) */ {
 public:
  AttackHitEffectResult();
  virtual ~AttackHitEffectResult();

  AttackHitEffectResult(const AttackHitEffectResult& from);

  inline AttackHitEffectResult& operator=(const AttackHitEffectResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AttackHitEffectResult(AttackHitEffectResult&& from) noexcept
    : AttackHitEffectResult() {
    *this = ::std::move(from);
  }

  inline AttackHitEffectResult& operator=(AttackHitEffectResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AttackHitEffectResult& default_instance();

  static inline const AttackHitEffectResult* internal_default_instance() {
    return reinterpret_cast<const AttackHitEffectResult*>(
               &_AttackHitEffectResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AttackHitEffectResult* other);
  friend void swap(AttackHitEffectResult& a, AttackHitEffectResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AttackHitEffectResult* New() const PROTOBUF_FINAL { return New(NULL); }

  AttackHitEffectResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AttackHitEffectResult& from);
  void MergeFrom(const AttackHitEffectResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AttackHitEffectResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 hit_eff_level = 2;
  void clear_hit_eff_level();
  static const int kHitEffLevelFieldNumber = 2;
  ::google::protobuf::uint32 hit_eff_level() const;
  void set_hit_eff_level(::google::protobuf::uint32 value);

  // float retreat_strength = 7;
  void clear_retreat_strength();
  static const int kRetreatStrengthFieldNumber = 7;
  float retreat_strength() const;
  void set_retreat_strength(float value);

  // float hit_halt_time_scale = 8;
  void clear_hit_halt_time_scale();
  static const int kHitHaltTimeScaleFieldNumber = 8;
  float hit_halt_time_scale() const;
  void set_hit_halt_time_scale(float value);

  // uint32 original_hit_eff_level = 12;
  void clear_original_hit_eff_level();
  static const int kOriginalHitEffLevelFieldNumber = 12;
  ::google::protobuf::uint32 original_hit_eff_level() const;
  void set_original_hit_eff_level(::google::protobuf::uint32 value);

  // float hit_halt_time = 13;
  void clear_hit_halt_time();
  static const int kHitHaltTimeFieldNumber = 13;
  float hit_halt_time() const;
  void set_hit_halt_time(float value);

  // float air_strength = 15;
  void clear_air_strength();
  static const int kAirStrengthFieldNumber = 15;
  float air_strength() const;
  void set_air_strength(float value);

  // @@protoc_insertion_point(class_scope:proto.AttackHitEffectResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 hit_eff_level_;
  float retreat_strength_;
  float hit_halt_time_scale_;
  ::google::protobuf::uint32 original_hit_eff_level_;
  float hit_halt_time_;
  float air_strength_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityIdentifier : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityIdentifier) */ {
 public:
  AbilityIdentifier();
  virtual ~AbilityIdentifier();

  AbilityIdentifier(const AbilityIdentifier& from);

  inline AbilityIdentifier& operator=(const AbilityIdentifier& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityIdentifier(AbilityIdentifier&& from) noexcept
    : AbilityIdentifier() {
    *this = ::std::move(from);
  }

  inline AbilityIdentifier& operator=(AbilityIdentifier&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityIdentifier& default_instance();

  static inline const AbilityIdentifier* internal_default_instance() {
    return reinterpret_cast<const AbilityIdentifier*>(
               &_AbilityIdentifier_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(AbilityIdentifier* other);
  friend void swap(AbilityIdentifier& a, AbilityIdentifier& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityIdentifier* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityIdentifier* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityIdentifier& from);
  void MergeFrom(const AbilityIdentifier& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityIdentifier* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 modifier_owner_id = 2;
  void clear_modifier_owner_id();
  static const int kModifierOwnerIdFieldNumber = 2;
  ::google::protobuf::uint32 modifier_owner_id() const;
  void set_modifier_owner_id(::google::protobuf::uint32 value);

  // int32 local_id = 3;
  void clear_local_id();
  static const int kLocalIdFieldNumber = 3;
  ::google::protobuf::int32 local_id() const;
  void set_local_id(::google::protobuf::int32 value);

  // bool is_serverbuff_modifier = 6;
  void clear_is_serverbuff_modifier();
  static const int kIsServerbuffModifierFieldNumber = 6;
  bool is_serverbuff_modifier() const;
  void set_is_serverbuff_modifier(bool value);

  // uint32 instanced_modifier_id = 9;
  void clear_instanced_modifier_id();
  static const int kInstancedModifierIdFieldNumber = 9;
  ::google::protobuf::uint32 instanced_modifier_id() const;
  void set_instanced_modifier_id(::google::protobuf::uint32 value);

  // uint32 instanced_ability_id = 10;
  void clear_instanced_ability_id();
  static const int kInstancedAbilityIdFieldNumber = 10;
  ::google::protobuf::uint32 instanced_ability_id() const;
  void set_instanced_ability_id(::google::protobuf::uint32 value);

  // uint32 ability_caster_id = 15;
  void clear_ability_caster_id();
  static const int kAbilityCasterIdFieldNumber = 15;
  ::google::protobuf::uint32 ability_caster_id() const;
  void set_ability_caster_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityIdentifier)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 modifier_owner_id_;
  ::google::protobuf::int32 local_id_;
  bool is_serverbuff_modifier_;
  ::google::protobuf::uint32 instanced_modifier_id_;
  ::google::protobuf::uint32 instanced_ability_id_;
  ::google::protobuf::uint32 ability_caster_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AttackResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AttackResult) */ {
 public:
  AttackResult();
  virtual ~AttackResult();

  AttackResult(const AttackResult& from);

  inline AttackResult& operator=(const AttackResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AttackResult(AttackResult&& from) noexcept
    : AttackResult() {
    *this = ::std::move(from);
  }

  inline AttackResult& operator=(AttackResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AttackResult& default_instance();

  static inline const AttackResult* internal_default_instance() {
    return reinterpret_cast<const AttackResult*>(
               &_AttackResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AttackResult* other);
  friend void swap(AttackResult& a, AttackResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AttackResult* New() const PROTOBUF_FINAL { return New(NULL); }

  AttackResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AttackResult& from);
  void MergeFrom(const AttackResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AttackResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string anim_event_id = 4;
  void clear_anim_event_id();
  static const int kAnimEventIdFieldNumber = 4;
  const ::std::string& anim_event_id() const;
  void set_anim_event_id(const ::std::string& value);
  #if LANG_CXX11
  void set_anim_event_id(::std::string&& value);
  #endif
  void set_anim_event_id(const char* value);
  void set_anim_event_id(const char* value, size_t size);
  ::std::string* mutable_anim_event_id();
  ::std::string* release_anim_event_id();
  void set_allocated_anim_event_id(::std::string* anim_event_id);

  // .proto.Vector resolved_dir = 1;
  bool has_resolved_dir() const;
  void clear_resolved_dir();
  static const int kResolvedDirFieldNumber = 1;
  const ::proto::Vector& resolved_dir() const;
  ::proto::Vector* mutable_resolved_dir();
  ::proto::Vector* release_resolved_dir();
  void set_allocated_resolved_dir(::proto::Vector* resolved_dir);

  // .proto.AttackHitEffectResult hit_eff_result = 8;
  bool has_hit_eff_result() const;
  void clear_hit_eff_result();
  static const int kHitEffResultFieldNumber = 8;
  const ::proto::AttackHitEffectResult& hit_eff_result() const;
  ::proto::AttackHitEffectResult* mutable_hit_eff_result();
  ::proto::AttackHitEffectResult* release_hit_eff_result();
  void set_allocated_hit_eff_result(::proto::AttackHitEffectResult* hit_eff_result);

  // .proto.HitCollision hit_collision = 10;
  bool has_hit_collision() const;
  void clear_hit_collision();
  static const int kHitCollisionFieldNumber = 10;
  const ::proto::HitCollision& hit_collision() const;
  ::proto::HitCollision* mutable_hit_collision();
  ::proto::HitCollision* release_hit_collision();
  void set_allocated_hit_collision(::proto::HitCollision* hit_collision);

  // .proto.AbilityIdentifier ability_identifier = 14;
  bool has_ability_identifier() const;
  void clear_ability_identifier();
  static const int kAbilityIdentifierFieldNumber = 14;
  const ::proto::AbilityIdentifier& ability_identifier() const;
  ::proto::AbilityIdentifier* mutable_ability_identifier();
  ::proto::AbilityIdentifier* release_ability_identifier();
  void set_allocated_ability_identifier(::proto::AbilityIdentifier* ability_identifier);

  // uint32 hit_pos_type = 2;
  void clear_hit_pos_type();
  static const int kHitPosTypeFieldNumber = 2;
  ::google::protobuf::uint32 hit_pos_type() const;
  void set_hit_pos_type(::google::protobuf::uint32 value);

  // uint32 element_type = 5;
  void clear_element_type();
  static const int kElementTypeFieldNumber = 5;
  ::google::protobuf::uint32 element_type() const;
  void set_element_type(::google::protobuf::uint32 value);

  // float damage = 6;
  void clear_damage();
  static const int kDamageFieldNumber = 6;
  float damage() const;
  void set_damage(float value);

  // uint32 endure_break = 7;
  void clear_endure_break();
  static const int kEndureBreakFieldNumber = 7;
  ::google::protobuf::uint32 endure_break() const;
  void set_endure_break(::google::protobuf::uint32 value);

  // int32 hit_retreat_angle_compat = 9;
  void clear_hit_retreat_angle_compat();
  static const int kHitRetreatAngleCompatFieldNumber = 9;
  ::google::protobuf::int32 hit_retreat_angle_compat() const;
  void set_hit_retreat_angle_compat(::google::protobuf::int32 value);

  // uint32 attacker_id = 11;
  void clear_attacker_id();
  static const int kAttackerIdFieldNumber = 11;
  ::google::protobuf::uint32 attacker_id() const;
  void set_attacker_id(::google::protobuf::uint32 value);

  // uint32 defense_id = 15;
  void clear_defense_id();
  static const int kDefenseIdFieldNumber = 15;
  ::google::protobuf::uint32 defense_id() const;
  void set_defense_id(::google::protobuf::uint32 value);

  // uint32 bullet_fly_time_ms = 91;
  void clear_bullet_fly_time_ms();
  static const int kBulletFlyTimeMsFieldNumber = 91;
  ::google::protobuf::uint32 bullet_fly_time_ms() const;
  void set_bullet_fly_time_ms(::google::protobuf::uint32 value);

  // uint32 hashed_anim_event_id = 278;
  void clear_hashed_anim_event_id();
  static const int kHashedAnimEventIdFieldNumber = 278;
  ::google::protobuf::uint32 hashed_anim_event_id() const;
  void set_hashed_anim_event_id(::google::protobuf::uint32 value);

  // float element_durability_attenuation = 425;
  void clear_element_durability_attenuation();
  static const int kElementDurabilityAttenuationFieldNumber = 425;
  float element_durability_attenuation() const;
  void set_element_durability_attenuation(float value);

  // float endure_delta = 430;
  void clear_endure_delta();
  static const int kEndureDeltaFieldNumber = 430;
  float endure_delta() const;
  void set_endure_delta(float value);

  // float element_amplify_rate = 900;
  void clear_element_amplify_rate();
  static const int kElementAmplifyRateFieldNumber = 900;
  float element_amplify_rate() const;
  void set_element_amplify_rate(float value);

  // uint32 create_count_sync_to_server = 1011;
  void clear_create_count_sync_to_server();
  static const int kCreateCountSyncToServerFieldNumber = 1011;
  ::google::protobuf::uint32 create_count_sync_to_server() const;
  void set_create_count_sync_to_server(::google::protobuf::uint32 value);

  // uint32 gadget_damage_action_idx = 1110;
  void clear_gadget_damage_action_idx();
  static const int kGadgetDamageActionIdxFieldNumber = 1110;
  ::google::protobuf::uint32 gadget_damage_action_idx() const;
  void set_gadget_damage_action_idx(::google::protobuf::uint32 value);

  // uint32 attack_timestamp_ms = 1188;
  void clear_attack_timestamp_ms();
  static const int kAttackTimestampMsFieldNumber = 1188;
  ::google::protobuf::uint32 attack_timestamp_ms() const;
  void set_attack_timestamp_ms(::google::protobuf::uint32 value);

  // float damage_shield = 1202;
  void clear_damage_shield();
  static const int kDamageShieldFieldNumber = 1202;
  float damage_shield() const;
  void set_damage_shield(float value);

  // bool is_resist_text = 1858;
  void clear_is_resist_text();
  static const int kIsResistTextFieldNumber = 1858;
  bool is_resist_text() const;
  void set_is_resist_text(bool value);

  // bool is_crit = 13;
  void clear_is_crit();
  static const int kIsCritFieldNumber = 13;
  bool is_crit() const;
  void set_is_crit(bool value);

  // bool use_gadget_damage_action = 1418;
  void clear_use_gadget_damage_action();
  static const int kUseGadgetDamageActionFieldNumber = 1418;
  bool use_gadget_damage_action() const;
  void set_use_gadget_damage_action(bool value);

  // bool mute_element_hurt = 1530;
  void clear_mute_element_hurt();
  static const int kMuteElementHurtFieldNumber = 1530;
  bool mute_element_hurt() const;
  void set_mute_element_hurt(bool value);

  // uint32 target_type = 1366;
  void clear_target_type();
  static const int kTargetTypeFieldNumber = 1366;
  ::google::protobuf::uint32 target_type() const;
  void set_target_type(::google::protobuf::uint32 value);

  // uint32 attack_count = 1564;
  void clear_attack_count();
  static const int kAttackCountFieldNumber = 1564;
  ::google::protobuf::uint32 attack_count() const;
  void set_attack_count(::google::protobuf::uint32 value);

  // uint32 critical_rand = 1664;
  void clear_critical_rand();
  static const int kCriticalRandFieldNumber = 1664;
  ::google::protobuf::uint32 critical_rand() const;
  void set_critical_rand(::google::protobuf::uint32 value);

  // uint32 addhurt_reaction_type = 1887;
  void clear_addhurt_reaction_type();
  static const int kAddhurtReactionTypeFieldNumber = 1887;
  ::google::protobuf::uint32 addhurt_reaction_type() const;
  void set_addhurt_reaction_type(::google::protobuf::uint32 value);

  // uint32 amplify_reaction_type = 2005;
  void clear_amplify_reaction_type();
  static const int kAmplifyReactionTypeFieldNumber = 2005;
  ::google::protobuf::uint32 amplify_reaction_type() const;
  void set_amplify_reaction_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AttackResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr anim_event_id_;
  ::proto::Vector* resolved_dir_;
  ::proto::AttackHitEffectResult* hit_eff_result_;
  ::proto::HitCollision* hit_collision_;
  ::proto::AbilityIdentifier* ability_identifier_;
  ::google::protobuf::uint32 hit_pos_type_;
  ::google::protobuf::uint32 element_type_;
  float damage_;
  ::google::protobuf::uint32 endure_break_;
  ::google::protobuf::int32 hit_retreat_angle_compat_;
  ::google::protobuf::uint32 attacker_id_;
  ::google::protobuf::uint32 defense_id_;
  ::google::protobuf::uint32 bullet_fly_time_ms_;
  ::google::protobuf::uint32 hashed_anim_event_id_;
  float element_durability_attenuation_;
  float endure_delta_;
  float element_amplify_rate_;
  ::google::protobuf::uint32 create_count_sync_to_server_;
  ::google::protobuf::uint32 gadget_damage_action_idx_;
  ::google::protobuf::uint32 attack_timestamp_ms_;
  float damage_shield_;
  bool is_resist_text_;
  bool is_crit_;
  bool use_gadget_damage_action_;
  bool mute_element_hurt_;
  ::google::protobuf::uint32 target_type_;
  ::google::protobuf::uint32 attack_count_;
  ::google::protobuf::uint32 critical_rand_;
  ::google::protobuf::uint32 addhurt_reaction_type_;
  ::google::protobuf::uint32 amplify_reaction_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtBeingHitInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtBeingHitInfo) */ {
 public:
  EvtBeingHitInfo();
  virtual ~EvtBeingHitInfo();

  EvtBeingHitInfo(const EvtBeingHitInfo& from);

  inline EvtBeingHitInfo& operator=(const EvtBeingHitInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtBeingHitInfo(EvtBeingHitInfo&& from) noexcept
    : EvtBeingHitInfo() {
    *this = ::std::move(from);
  }

  inline EvtBeingHitInfo& operator=(EvtBeingHitInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtBeingHitInfo& default_instance();

  static inline const EvtBeingHitInfo* internal_default_instance() {
    return reinterpret_cast<const EvtBeingHitInfo*>(
               &_EvtBeingHitInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(EvtBeingHitInfo* other);
  friend void swap(EvtBeingHitInfo& a, EvtBeingHitInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtBeingHitInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtBeingHitInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtBeingHitInfo& from);
  void MergeFrom(const EvtBeingHitInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtBeingHitInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AttackResult attack_result = 7;
  bool has_attack_result() const;
  void clear_attack_result();
  static const int kAttackResultFieldNumber = 7;
  const ::proto::AttackResult& attack_result() const;
  ::proto::AttackResult* mutable_attack_result();
  ::proto::AttackResult* release_attack_result();
  void set_allocated_attack_result(::proto::AttackResult* attack_result);

  // uint32 frame_num = 4;
  void clear_frame_num();
  static const int kFrameNumFieldNumber = 4;
  ::google::protobuf::uint32 frame_num() const;
  void set_frame_num(::google::protobuf::uint32 value);

  // uint32 peer_id = 6;
  void clear_peer_id();
  static const int kPeerIdFieldNumber = 6;
  ::google::protobuf::uint32 peer_id() const;
  void set_peer_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtBeingHitInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AttackResult* attack_result_;
  ::google::protobuf::uint32 frame_num_;
  ::google::protobuf::uint32 peer_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtHittingOtherInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtHittingOtherInfo) */ {
 public:
  EvtHittingOtherInfo();
  virtual ~EvtHittingOtherInfo();

  EvtHittingOtherInfo(const EvtHittingOtherInfo& from);

  inline EvtHittingOtherInfo& operator=(const EvtHittingOtherInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtHittingOtherInfo(EvtHittingOtherInfo&& from) noexcept
    : EvtHittingOtherInfo() {
    *this = ::std::move(from);
  }

  inline EvtHittingOtherInfo& operator=(EvtHittingOtherInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtHittingOtherInfo& default_instance();

  static inline const EvtHittingOtherInfo* internal_default_instance() {
    return reinterpret_cast<const EvtHittingOtherInfo*>(
               &_EvtHittingOtherInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(EvtHittingOtherInfo* other);
  friend void swap(EvtHittingOtherInfo& a, EvtHittingOtherInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtHittingOtherInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtHittingOtherInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtHittingOtherInfo& from);
  void MergeFrom(const EvtHittingOtherInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtHittingOtherInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AttackResult attack_result = 2;
  bool has_attack_result() const;
  void clear_attack_result();
  static const int kAttackResultFieldNumber = 2;
  const ::proto::AttackResult& attack_result() const;
  ::proto::AttackResult* mutable_attack_result();
  ::proto::AttackResult* release_attack_result();
  void set_allocated_attack_result(::proto::AttackResult* attack_result);

  // uint32 peer_id = 8;
  void clear_peer_id();
  static const int kPeerIdFieldNumber = 8;
  ::google::protobuf::uint32 peer_id() const;
  void set_peer_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtHittingOtherInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AttackResult* attack_result_;
  ::google::protobuf::uint32 peer_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtBeingHitNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtBeingHitNotify) */ {
 public:
  EvtBeingHitNotify();
  virtual ~EvtBeingHitNotify();

  EvtBeingHitNotify(const EvtBeingHitNotify& from);

  inline EvtBeingHitNotify& operator=(const EvtBeingHitNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtBeingHitNotify(EvtBeingHitNotify&& from) noexcept
    : EvtBeingHitNotify() {
    *this = ::std::move(from);
  }

  inline EvtBeingHitNotify& operator=(EvtBeingHitNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtBeingHitNotify& default_instance();

  static inline const EvtBeingHitNotify* internal_default_instance() {
    return reinterpret_cast<const EvtBeingHitNotify*>(
               &_EvtBeingHitNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(EvtBeingHitNotify* other);
  friend void swap(EvtBeingHitNotify& a, EvtBeingHitNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtBeingHitNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtBeingHitNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtBeingHitNotify& from);
  void MergeFrom(const EvtBeingHitNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtBeingHitNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtBeingHitNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtBeingHitNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtBeingHitNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtBeingHitNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtBeingHitNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtBeingHitNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtBeingHitNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtBeingHitNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtBeingHitNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtBeingHitNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtBeingHitNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtBeingHitNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtBeingHitNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.EvtBeingHitInfo being_hit_info = 3;
  bool has_being_hit_info() const;
  void clear_being_hit_info();
  static const int kBeingHitInfoFieldNumber = 3;
  const ::proto::EvtBeingHitInfo& being_hit_info() const;
  ::proto::EvtBeingHitInfo* mutable_being_hit_info();
  ::proto::EvtBeingHitInfo* release_being_hit_info();
  void set_allocated_being_hit_info(::proto::EvtBeingHitInfo* being_hit_info);

  // .proto.ForwardType forward_type = 6;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 6;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // @@protoc_insertion_point(class_scope:proto.EvtBeingHitNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::EvtBeingHitInfo* being_hit_info_;
  int forward_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtAnimatorParameterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAnimatorParameterInfo) */ {
 public:
  EvtAnimatorParameterInfo();
  virtual ~EvtAnimatorParameterInfo();

  EvtAnimatorParameterInfo(const EvtAnimatorParameterInfo& from);

  inline EvtAnimatorParameterInfo& operator=(const EvtAnimatorParameterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAnimatorParameterInfo(EvtAnimatorParameterInfo&& from) noexcept
    : EvtAnimatorParameterInfo() {
    *this = ::std::move(from);
  }

  inline EvtAnimatorParameterInfo& operator=(EvtAnimatorParameterInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAnimatorParameterInfo& default_instance();

  static inline const EvtAnimatorParameterInfo* internal_default_instance() {
    return reinterpret_cast<const EvtAnimatorParameterInfo*>(
               &_EvtAnimatorParameterInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(EvtAnimatorParameterInfo* other);
  friend void swap(EvtAnimatorParameterInfo& a, EvtAnimatorParameterInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAnimatorParameterInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAnimatorParameterInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAnimatorParameterInfo& from);
  void MergeFrom(const EvtAnimatorParameterInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAnimatorParameterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AnimatorParameterValueInfo value = 7;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 7;
  const ::proto::AnimatorParameterValueInfo& value() const;
  ::proto::AnimatorParameterValueInfo* mutable_value();
  ::proto::AnimatorParameterValueInfo* release_value();
  void set_allocated_value(::proto::AnimatorParameterValueInfo* value);

  // uint32 entity_id = 4;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 4;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // bool is_server_cache = 5;
  void clear_is_server_cache();
  static const int kIsServerCacheFieldNumber = 5;
  bool is_server_cache() const;
  void set_is_server_cache(bool value);

  // int32 name_id = 15;
  void clear_name_id();
  static const int kNameIdFieldNumber = 15;
  ::google::protobuf::int32 name_id() const;
  void set_name_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtAnimatorParameterInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AnimatorParameterValueInfo* value_;
  ::google::protobuf::uint32 entity_id_;
  bool is_server_cache_;
  ::google::protobuf::int32 name_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtAnimatorParameterNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAnimatorParameterNotify) */ {
 public:
  EvtAnimatorParameterNotify();
  virtual ~EvtAnimatorParameterNotify();

  EvtAnimatorParameterNotify(const EvtAnimatorParameterNotify& from);

  inline EvtAnimatorParameterNotify& operator=(const EvtAnimatorParameterNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAnimatorParameterNotify(EvtAnimatorParameterNotify&& from) noexcept
    : EvtAnimatorParameterNotify() {
    *this = ::std::move(from);
  }

  inline EvtAnimatorParameterNotify& operator=(EvtAnimatorParameterNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAnimatorParameterNotify& default_instance();

  static inline const EvtAnimatorParameterNotify* internal_default_instance() {
    return reinterpret_cast<const EvtAnimatorParameterNotify*>(
               &_EvtAnimatorParameterNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(EvtAnimatorParameterNotify* other);
  friend void swap(EvtAnimatorParameterNotify& a, EvtAnimatorParameterNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAnimatorParameterNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAnimatorParameterNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAnimatorParameterNotify& from);
  void MergeFrom(const EvtAnimatorParameterNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAnimatorParameterNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtAnimatorParameterNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtAnimatorParameterNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtAnimatorParameterNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtAnimatorParameterNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtAnimatorParameterNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtAnimatorParameterNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtAnimatorParameterNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtAnimatorParameterNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtAnimatorParameterNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtAnimatorParameterNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtAnimatorParameterNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtAnimatorParameterNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtAnimatorParameterNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.EvtAnimatorParameterInfo animator_param_info = 12;
  bool has_animator_param_info() const;
  void clear_animator_param_info();
  static const int kAnimatorParamInfoFieldNumber = 12;
  const ::proto::EvtAnimatorParameterInfo& animator_param_info() const;
  ::proto::EvtAnimatorParameterInfo* mutable_animator_param_info();
  ::proto::EvtAnimatorParameterInfo* release_animator_param_info();
  void set_allocated_animator_param_info(::proto::EvtAnimatorParameterInfo* animator_param_info);

  // .proto.ForwardType forward_type = 14;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 14;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // @@protoc_insertion_point(class_scope:proto.EvtAnimatorParameterNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::EvtAnimatorParameterInfo* animator_param_info_;
  int forward_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityArgument : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityArgument) */ {
 public:
  AbilityArgument();
  virtual ~AbilityArgument();

  AbilityArgument(const AbilityArgument& from);

  inline AbilityArgument& operator=(const AbilityArgument& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityArgument(AbilityArgument&& from) noexcept
    : AbilityArgument() {
    *this = ::std::move(from);
  }

  inline AbilityArgument& operator=(AbilityArgument&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityArgument& default_instance();

  enum ArgCase {
    kIntArg = 5,
    kFloatArg = 15,
    kStrArg = 11,
    ARG_NOT_SET = 0,
  };

  static inline const AbilityArgument* internal_default_instance() {
    return reinterpret_cast<const AbilityArgument*>(
               &_AbilityArgument_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(AbilityArgument* other);
  friend void swap(AbilityArgument& a, AbilityArgument& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityArgument* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityArgument* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityArgument& from);
  void MergeFrom(const AbilityArgument& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityArgument* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 int_arg = 5;
  private:
  bool has_int_arg() const;
  public:
  void clear_int_arg();
  static const int kIntArgFieldNumber = 5;
  ::google::protobuf::uint32 int_arg() const;
  void set_int_arg(::google::protobuf::uint32 value);

  // float float_arg = 15;
  private:
  bool has_float_arg() const;
  public:
  void clear_float_arg();
  static const int kFloatArgFieldNumber = 15;
  float float_arg() const;
  void set_float_arg(float value);

  // string str_arg = 11;
  private:
  bool has_str_arg() const;
  public:
  void clear_str_arg();
  static const int kStrArgFieldNumber = 11;
  const ::std::string& str_arg() const;
  void set_str_arg(const ::std::string& value);
  #if LANG_CXX11
  void set_str_arg(::std::string&& value);
  #endif
  void set_str_arg(const char* value);
  void set_str_arg(const char* value, size_t size);
  ::std::string* mutable_str_arg();
  ::std::string* release_str_arg();
  void set_allocated_str_arg(::std::string* str_arg);

  ArgCase arg_case() const;
  // @@protoc_insertion_point(class_scope:proto.AbilityArgument)
 private:
  void set_has_int_arg();
  void set_has_float_arg();
  void set_has_str_arg();

  inline bool has_arg() const;
  void clear_arg();
  inline void clear_has_arg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ArgUnion {
    ArgUnion() {}
    ::google::protobuf::uint32 int_arg_;
    float float_arg_;
    ::google::protobuf::internal::ArenaStringPtr str_arg_;
  } arg_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HostPlayerNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HostPlayerNotify) */ {
 public:
  HostPlayerNotify();
  virtual ~HostPlayerNotify();

  HostPlayerNotify(const HostPlayerNotify& from);

  inline HostPlayerNotify& operator=(const HostPlayerNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HostPlayerNotify(HostPlayerNotify&& from) noexcept
    : HostPlayerNotify() {
    *this = ::std::move(from);
  }

  inline HostPlayerNotify& operator=(HostPlayerNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HostPlayerNotify& default_instance();

  static inline const HostPlayerNotify* internal_default_instance() {
    return reinterpret_cast<const HostPlayerNotify*>(
               &_HostPlayerNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(HostPlayerNotify* other);
  friend void swap(HostPlayerNotify& a, HostPlayerNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HostPlayerNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  HostPlayerNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HostPlayerNotify& from);
  void MergeFrom(const HostPlayerNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HostPlayerNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef HostPlayerNotify_CmdId CmdId;
  static const CmdId NONE =
    HostPlayerNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    HostPlayerNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    HostPlayerNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    HostPlayerNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return HostPlayerNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    HostPlayerNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    HostPlayerNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    HostPlayerNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return HostPlayerNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return HostPlayerNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return HostPlayerNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 host_uid = 10;
  void clear_host_uid();
  static const int kHostUidFieldNumber = 10;
  ::google::protobuf::uint32 host_uid() const;
  void set_host_uid(::google::protobuf::uint32 value);

  // uint32 host_peer_id = 13;
  void clear_host_peer_id();
  static const int kHostPeerIdFieldNumber = 13;
  ::google::protobuf::uint32 host_peer_id() const;
  void set_host_peer_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HostPlayerNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 host_uid_;
  ::google::protobuf::uint32 host_peer_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtDoSkillSuccNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtDoSkillSuccNotify) */ {
 public:
  EvtDoSkillSuccNotify();
  virtual ~EvtDoSkillSuccNotify();

  EvtDoSkillSuccNotify(const EvtDoSkillSuccNotify& from);

  inline EvtDoSkillSuccNotify& operator=(const EvtDoSkillSuccNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtDoSkillSuccNotify(EvtDoSkillSuccNotify&& from) noexcept
    : EvtDoSkillSuccNotify() {
    *this = ::std::move(from);
  }

  inline EvtDoSkillSuccNotify& operator=(EvtDoSkillSuccNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtDoSkillSuccNotify& default_instance();

  static inline const EvtDoSkillSuccNotify* internal_default_instance() {
    return reinterpret_cast<const EvtDoSkillSuccNotify*>(
               &_EvtDoSkillSuccNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(EvtDoSkillSuccNotify* other);
  friend void swap(EvtDoSkillSuccNotify& a, EvtDoSkillSuccNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtDoSkillSuccNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtDoSkillSuccNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtDoSkillSuccNotify& from);
  void MergeFrom(const EvtDoSkillSuccNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtDoSkillSuccNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtDoSkillSuccNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtDoSkillSuccNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtDoSkillSuccNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtDoSkillSuccNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtDoSkillSuccNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtDoSkillSuccNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtDoSkillSuccNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtDoSkillSuccNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtDoSkillSuccNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtDoSkillSuccNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtDoSkillSuccNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtDoSkillSuccNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtDoSkillSuccNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector forward = 15;
  bool has_forward() const;
  void clear_forward();
  static const int kForwardFieldNumber = 15;
  const ::proto::Vector& forward() const;
  ::proto::Vector* mutable_forward();
  ::proto::Vector* release_forward();
  void set_allocated_forward(::proto::Vector* forward);

  // uint32 caster_id = 13;
  void clear_caster_id();
  static const int kCasterIdFieldNumber = 13;
  ::google::protobuf::uint32 caster_id() const;
  void set_caster_id(::google::protobuf::uint32 value);

  // uint32 skill_id = 7;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 7;
  ::google::protobuf::uint32 skill_id() const;
  void set_skill_id(::google::protobuf::uint32 value);

  // .proto.ForwardType forward_type = 10;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 10;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // @@protoc_insertion_point(class_scope:proto.EvtDoSkillSuccNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* forward_;
  ::google::protobuf::uint32 caster_id_;
  ::google::protobuf::uint32 skill_id_;
  int forward_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtCreateGadgetNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtCreateGadgetNotify) */ {
 public:
  EvtCreateGadgetNotify();
  virtual ~EvtCreateGadgetNotify();

  EvtCreateGadgetNotify(const EvtCreateGadgetNotify& from);

  inline EvtCreateGadgetNotify& operator=(const EvtCreateGadgetNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtCreateGadgetNotify(EvtCreateGadgetNotify&& from) noexcept
    : EvtCreateGadgetNotify() {
    *this = ::std::move(from);
  }

  inline EvtCreateGadgetNotify& operator=(EvtCreateGadgetNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtCreateGadgetNotify& default_instance();

  static inline const EvtCreateGadgetNotify* internal_default_instance() {
    return reinterpret_cast<const EvtCreateGadgetNotify*>(
               &_EvtCreateGadgetNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(EvtCreateGadgetNotify* other);
  friend void swap(EvtCreateGadgetNotify& a, EvtCreateGadgetNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtCreateGadgetNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtCreateGadgetNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtCreateGadgetNotify& from);
  void MergeFrom(const EvtCreateGadgetNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtCreateGadgetNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtCreateGadgetNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtCreateGadgetNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtCreateGadgetNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtCreateGadgetNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtCreateGadgetNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtCreateGadgetNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtCreateGadgetNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtCreateGadgetNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtCreateGadgetNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtCreateGadgetNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtCreateGadgetNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtCreateGadgetNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtCreateGadgetNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 target_entity_id_list = 889;
  int target_entity_id_list_size() const;
  void clear_target_entity_id_list();
  static const int kTargetEntityIdListFieldNumber = 889;
  ::google::protobuf::uint32 target_entity_id_list(int index) const;
  void set_target_entity_id_list(int index, ::google::protobuf::uint32 value);
  void add_target_entity_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      target_entity_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_target_entity_id_list();

  // repeated uint32 target_lock_point_index_list = 1920;
  int target_lock_point_index_list_size() const;
  void clear_target_lock_point_index_list();
  static const int kTargetLockPointIndexListFieldNumber = 1920;
  ::google::protobuf::uint32 target_lock_point_index_list(int index) const;
  void set_target_lock_point_index_list(int index, ::google::protobuf::uint32 value);
  void add_target_lock_point_index_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      target_lock_point_index_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_target_lock_point_index_list();

  // .proto.Vector init_pos = 4;
  bool has_init_pos() const;
  void clear_init_pos();
  static const int kInitPosFieldNumber = 4;
  const ::proto::Vector& init_pos() const;
  ::proto::Vector* mutable_init_pos();
  ::proto::Vector* release_init_pos();
  void set_allocated_init_pos(::proto::Vector* init_pos);

  // .proto.Vector init_euler_angles = 13;
  bool has_init_euler_angles() const;
  void clear_init_euler_angles();
  static const int kInitEulerAnglesFieldNumber = 13;
  const ::proto::Vector& init_euler_angles() const;
  ::proto::Vector* mutable_init_euler_angles();
  ::proto::Vector* release_init_euler_angles();
  void set_allocated_init_euler_angles(::proto::Vector* init_euler_angles);

  // uint32 prop_owner_entity_id = 1;
  void clear_prop_owner_entity_id();
  static const int kPropOwnerEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 prop_owner_entity_id() const;
  void set_prop_owner_entity_id(::google::protobuf::uint32 value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 target_entity_id = 3;
  void clear_target_entity_id();
  static const int kTargetEntityIdFieldNumber = 3;
  ::google::protobuf::uint32 target_entity_id() const;
  void set_target_entity_id(::google::protobuf::uint32 value);

  // uint32 camp_type = 5;
  void clear_camp_type();
  static const int kCampTypeFieldNumber = 5;
  ::google::protobuf::uint32 camp_type() const;
  void set_camp_type(::google::protobuf::uint32 value);

  // uint64 guid = 6;
  void clear_guid();
  static const int kGuidFieldNumber = 6;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint32 room_id = 7;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 7;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // uint32 owner_entity_id = 9;
  void clear_owner_entity_id();
  static const int kOwnerEntityIdFieldNumber = 9;
  ::google::protobuf::uint32 owner_entity_id() const;
  void set_owner_entity_id(::google::protobuf::uint32 value);

  // uint32 target_lock_point_index = 11;
  void clear_target_lock_point_index();
  static const int kTargetLockPointIndexFieldNumber = 11;
  ::google::protobuf::uint32 target_lock_point_index() const;
  void set_target_lock_point_index(::google::protobuf::uint32 value);

  // .proto.ForwardType forward_type = 12;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 12;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // uint32 config_id = 14;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 14;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // uint32 camp_id = 15;
  void clear_camp_id();
  static const int kCampIdFieldNumber = 15;
  ::google::protobuf::uint32 camp_id() const;
  void set_camp_id(::google::protobuf::uint32 value);

  // bool is_async_load = 8;
  void clear_is_async_load();
  static const int kIsAsyncLoadFieldNumber = 8;
  bool is_async_load() const;
  void set_is_async_load(bool value);

  // bool sight_group_with_owner = 10;
  void clear_sight_group_with_owner();
  static const int kSightGroupWithOwnerFieldNumber = 10;
  bool sight_group_with_owner() const;
  void set_sight_group_with_owner(bool value);

  // bool is_peer_id_from_player = 25;
  void clear_is_peer_id_from_player();
  static const int kIsPeerIdFromPlayerFieldNumber = 25;
  bool is_peer_id_from_player() const;
  void set_is_peer_id_from_player(bool value);

  // bool is_true_life_time_by_owner = 379;
  void clear_is_true_life_time_by_owner();
  static const int kIsTrueLifeTimeByOwnerFieldNumber = 379;
  bool is_true_life_time_by_owner() const;
  void set_is_true_life_time_by_owner(bool value);

  // @@protoc_insertion_point(class_scope:proto.EvtCreateGadgetNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > target_entity_id_list_;
  mutable int _target_entity_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > target_lock_point_index_list_;
  mutable int _target_lock_point_index_list_cached_byte_size_;
  ::proto::Vector* init_pos_;
  ::proto::Vector* init_euler_angles_;
  ::google::protobuf::uint32 prop_owner_entity_id_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 target_entity_id_;
  ::google::protobuf::uint32 camp_type_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 owner_entity_id_;
  ::google::protobuf::uint32 target_lock_point_index_;
  int forward_type_;
  ::google::protobuf::uint32 config_id_;
  ::google::protobuf::uint32 camp_id_;
  bool is_async_load_;
  bool sight_group_with_owner_;
  bool is_peer_id_from_player_;
  bool is_true_life_time_by_owner_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtDestroyGadgetNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtDestroyGadgetNotify) */ {
 public:
  EvtDestroyGadgetNotify();
  virtual ~EvtDestroyGadgetNotify();

  EvtDestroyGadgetNotify(const EvtDestroyGadgetNotify& from);

  inline EvtDestroyGadgetNotify& operator=(const EvtDestroyGadgetNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtDestroyGadgetNotify(EvtDestroyGadgetNotify&& from) noexcept
    : EvtDestroyGadgetNotify() {
    *this = ::std::move(from);
  }

  inline EvtDestroyGadgetNotify& operator=(EvtDestroyGadgetNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtDestroyGadgetNotify& default_instance();

  static inline const EvtDestroyGadgetNotify* internal_default_instance() {
    return reinterpret_cast<const EvtDestroyGadgetNotify*>(
               &_EvtDestroyGadgetNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(EvtDestroyGadgetNotify* other);
  friend void swap(EvtDestroyGadgetNotify& a, EvtDestroyGadgetNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtDestroyGadgetNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtDestroyGadgetNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtDestroyGadgetNotify& from);
  void MergeFrom(const EvtDestroyGadgetNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtDestroyGadgetNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtDestroyGadgetNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtDestroyGadgetNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtDestroyGadgetNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtDestroyGadgetNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtDestroyGadgetNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtDestroyGadgetNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtDestroyGadgetNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtDestroyGadgetNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtDestroyGadgetNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtDestroyGadgetNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtDestroyGadgetNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtDestroyGadgetNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtDestroyGadgetNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 entity_id = 3;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 3;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // .proto.ForwardType forward_type = 5;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 5;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // @@protoc_insertion_point(class_scope:proto.EvtDestroyGadgetNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  int forward_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtFaceToEntityNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtFaceToEntityNotify) */ {
 public:
  EvtFaceToEntityNotify();
  virtual ~EvtFaceToEntityNotify();

  EvtFaceToEntityNotify(const EvtFaceToEntityNotify& from);

  inline EvtFaceToEntityNotify& operator=(const EvtFaceToEntityNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtFaceToEntityNotify(EvtFaceToEntityNotify&& from) noexcept
    : EvtFaceToEntityNotify() {
    *this = ::std::move(from);
  }

  inline EvtFaceToEntityNotify& operator=(EvtFaceToEntityNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtFaceToEntityNotify& default_instance();

  static inline const EvtFaceToEntityNotify* internal_default_instance() {
    return reinterpret_cast<const EvtFaceToEntityNotify*>(
               &_EvtFaceToEntityNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(EvtFaceToEntityNotify* other);
  friend void swap(EvtFaceToEntityNotify& a, EvtFaceToEntityNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtFaceToEntityNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtFaceToEntityNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtFaceToEntityNotify& from);
  void MergeFrom(const EvtFaceToEntityNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtFaceToEntityNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtFaceToEntityNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtFaceToEntityNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtFaceToEntityNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtFaceToEntityNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtFaceToEntityNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtFaceToEntityNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtFaceToEntityNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtFaceToEntityNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtFaceToEntityNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtFaceToEntityNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtFaceToEntityNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtFaceToEntityNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtFaceToEntityNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 face_entity_id = 5;
  void clear_face_entity_id();
  static const int kFaceEntityIdFieldNumber = 5;
  ::google::protobuf::uint32 face_entity_id() const;
  void set_face_entity_id(::google::protobuf::uint32 value);

  // .proto.ForwardType forward_type = 9;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 9;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // @@protoc_insertion_point(class_scope:proto.EvtFaceToEntityNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 face_entity_id_;
  int forward_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtFaceToDirInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtFaceToDirInfo) */ {
 public:
  EvtFaceToDirInfo();
  virtual ~EvtFaceToDirInfo();

  EvtFaceToDirInfo(const EvtFaceToDirInfo& from);

  inline EvtFaceToDirInfo& operator=(const EvtFaceToDirInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtFaceToDirInfo(EvtFaceToDirInfo&& from) noexcept
    : EvtFaceToDirInfo() {
    *this = ::std::move(from);
  }

  inline EvtFaceToDirInfo& operator=(EvtFaceToDirInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtFaceToDirInfo& default_instance();

  static inline const EvtFaceToDirInfo* internal_default_instance() {
    return reinterpret_cast<const EvtFaceToDirInfo*>(
               &_EvtFaceToDirInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(EvtFaceToDirInfo* other);
  friend void swap(EvtFaceToDirInfo& a, EvtFaceToDirInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtFaceToDirInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtFaceToDirInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtFaceToDirInfo& from);
  void MergeFrom(const EvtFaceToDirInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtFaceToDirInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector face_dir = 14;
  bool has_face_dir() const;
  void clear_face_dir();
  static const int kFaceDirFieldNumber = 14;
  const ::proto::Vector& face_dir() const;
  ::proto::Vector* mutable_face_dir();
  ::proto::Vector* release_face_dir();
  void set_allocated_face_dir(::proto::Vector* face_dir);

  // uint32 entity_id = 12;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 12;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtFaceToDirInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* face_dir_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtFaceToDirNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtFaceToDirNotify) */ {
 public:
  EvtFaceToDirNotify();
  virtual ~EvtFaceToDirNotify();

  EvtFaceToDirNotify(const EvtFaceToDirNotify& from);

  inline EvtFaceToDirNotify& operator=(const EvtFaceToDirNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtFaceToDirNotify(EvtFaceToDirNotify&& from) noexcept
    : EvtFaceToDirNotify() {
    *this = ::std::move(from);
  }

  inline EvtFaceToDirNotify& operator=(EvtFaceToDirNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtFaceToDirNotify& default_instance();

  static inline const EvtFaceToDirNotify* internal_default_instance() {
    return reinterpret_cast<const EvtFaceToDirNotify*>(
               &_EvtFaceToDirNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(EvtFaceToDirNotify* other);
  friend void swap(EvtFaceToDirNotify& a, EvtFaceToDirNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtFaceToDirNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtFaceToDirNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtFaceToDirNotify& from);
  void MergeFrom(const EvtFaceToDirNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtFaceToDirNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtFaceToDirNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtFaceToDirNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtFaceToDirNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtFaceToDirNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtFaceToDirNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtFaceToDirNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtFaceToDirNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtFaceToDirNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtFaceToDirNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtFaceToDirNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtFaceToDirNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtFaceToDirNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtFaceToDirNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.EvtFaceToDirInfo evt_face_to_dir_info = 5;
  bool has_evt_face_to_dir_info() const;
  void clear_evt_face_to_dir_info();
  static const int kEvtFaceToDirInfoFieldNumber = 5;
  const ::proto::EvtFaceToDirInfo& evt_face_to_dir_info() const;
  ::proto::EvtFaceToDirInfo* mutable_evt_face_to_dir_info();
  ::proto::EvtFaceToDirInfo* release_evt_face_to_dir_info();
  void set_allocated_evt_face_to_dir_info(::proto::EvtFaceToDirInfo* evt_face_to_dir_info);

  // .proto.ForwardType forward_type = 13;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 13;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // @@protoc_insertion_point(class_scope:proto.EvtFaceToDirNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::EvtFaceToDirInfo* evt_face_to_dir_info_;
  int forward_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtCostStaminaNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtCostStaminaNotify) */ {
 public:
  EvtCostStaminaNotify();
  virtual ~EvtCostStaminaNotify();

  EvtCostStaminaNotify(const EvtCostStaminaNotify& from);

  inline EvtCostStaminaNotify& operator=(const EvtCostStaminaNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtCostStaminaNotify(EvtCostStaminaNotify&& from) noexcept
    : EvtCostStaminaNotify() {
    *this = ::std::move(from);
  }

  inline EvtCostStaminaNotify& operator=(EvtCostStaminaNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtCostStaminaNotify& default_instance();

  static inline const EvtCostStaminaNotify* internal_default_instance() {
    return reinterpret_cast<const EvtCostStaminaNotify*>(
               &_EvtCostStaminaNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(EvtCostStaminaNotify* other);
  friend void swap(EvtCostStaminaNotify& a, EvtCostStaminaNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtCostStaminaNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtCostStaminaNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtCostStaminaNotify& from);
  void MergeFrom(const EvtCostStaminaNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtCostStaminaNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtCostStaminaNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtCostStaminaNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtCostStaminaNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtCostStaminaNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtCostStaminaNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtCostStaminaNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtCostStaminaNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtCostStaminaNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtCostStaminaNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtCostStaminaNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtCostStaminaNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtCostStaminaNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtCostStaminaNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 skill_id = 6;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 6;
  ::google::protobuf::uint32 skill_id() const;
  void set_skill_id(::google::protobuf::uint32 value);

  // float cost_stamina = 11;
  void clear_cost_stamina();
  static const int kCostStaminaFieldNumber = 11;
  float cost_stamina() const;
  void set_cost_stamina(float value);

  // @@protoc_insertion_point(class_scope:proto.EvtCostStaminaNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 skill_id_;
  float cost_stamina_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtSetAttackTargetInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtSetAttackTargetInfo) */ {
 public:
  EvtSetAttackTargetInfo();
  virtual ~EvtSetAttackTargetInfo();

  EvtSetAttackTargetInfo(const EvtSetAttackTargetInfo& from);

  inline EvtSetAttackTargetInfo& operator=(const EvtSetAttackTargetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtSetAttackTargetInfo(EvtSetAttackTargetInfo&& from) noexcept
    : EvtSetAttackTargetInfo() {
    *this = ::std::move(from);
  }

  inline EvtSetAttackTargetInfo& operator=(EvtSetAttackTargetInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtSetAttackTargetInfo& default_instance();

  static inline const EvtSetAttackTargetInfo* internal_default_instance() {
    return reinterpret_cast<const EvtSetAttackTargetInfo*>(
               &_EvtSetAttackTargetInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(EvtSetAttackTargetInfo* other);
  friend void swap(EvtSetAttackTargetInfo& a, EvtSetAttackTargetInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtSetAttackTargetInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtSetAttackTargetInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtSetAttackTargetInfo& from);
  void MergeFrom(const EvtSetAttackTargetInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtSetAttackTargetInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 entity_id = 11;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 11;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 select_point_index = 6;
  void clear_select_point_index();
  static const int kSelectPointIndexFieldNumber = 6;
  ::google::protobuf::uint32 select_point_index() const;
  void set_select_point_index(::google::protobuf::uint32 value);

  // uint32 attack_target_id = 7;
  void clear_attack_target_id();
  static const int kAttackTargetIdFieldNumber = 7;
  ::google::protobuf::uint32 attack_target_id() const;
  void set_attack_target_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtSetAttackTargetInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 select_point_index_;
  ::google::protobuf::uint32 attack_target_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtSetAttackTargetNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtSetAttackTargetNotify) */ {
 public:
  EvtSetAttackTargetNotify();
  virtual ~EvtSetAttackTargetNotify();

  EvtSetAttackTargetNotify(const EvtSetAttackTargetNotify& from);

  inline EvtSetAttackTargetNotify& operator=(const EvtSetAttackTargetNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtSetAttackTargetNotify(EvtSetAttackTargetNotify&& from) noexcept
    : EvtSetAttackTargetNotify() {
    *this = ::std::move(from);
  }

  inline EvtSetAttackTargetNotify& operator=(EvtSetAttackTargetNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtSetAttackTargetNotify& default_instance();

  static inline const EvtSetAttackTargetNotify* internal_default_instance() {
    return reinterpret_cast<const EvtSetAttackTargetNotify*>(
               &_EvtSetAttackTargetNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(EvtSetAttackTargetNotify* other);
  friend void swap(EvtSetAttackTargetNotify& a, EvtSetAttackTargetNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtSetAttackTargetNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtSetAttackTargetNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtSetAttackTargetNotify& from);
  void MergeFrom(const EvtSetAttackTargetNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtSetAttackTargetNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtSetAttackTargetNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtSetAttackTargetNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtSetAttackTargetNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtSetAttackTargetNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtSetAttackTargetNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtSetAttackTargetNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtSetAttackTargetNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtSetAttackTargetNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtSetAttackTargetNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtSetAttackTargetNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtSetAttackTargetNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtSetAttackTargetNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtSetAttackTargetNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.EvtSetAttackTargetInfo evt_set_attack_target_info = 11;
  bool has_evt_set_attack_target_info() const;
  void clear_evt_set_attack_target_info();
  static const int kEvtSetAttackTargetInfoFieldNumber = 11;
  const ::proto::EvtSetAttackTargetInfo& evt_set_attack_target_info() const;
  ::proto::EvtSetAttackTargetInfo* mutable_evt_set_attack_target_info();
  ::proto::EvtSetAttackTargetInfo* release_evt_set_attack_target_info();
  void set_allocated_evt_set_attack_target_info(::proto::EvtSetAttackTargetInfo* evt_set_attack_target_info);

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // @@protoc_insertion_point(class_scope:proto.EvtSetAttackTargetNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::EvtSetAttackTargetInfo* evt_set_attack_target_info_;
  int forward_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtAnimatorStateChangedInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAnimatorStateChangedInfo) */ {
 public:
  EvtAnimatorStateChangedInfo();
  virtual ~EvtAnimatorStateChangedInfo();

  EvtAnimatorStateChangedInfo(const EvtAnimatorStateChangedInfo& from);

  inline EvtAnimatorStateChangedInfo& operator=(const EvtAnimatorStateChangedInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAnimatorStateChangedInfo(EvtAnimatorStateChangedInfo&& from) noexcept
    : EvtAnimatorStateChangedInfo() {
    *this = ::std::move(from);
  }

  inline EvtAnimatorStateChangedInfo& operator=(EvtAnimatorStateChangedInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAnimatorStateChangedInfo& default_instance();

  static inline const EvtAnimatorStateChangedInfo* internal_default_instance() {
    return reinterpret_cast<const EvtAnimatorStateChangedInfo*>(
               &_EvtAnimatorStateChangedInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(EvtAnimatorStateChangedInfo* other);
  friend void swap(EvtAnimatorStateChangedInfo& a, EvtAnimatorStateChangedInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAnimatorStateChangedInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAnimatorStateChangedInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAnimatorStateChangedInfo& from);
  void MergeFrom(const EvtAnimatorStateChangedInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAnimatorStateChangedInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 13;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 13;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // uint32 layer = 2;
  void clear_layer();
  static const int kLayerFieldNumber = 2;
  ::google::protobuf::uint32 layer() const;
  void set_layer(::google::protobuf::uint32 value);

  // float fade_duration = 3;
  void clear_fade_duration();
  static const int kFadeDurationFieldNumber = 3;
  float fade_duration() const;
  void set_fade_duration(float value);

  // bool forceSync = 1;
  void clear_forcesync();
  static const int kForceSyncFieldNumber = 1;
  bool forcesync() const;
  void set_forcesync(bool value);

  // bool handle_animator_state_immediately = 7;
  void clear_handle_animator_state_immediately();
  static const int kHandleAnimatorStateImmediatelyFieldNumber = 7;
  bool handle_animator_state_immediately() const;
  void set_handle_animator_state_immediately(bool value);

  // uint32 to_state_hash = 5;
  void clear_to_state_hash();
  static const int kToStateHashFieldNumber = 5;
  ::google::protobuf::uint32 to_state_hash() const;
  void set_to_state_hash(::google::protobuf::uint32 value);

  // uint32 entity_id = 15;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 15;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 normalized_time_compact = 9;
  void clear_normalized_time_compact();
  static const int kNormalizedTimeCompactFieldNumber = 9;
  ::google::protobuf::uint32 normalized_time_compact() const;
  void set_normalized_time_compact(::google::protobuf::uint32 value);

  // int32 face_angle_compact = 14;
  void clear_face_angle_compact();
  static const int kFaceAngleCompactFieldNumber = 14;
  ::google::protobuf::int32 face_angle_compact() const;
  void set_face_angle_compact(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtAnimatorStateChangedInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::google::protobuf::uint32 layer_;
  float fade_duration_;
  bool forcesync_;
  bool handle_animator_state_immediately_;
  ::google::protobuf::uint32 to_state_hash_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 normalized_time_compact_;
  ::google::protobuf::int32 face_angle_compact_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtCompensatePosDiffInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtCompensatePosDiffInfo) */ {
 public:
  EvtCompensatePosDiffInfo();
  virtual ~EvtCompensatePosDiffInfo();

  EvtCompensatePosDiffInfo(const EvtCompensatePosDiffInfo& from);

  inline EvtCompensatePosDiffInfo& operator=(const EvtCompensatePosDiffInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtCompensatePosDiffInfo(EvtCompensatePosDiffInfo&& from) noexcept
    : EvtCompensatePosDiffInfo() {
    *this = ::std::move(from);
  }

  inline EvtCompensatePosDiffInfo& operator=(EvtCompensatePosDiffInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtCompensatePosDiffInfo& default_instance();

  static inline const EvtCompensatePosDiffInfo* internal_default_instance() {
    return reinterpret_cast<const EvtCompensatePosDiffInfo*>(
               &_EvtCompensatePosDiffInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(EvtCompensatePosDiffInfo* other);
  friend void swap(EvtCompensatePosDiffInfo& a, EvtCompensatePosDiffInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtCompensatePosDiffInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtCompensatePosDiffInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtCompensatePosDiffInfo& from);
  void MergeFrom(const EvtCompensatePosDiffInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtCompensatePosDiffInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector cur_pos = 14;
  bool has_cur_pos() const;
  void clear_cur_pos();
  static const int kCurPosFieldNumber = 14;
  const ::proto::Vector& cur_pos() const;
  ::proto::Vector* mutable_cur_pos();
  ::proto::Vector* release_cur_pos();
  void set_allocated_cur_pos(::proto::Vector* cur_pos);

  // uint32 normalized_time_compact = 3;
  void clear_normalized_time_compact();
  static const int kNormalizedTimeCompactFieldNumber = 3;
  ::google::protobuf::uint32 normalized_time_compact() const;
  void set_normalized_time_compact(::google::protobuf::uint32 value);

  // uint32 cur_hash = 4;
  void clear_cur_hash();
  static const int kCurHashFieldNumber = 4;
  ::google::protobuf::uint32 cur_hash() const;
  void set_cur_hash(::google::protobuf::uint32 value);

  // int32 face_angle_compact = 10;
  void clear_face_angle_compact();
  static const int kFaceAngleCompactFieldNumber = 10;
  ::google::protobuf::int32 face_angle_compact() const;
  void set_face_angle_compact(::google::protobuf::int32 value);

  // uint32 entity_id = 11;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 11;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtCompensatePosDiffInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* cur_pos_;
  ::google::protobuf::uint32 normalized_time_compact_;
  ::google::protobuf::uint32 cur_hash_;
  ::google::protobuf::int32 face_angle_compact_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtMonsterDoBlink : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtMonsterDoBlink) */ {
 public:
  EvtMonsterDoBlink();
  virtual ~EvtMonsterDoBlink();

  EvtMonsterDoBlink(const EvtMonsterDoBlink& from);

  inline EvtMonsterDoBlink& operator=(const EvtMonsterDoBlink& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtMonsterDoBlink(EvtMonsterDoBlink&& from) noexcept
    : EvtMonsterDoBlink() {
    *this = ::std::move(from);
  }

  inline EvtMonsterDoBlink& operator=(EvtMonsterDoBlink&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtMonsterDoBlink& default_instance();

  static inline const EvtMonsterDoBlink* internal_default_instance() {
    return reinterpret_cast<const EvtMonsterDoBlink*>(
               &_EvtMonsterDoBlink_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(EvtMonsterDoBlink* other);
  friend void swap(EvtMonsterDoBlink& a, EvtMonsterDoBlink& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtMonsterDoBlink* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtMonsterDoBlink* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtMonsterDoBlink& from);
  void MergeFrom(const EvtMonsterDoBlink& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtMonsterDoBlink* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector target_rot = 3;
  bool has_target_rot() const;
  void clear_target_rot();
  static const int kTargetRotFieldNumber = 3;
  const ::proto::Vector& target_rot() const;
  ::proto::Vector* mutable_target_rot();
  ::proto::Vector* release_target_rot();
  void set_allocated_target_rot(::proto::Vector* target_rot);

  // .proto.Vector target_pos = 7;
  bool has_target_pos() const;
  void clear_target_pos();
  static const int kTargetPosFieldNumber = 7;
  const ::proto::Vector& target_pos() const;
  ::proto::Vector* mutable_target_pos();
  ::proto::Vector* release_target_pos();
  void set_allocated_target_pos(::proto::Vector* target_pos);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtMonsterDoBlink)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* target_rot_;
  ::proto::Vector* target_pos_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtFixedRushMove : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtFixedRushMove) */ {
 public:
  EvtFixedRushMove();
  virtual ~EvtFixedRushMove();

  EvtFixedRushMove(const EvtFixedRushMove& from);

  inline EvtFixedRushMove& operator=(const EvtFixedRushMove& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtFixedRushMove(EvtFixedRushMove&& from) noexcept
    : EvtFixedRushMove() {
    *this = ::std::move(from);
  }

  inline EvtFixedRushMove& operator=(EvtFixedRushMove&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtFixedRushMove& default_instance();

  static inline const EvtFixedRushMove* internal_default_instance() {
    return reinterpret_cast<const EvtFixedRushMove*>(
               &_EvtFixedRushMove_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(EvtFixedRushMove* other);
  friend void swap(EvtFixedRushMove& a, EvtFixedRushMove& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtFixedRushMove* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtFixedRushMove* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtFixedRushMove& from);
  void MergeFrom(const EvtFixedRushMove& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtFixedRushMove* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 animator_state_id_list = 2;
  int animator_state_id_list_size() const;
  void clear_animator_state_id_list();
  static const int kAnimatorStateIdListFieldNumber = 2;
  ::google::protobuf::uint32 animator_state_id_list(int index) const;
  void set_animator_state_id_list(int index, ::google::protobuf::uint32 value);
  void add_animator_state_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      animator_state_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_animator_state_id_list();

  // string override_collider = 13;
  void clear_override_collider();
  static const int kOverrideColliderFieldNumber = 13;
  const ::std::string& override_collider() const;
  void set_override_collider(const ::std::string& value);
  #if LANG_CXX11
  void set_override_collider(::std::string&& value);
  #endif
  void set_override_collider(const char* value);
  void set_override_collider(const char* value, size_t size);
  ::std::string* mutable_override_collider();
  ::std::string* release_override_collider();
  void set_allocated_override_collider(::std::string* override_collider);

  // .proto.Vector target_pos = 9;
  bool has_target_pos() const;
  void clear_target_pos();
  static const int kTargetPosFieldNumber = 9;
  const ::proto::Vector& target_pos() const;
  ::proto::Vector* mutable_target_pos();
  ::proto::Vector* release_target_pos();
  void set_allocated_target_pos(::proto::Vector* target_pos);

  // float speed = 3;
  void clear_speed();
  static const int kSpeedFieldNumber = 3;
  float speed() const;
  void set_speed(float value);

  // bool need_set_is_in_air = 7;
  void clear_need_set_is_in_air();
  static const int kNeedSetIsInAirFieldNumber = 7;
  bool need_set_is_in_air() const;
  void set_need_set_is_in_air(bool value);

  // bool check_animator_state_on_exit_only = 6;
  void clear_check_animator_state_on_exit_only();
  static const int kCheckAnimatorStateOnExitOnlyFieldNumber = 6;
  bool check_animator_state_on_exit_only() const;
  void set_check_animator_state_on_exit_only(bool value);

  // uint32 entity_id = 15;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 15;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtFixedRushMove)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > animator_state_id_list_;
  mutable int _animator_state_id_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr override_collider_;
  ::proto::Vector* target_pos_;
  float speed_;
  bool need_set_is_in_air_;
  bool check_animator_state_on_exit_only_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtSyncTransform : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtSyncTransform) */ {
 public:
  EvtSyncTransform();
  virtual ~EvtSyncTransform();

  EvtSyncTransform(const EvtSyncTransform& from);

  inline EvtSyncTransform& operator=(const EvtSyncTransform& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtSyncTransform(EvtSyncTransform&& from) noexcept
    : EvtSyncTransform() {
    *this = ::std::move(from);
  }

  inline EvtSyncTransform& operator=(EvtSyncTransform&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtSyncTransform& default_instance();

  static inline const EvtSyncTransform* internal_default_instance() {
    return reinterpret_cast<const EvtSyncTransform*>(
               &_EvtSyncTransform_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(EvtSyncTransform* other);
  friend void swap(EvtSyncTransform& a, EvtSyncTransform& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtSyncTransform* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtSyncTransform* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtSyncTransform& from);
  void MergeFrom(const EvtSyncTransform& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtSyncTransform* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector entity_rot = 1;
  bool has_entity_rot() const;
  void clear_entity_rot();
  static const int kEntityRotFieldNumber = 1;
  const ::proto::Vector& entity_rot() const;
  ::proto::Vector* mutable_entity_rot();
  ::proto::Vector* release_entity_rot();
  void set_allocated_entity_rot(::proto::Vector* entity_rot);

  // .proto.Vector entity_pos = 6;
  bool has_entity_pos() const;
  void clear_entity_pos();
  static const int kEntityPosFieldNumber = 6;
  const ::proto::Vector& entity_pos() const;
  ::proto::Vector* mutable_entity_pos();
  ::proto::Vector* release_entity_pos();
  void set_allocated_entity_pos(::proto::Vector* entity_pos);

  // uint32 entity_id = 15;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 15;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtSyncTransform)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* entity_rot_;
  ::proto::Vector* entity_pos_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtLightCoreMove : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtLightCoreMove) */ {
 public:
  EvtLightCoreMove();
  virtual ~EvtLightCoreMove();

  EvtLightCoreMove(const EvtLightCoreMove& from);

  inline EvtLightCoreMove& operator=(const EvtLightCoreMove& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtLightCoreMove(EvtLightCoreMove&& from) noexcept
    : EvtLightCoreMove() {
    *this = ::std::move(from);
  }

  inline EvtLightCoreMove& operator=(EvtLightCoreMove&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtLightCoreMove& default_instance();

  static inline const EvtLightCoreMove* internal_default_instance() {
    return reinterpret_cast<const EvtLightCoreMove*>(
               &_EvtLightCoreMove_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(EvtLightCoreMove* other);
  friend void swap(EvtLightCoreMove& a, EvtLightCoreMove& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtLightCoreMove* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtLightCoreMove* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtLightCoreMove& from);
  void MergeFrom(const EvtLightCoreMove& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtLightCoreMove* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector target_pos = 15;
  bool has_target_pos() const;
  void clear_target_pos();
  static const int kTargetPosFieldNumber = 15;
  const ::proto::Vector& target_pos() const;
  ::proto::Vector* mutable_target_pos();
  ::proto::Vector* release_target_pos();
  void set_allocated_target_pos(::proto::Vector* target_pos);

  // uint32 entity_id = 5;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 5;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // float max_absorb_time = 10;
  void clear_max_absorb_time();
  static const int kMaxAbsorbTimeFieldNumber = 10;
  float max_absorb_time() const;
  void set_max_absorb_time(float value);

  // float acelerate = 11;
  void clear_acelerate();
  static const int kAcelerateFieldNumber = 11;
  float acelerate() const;
  void set_acelerate(float value);

  // float speed = 14;
  void clear_speed();
  static const int kSpeedFieldNumber = 14;
  float speed() const;
  void set_speed(float value);

  // @@protoc_insertion_point(class_scope:proto.EvtLightCoreMove)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* target_pos_;
  ::google::protobuf::uint32 entity_id_;
  float max_absorb_time_;
  float acelerate_;
  float speed_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtGrapplingHookMove : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtGrapplingHookMove) */ {
 public:
  EvtGrapplingHookMove();
  virtual ~EvtGrapplingHookMove();

  EvtGrapplingHookMove(const EvtGrapplingHookMove& from);

  inline EvtGrapplingHookMove& operator=(const EvtGrapplingHookMove& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtGrapplingHookMove(EvtGrapplingHookMove&& from) noexcept
    : EvtGrapplingHookMove() {
    *this = ::std::move(from);
  }

  inline EvtGrapplingHookMove& operator=(EvtGrapplingHookMove&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtGrapplingHookMove& default_instance();

  static inline const EvtGrapplingHookMove* internal_default_instance() {
    return reinterpret_cast<const EvtGrapplingHookMove*>(
               &_EvtGrapplingHookMove_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(EvtGrapplingHookMove* other);
  friend void swap(EvtGrapplingHookMove& a, EvtGrapplingHookMove& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtGrapplingHookMove* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtGrapplingHookMove* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtGrapplingHookMove& from);
  void MergeFrom(const EvtGrapplingHookMove& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtGrapplingHookMove* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 animator_state_id_list = 2;
  int animator_state_id_list_size() const;
  void clear_animator_state_id_list();
  static const int kAnimatorStateIdListFieldNumber = 2;
  ::google::protobuf::uint32 animator_state_id_list(int index) const;
  void set_animator_state_id_list(int index, ::google::protobuf::uint32 value);
  void add_animator_state_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      animator_state_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_animator_state_id_list();

  // string override_collider = 14;
  void clear_override_collider();
  static const int kOverrideColliderFieldNumber = 14;
  const ::std::string& override_collider() const;
  void set_override_collider(const ::std::string& value);
  #if LANG_CXX11
  void set_override_collider(::std::string&& value);
  #endif
  void set_override_collider(const char* value);
  void set_override_collider(const char* value, size_t size);
  ::std::string* mutable_override_collider();
  ::std::string* release_override_collider();
  void set_allocated_override_collider(::std::string* override_collider);

  // .proto.Vector target_pos = 10;
  bool has_target_pos() const;
  void clear_target_pos();
  static const int kTargetPosFieldNumber = 10;
  const ::proto::Vector& target_pos() const;
  ::proto::Vector* mutable_target_pos();
  ::proto::Vector* release_target_pos();
  void set_allocated_target_pos(::proto::Vector* target_pos);

  // float acceleration = 1;
  void clear_acceleration();
  static const int kAccelerationFieldNumber = 1;
  float acceleration() const;
  void set_acceleration(float value);

  // uint32 entity_id = 3;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 3;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // float max_speed = 8;
  void clear_max_speed();
  static const int kMaxSpeedFieldNumber = 8;
  float max_speed() const;
  void set_max_speed(float value);

  // float speed = 12;
  void clear_speed();
  static const int kSpeedFieldNumber = 12;
  float speed() const;
  void set_speed(float value);

  // bool need_set_is_in_air = 13;
  void clear_need_set_is_in_air();
  static const int kNeedSetIsInAirFieldNumber = 13;
  bool need_set_is_in_air() const;
  void set_need_set_is_in_air(bool value);

  // bool check_animator_state_on_exit_only = 11;
  void clear_check_animator_state_on_exit_only();
  static const int kCheckAnimatorStateOnExitOnlyFieldNumber = 11;
  bool check_animator_state_on_exit_only() const;
  void set_check_animator_state_on_exit_only(bool value);

  // @@protoc_insertion_point(class_scope:proto.EvtGrapplingHookMove)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > animator_state_id_list_;
  mutable int _animator_state_id_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr override_collider_;
  ::proto::Vector* target_pos_;
  float acceleration_;
  ::google::protobuf::uint32 entity_id_;
  float max_speed_;
  float speed_;
  bool need_set_is_in_air_;
  bool check_animator_state_on_exit_only_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtAnimatorStateChangedNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAnimatorStateChangedNotify) */ {
 public:
  EvtAnimatorStateChangedNotify();
  virtual ~EvtAnimatorStateChangedNotify();

  EvtAnimatorStateChangedNotify(const EvtAnimatorStateChangedNotify& from);

  inline EvtAnimatorStateChangedNotify& operator=(const EvtAnimatorStateChangedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAnimatorStateChangedNotify(EvtAnimatorStateChangedNotify&& from) noexcept
    : EvtAnimatorStateChangedNotify() {
    *this = ::std::move(from);
  }

  inline EvtAnimatorStateChangedNotify& operator=(EvtAnimatorStateChangedNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAnimatorStateChangedNotify& default_instance();

  static inline const EvtAnimatorStateChangedNotify* internal_default_instance() {
    return reinterpret_cast<const EvtAnimatorStateChangedNotify*>(
               &_EvtAnimatorStateChangedNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(EvtAnimatorStateChangedNotify* other);
  friend void swap(EvtAnimatorStateChangedNotify& a, EvtAnimatorStateChangedNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAnimatorStateChangedNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAnimatorStateChangedNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAnimatorStateChangedNotify& from);
  void MergeFrom(const EvtAnimatorStateChangedNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAnimatorStateChangedNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtAnimatorStateChangedNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtAnimatorStateChangedNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtAnimatorStateChangedNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtAnimatorStateChangedNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtAnimatorStateChangedNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtAnimatorStateChangedNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtAnimatorStateChangedNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtAnimatorStateChangedNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtAnimatorStateChangedNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtAnimatorStateChangedNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtAnimatorStateChangedNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtAnimatorStateChangedNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtAnimatorStateChangedNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.EvtAnimatorStateChangedInfo evt_animator_state_changed_info = 10;
  bool has_evt_animator_state_changed_info() const;
  void clear_evt_animator_state_changed_info();
  static const int kEvtAnimatorStateChangedInfoFieldNumber = 10;
  const ::proto::EvtAnimatorStateChangedInfo& evt_animator_state_changed_info() const;
  ::proto::EvtAnimatorStateChangedInfo* mutable_evt_animator_state_changed_info();
  ::proto::EvtAnimatorStateChangedInfo* release_evt_animator_state_changed_info();
  void set_allocated_evt_animator_state_changed_info(::proto::EvtAnimatorStateChangedInfo* evt_animator_state_changed_info);

  // .proto.ForwardType forward_type = 3;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 3;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // @@protoc_insertion_point(class_scope:proto.EvtAnimatorStateChangedNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::EvtAnimatorStateChangedInfo* evt_animator_state_changed_info_;
  int forward_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtRushMoveInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtRushMoveInfo) */ {
 public:
  EvtRushMoveInfo();
  virtual ~EvtRushMoveInfo();

  EvtRushMoveInfo(const EvtRushMoveInfo& from);

  inline EvtRushMoveInfo& operator=(const EvtRushMoveInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtRushMoveInfo(EvtRushMoveInfo&& from) noexcept
    : EvtRushMoveInfo() {
    *this = ::std::move(from);
  }

  inline EvtRushMoveInfo& operator=(EvtRushMoveInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtRushMoveInfo& default_instance();

  static inline const EvtRushMoveInfo* internal_default_instance() {
    return reinterpret_cast<const EvtRushMoveInfo*>(
               &_EvtRushMoveInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(EvtRushMoveInfo* other);
  friend void swap(EvtRushMoveInfo& a, EvtRushMoveInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtRushMoveInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtRushMoveInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtRushMoveInfo& from);
  void MergeFrom(const EvtRushMoveInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtRushMoveInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 2;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector velocity = 6;
  bool has_velocity() const;
  void clear_velocity();
  static const int kVelocityFieldNumber = 6;
  const ::proto::Vector& velocity() const;
  ::proto::Vector* mutable_velocity();
  ::proto::Vector* release_velocity();
  void set_allocated_velocity(::proto::Vector* velocity);

  // .proto.Vector rush_attack_target_pos = 8;
  bool has_rush_attack_target_pos() const;
  void clear_rush_attack_target_pos();
  static const int kRushAttackTargetPosFieldNumber = 8;
  const ::proto::Vector& rush_attack_target_pos() const;
  ::proto::Vector* mutable_rush_attack_target_pos();
  ::proto::Vector* release_rush_attack_target_pos();
  void set_allocated_rush_attack_target_pos(::proto::Vector* rush_attack_target_pos);

  // .proto.Vector rush_to_pos = 9;
  bool has_rush_to_pos() const;
  void clear_rush_to_pos();
  static const int kRushToPosFieldNumber = 9;
  const ::proto::Vector& rush_to_pos() const;
  ::proto::Vector* mutable_rush_to_pos();
  ::proto::Vector* release_rush_to_pos();
  void set_allocated_rush_to_pos(::proto::Vector* rush_to_pos);

  // uint32 entity_id = 4;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 4;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // int32 face_angle_compact = 10;
  void clear_face_angle_compact();
  static const int kFaceAngleCompactFieldNumber = 10;
  ::google::protobuf::int32 face_angle_compact() const;
  void set_face_angle_compact(::google::protobuf::int32 value);

  // int32 state_name_hash = 11;
  void clear_state_name_hash();
  static const int kStateNameHashFieldNumber = 11;
  ::google::protobuf::int32 state_name_hash() const;
  void set_state_name_hash(::google::protobuf::int32 value);

  // float timeRange = 15;
  void clear_timerange();
  static const int kTimeRangeFieldNumber = 15;
  float timerange() const;
  void set_timerange(float value);

  // @@protoc_insertion_point(class_scope:proto.EvtRushMoveInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::proto::Vector* velocity_;
  ::proto::Vector* rush_attack_target_pos_;
  ::proto::Vector* rush_to_pos_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::int32 face_angle_compact_;
  ::google::protobuf::int32 state_name_hash_;
  float timerange_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtMotionInfoDuringSteerAttack : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtMotionInfoDuringSteerAttack) */ {
 public:
  EvtMotionInfoDuringSteerAttack();
  virtual ~EvtMotionInfoDuringSteerAttack();

  EvtMotionInfoDuringSteerAttack(const EvtMotionInfoDuringSteerAttack& from);

  inline EvtMotionInfoDuringSteerAttack& operator=(const EvtMotionInfoDuringSteerAttack& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtMotionInfoDuringSteerAttack(EvtMotionInfoDuringSteerAttack&& from) noexcept
    : EvtMotionInfoDuringSteerAttack() {
    *this = ::std::move(from);
  }

  inline EvtMotionInfoDuringSteerAttack& operator=(EvtMotionInfoDuringSteerAttack&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtMotionInfoDuringSteerAttack& default_instance();

  static inline const EvtMotionInfoDuringSteerAttack* internal_default_instance() {
    return reinterpret_cast<const EvtMotionInfoDuringSteerAttack*>(
               &_EvtMotionInfoDuringSteerAttack_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(EvtMotionInfoDuringSteerAttack* other);
  friend void swap(EvtMotionInfoDuringSteerAttack& a, EvtMotionInfoDuringSteerAttack& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtMotionInfoDuringSteerAttack* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtMotionInfoDuringSteerAttack* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtMotionInfoDuringSteerAttack& from);
  void MergeFrom(const EvtMotionInfoDuringSteerAttack& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtMotionInfoDuringSteerAttack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector velocity = 3;
  bool has_velocity() const;
  void clear_velocity();
  static const int kVelocityFieldNumber = 3;
  const ::proto::Vector& velocity() const;
  ::proto::Vector* mutable_velocity();
  ::proto::Vector* release_velocity();
  void set_allocated_velocity(::proto::Vector* velocity);

  // .proto.Vector face_dir = 4;
  bool has_face_dir() const;
  void clear_face_dir();
  static const int kFaceDirFieldNumber = 4;
  const ::proto::Vector& face_dir() const;
  ::proto::Vector* mutable_face_dir();
  ::proto::Vector* release_face_dir();
  void set_allocated_face_dir(::proto::Vector* face_dir);

  // uint32 entity_id = 6;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 6;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtMotionInfoDuringSteerAttack)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::proto::Vector* velocity_;
  ::proto::Vector* face_dir_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtCombatSteerMotionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtCombatSteerMotionInfo) */ {
 public:
  EvtCombatSteerMotionInfo();
  virtual ~EvtCombatSteerMotionInfo();

  EvtCombatSteerMotionInfo(const EvtCombatSteerMotionInfo& from);

  inline EvtCombatSteerMotionInfo& operator=(const EvtCombatSteerMotionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtCombatSteerMotionInfo(EvtCombatSteerMotionInfo&& from) noexcept
    : EvtCombatSteerMotionInfo() {
    *this = ::std::move(from);
  }

  inline EvtCombatSteerMotionInfo& operator=(EvtCombatSteerMotionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtCombatSteerMotionInfo& default_instance();

  static inline const EvtCombatSteerMotionInfo* internal_default_instance() {
    return reinterpret_cast<const EvtCombatSteerMotionInfo*>(
               &_EvtCombatSteerMotionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(EvtCombatSteerMotionInfo* other);
  friend void swap(EvtCombatSteerMotionInfo& a, EvtCombatSteerMotionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtCombatSteerMotionInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtCombatSteerMotionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtCombatSteerMotionInfo& from);
  void MergeFrom(const EvtCombatSteerMotionInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtCombatSteerMotionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector face_dir = 1;
  bool has_face_dir() const;
  void clear_face_dir();
  static const int kFaceDirFieldNumber = 1;
  const ::proto::Vector& face_dir() const;
  ::proto::Vector* mutable_face_dir();
  ::proto::Vector* release_face_dir();
  void set_allocated_face_dir(::proto::Vector* face_dir);

  // .proto.Vector velocity = 10;
  bool has_velocity() const;
  void clear_velocity();
  static const int kVelocityFieldNumber = 10;
  const ::proto::Vector& velocity() const;
  ::proto::Vector* mutable_velocity();
  ::proto::Vector* release_velocity();
  void set_allocated_velocity(::proto::Vector* velocity);

  // .proto.Vector pos = 12;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 12;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // uint32 entity_id = 4;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 4;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtCombatSteerMotionInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* face_dir_;
  ::proto::Vector* velocity_;
  ::proto::Vector* pos_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtCombatForceSetPosInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtCombatForceSetPosInfo) */ {
 public:
  EvtCombatForceSetPosInfo();
  virtual ~EvtCombatForceSetPosInfo();

  EvtCombatForceSetPosInfo(const EvtCombatForceSetPosInfo& from);

  inline EvtCombatForceSetPosInfo& operator=(const EvtCombatForceSetPosInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtCombatForceSetPosInfo(EvtCombatForceSetPosInfo&& from) noexcept
    : EvtCombatForceSetPosInfo() {
    *this = ::std::move(from);
  }

  inline EvtCombatForceSetPosInfo& operator=(EvtCombatForceSetPosInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtCombatForceSetPosInfo& default_instance();

  static inline const EvtCombatForceSetPosInfo* internal_default_instance() {
    return reinterpret_cast<const EvtCombatForceSetPosInfo*>(
               &_EvtCombatForceSetPosInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(EvtCombatForceSetPosInfo* other);
  friend void swap(EvtCombatForceSetPosInfo& a, EvtCombatForceSetPosInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtCombatForceSetPosInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtCombatForceSetPosInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtCombatForceSetPosInfo& from);
  void MergeFrom(const EvtCombatForceSetPosInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtCombatForceSetPosInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector target_pos = 1;
  bool has_target_pos() const;
  void clear_target_pos();
  static const int kTargetPosFieldNumber = 1;
  const ::proto::Vector& target_pos() const;
  ::proto::Vector* mutable_target_pos();
  ::proto::Vector* release_target_pos();
  void set_allocated_target_pos(::proto::Vector* target_pos);

  // uint32 collider_entity_id = 10;
  void clear_collider_entity_id();
  static const int kColliderEntityIdFieldNumber = 10;
  ::google::protobuf::uint32 collider_entity_id() const;
  void set_collider_entity_id(::google::protobuf::uint32 value);

  // uint32 entity_id = 6;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 6;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 ice_id = 9;
  void clear_ice_id();
  static const int kIceIdFieldNumber = 9;
  ::google::protobuf::uint32 ice_id() const;
  void set_ice_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtCombatForceSetPosInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* target_pos_;
  ::google::protobuf::uint32 collider_entity_id_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 ice_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtSyncEntityPositionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtSyncEntityPositionInfo) */ {
 public:
  EvtSyncEntityPositionInfo();
  virtual ~EvtSyncEntityPositionInfo();

  EvtSyncEntityPositionInfo(const EvtSyncEntityPositionInfo& from);

  inline EvtSyncEntityPositionInfo& operator=(const EvtSyncEntityPositionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtSyncEntityPositionInfo(EvtSyncEntityPositionInfo&& from) noexcept
    : EvtSyncEntityPositionInfo() {
    *this = ::std::move(from);
  }

  inline EvtSyncEntityPositionInfo& operator=(EvtSyncEntityPositionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtSyncEntityPositionInfo& default_instance();

  static inline const EvtSyncEntityPositionInfo* internal_default_instance() {
    return reinterpret_cast<const EvtSyncEntityPositionInfo*>(
               &_EvtSyncEntityPositionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(EvtSyncEntityPositionInfo* other);
  friend void swap(EvtSyncEntityPositionInfo& a, EvtSyncEntityPositionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtSyncEntityPositionInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtSyncEntityPositionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtSyncEntityPositionInfo& from);
  void MergeFrom(const EvtSyncEntityPositionInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtSyncEntityPositionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 15;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 15;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // int32 face_angle_compact = 7;
  void clear_face_angle_compact();
  static const int kFaceAngleCompactFieldNumber = 7;
  ::google::protobuf::int32 face_angle_compact() const;
  void set_face_angle_compact(::google::protobuf::int32 value);

  // uint32 state_hash = 8;
  void clear_state_hash();
  static const int kStateHashFieldNumber = 8;
  ::google::protobuf::uint32 state_hash() const;
  void set_state_hash(::google::protobuf::uint32 value);

  // uint32 entity_id = 10;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 10;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 normalized_time_compact = 13;
  void clear_normalized_time_compact();
  static const int kNormalizedTimeCompactFieldNumber = 13;
  ::google::protobuf::uint32 normalized_time_compact() const;
  void set_normalized_time_compact(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtSyncEntityPositionInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::google::protobuf::int32 face_angle_compact_;
  ::google::protobuf::uint32 state_hash_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 normalized_time_compact_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtRushMoveNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtRushMoveNotify) */ {
 public:
  EvtRushMoveNotify();
  virtual ~EvtRushMoveNotify();

  EvtRushMoveNotify(const EvtRushMoveNotify& from);

  inline EvtRushMoveNotify& operator=(const EvtRushMoveNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtRushMoveNotify(EvtRushMoveNotify&& from) noexcept
    : EvtRushMoveNotify() {
    *this = ::std::move(from);
  }

  inline EvtRushMoveNotify& operator=(EvtRushMoveNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtRushMoveNotify& default_instance();

  static inline const EvtRushMoveNotify* internal_default_instance() {
    return reinterpret_cast<const EvtRushMoveNotify*>(
               &_EvtRushMoveNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(EvtRushMoveNotify* other);
  friend void swap(EvtRushMoveNotify& a, EvtRushMoveNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtRushMoveNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtRushMoveNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtRushMoveNotify& from);
  void MergeFrom(const EvtRushMoveNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtRushMoveNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtRushMoveNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtRushMoveNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtRushMoveNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtRushMoveNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtRushMoveNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtRushMoveNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtRushMoveNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtRushMoveNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtRushMoveNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtRushMoveNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtRushMoveNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtRushMoveNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtRushMoveNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.EvtRushMoveInfo evt_rush_move_info = 15;
  bool has_evt_rush_move_info() const;
  void clear_evt_rush_move_info();
  static const int kEvtRushMoveInfoFieldNumber = 15;
  const ::proto::EvtRushMoveInfo& evt_rush_move_info() const;
  ::proto::EvtRushMoveInfo* mutable_evt_rush_move_info();
  ::proto::EvtRushMoveInfo* release_evt_rush_move_info();
  void set_allocated_evt_rush_move_info(::proto::EvtRushMoveInfo* evt_rush_move_info);

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // @@protoc_insertion_point(class_scope:proto.EvtRushMoveNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::EvtRushMoveInfo* evt_rush_move_info_;
  int forward_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtBulletHitNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtBulletHitNotify) */ {
 public:
  EvtBulletHitNotify();
  virtual ~EvtBulletHitNotify();

  EvtBulletHitNotify(const EvtBulletHitNotify& from);

  inline EvtBulletHitNotify& operator=(const EvtBulletHitNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtBulletHitNotify(EvtBulletHitNotify&& from) noexcept
    : EvtBulletHitNotify() {
    *this = ::std::move(from);
  }

  inline EvtBulletHitNotify& operator=(EvtBulletHitNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtBulletHitNotify& default_instance();

  static inline const EvtBulletHitNotify* internal_default_instance() {
    return reinterpret_cast<const EvtBulletHitNotify*>(
               &_EvtBulletHitNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(EvtBulletHitNotify* other);
  friend void swap(EvtBulletHitNotify& a, EvtBulletHitNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtBulletHitNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtBulletHitNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtBulletHitNotify& from);
  void MergeFrom(const EvtBulletHitNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtBulletHitNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtBulletHitNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtBulletHitNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtBulletHitNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtBulletHitNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtBulletHitNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtBulletHitNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtBulletHitNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtBulletHitNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtBulletHitNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtBulletHitNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtBulletHitNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtBulletHitNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtBulletHitNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector hit_normal = 11;
  bool has_hit_normal() const;
  void clear_hit_normal();
  static const int kHitNormalFieldNumber = 11;
  const ::proto::Vector& hit_normal() const;
  ::proto::Vector* mutable_hit_normal();
  ::proto::Vector* release_hit_normal();
  void set_allocated_hit_normal(::proto::Vector* hit_normal);

  // .proto.Vector hit_point = 15;
  bool has_hit_point() const;
  void clear_hit_point();
  static const int kHitPointFieldNumber = 15;
  const ::proto::Vector& hit_point() const;
  ::proto::Vector* mutable_hit_point();
  ::proto::Vector* release_hit_point();
  void set_allocated_hit_point(::proto::Vector* hit_point);

  // .proto.ForwardType forward_type = 2;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 2;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // uint32 hit_entity_id = 3;
  void clear_hit_entity_id();
  static const int kHitEntityIdFieldNumber = 3;
  ::google::protobuf::uint32 hit_entity_id() const;
  void set_hit_entity_id(::google::protobuf::uint32 value);

  // uint32 entity_id = 5;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 5;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // .proto.HitColliderType hit_collider_type = 6;
  void clear_hit_collider_type();
  static const int kHitColliderTypeFieldNumber = 6;
  ::proto::HitColliderType hit_collider_type() const;
  void set_hit_collider_type(::proto::HitColliderType value);

  // uint32 forward_peer = 7;
  void clear_forward_peer();
  static const int kForwardPeerFieldNumber = 7;
  ::google::protobuf::uint32 forward_peer() const;
  void set_forward_peer(::google::protobuf::uint32 value);

  // uint32 single_bullet_id = 8;
  void clear_single_bullet_id();
  static const int kSingleBulletIdFieldNumber = 8;
  ::google::protobuf::uint32 single_bullet_id() const;
  void set_single_bullet_id(::google::protobuf::uint32 value);

  // int32 hit_box_index = 9;
  void clear_hit_box_index();
  static const int kHitBoxIndexFieldNumber = 9;
  ::google::protobuf::int32 hit_box_index() const;
  void set_hit_box_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtBulletHitNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* hit_normal_;
  ::proto::Vector* hit_point_;
  int forward_type_;
  ::google::protobuf::uint32 hit_entity_id_;
  ::google::protobuf::uint32 entity_id_;
  int hit_collider_type_;
  ::google::protobuf::uint32 forward_peer_;
  ::google::protobuf::uint32 single_bullet_id_;
  ::google::protobuf::int32 hit_box_index_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtBulletDeactiveNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtBulletDeactiveNotify) */ {
 public:
  EvtBulletDeactiveNotify();
  virtual ~EvtBulletDeactiveNotify();

  EvtBulletDeactiveNotify(const EvtBulletDeactiveNotify& from);

  inline EvtBulletDeactiveNotify& operator=(const EvtBulletDeactiveNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtBulletDeactiveNotify(EvtBulletDeactiveNotify&& from) noexcept
    : EvtBulletDeactiveNotify() {
    *this = ::std::move(from);
  }

  inline EvtBulletDeactiveNotify& operator=(EvtBulletDeactiveNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtBulletDeactiveNotify& default_instance();

  static inline const EvtBulletDeactiveNotify* internal_default_instance() {
    return reinterpret_cast<const EvtBulletDeactiveNotify*>(
               &_EvtBulletDeactiveNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(EvtBulletDeactiveNotify* other);
  friend void swap(EvtBulletDeactiveNotify& a, EvtBulletDeactiveNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtBulletDeactiveNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtBulletDeactiveNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtBulletDeactiveNotify& from);
  void MergeFrom(const EvtBulletDeactiveNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtBulletDeactiveNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtBulletDeactiveNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtBulletDeactiveNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtBulletDeactiveNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtBulletDeactiveNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtBulletDeactiveNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtBulletDeactiveNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtBulletDeactiveNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtBulletDeactiveNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtBulletDeactiveNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtBulletDeactiveNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtBulletDeactiveNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtBulletDeactiveNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtBulletDeactiveNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector disappear_pos = 4;
  bool has_disappear_pos() const;
  void clear_disappear_pos();
  static const int kDisappearPosFieldNumber = 4;
  const ::proto::Vector& disappear_pos() const;
  ::proto::Vector* mutable_disappear_pos();
  ::proto::Vector* release_disappear_pos();
  void set_allocated_disappear_pos(::proto::Vector* disappear_pos);

  // .proto.ForwardType forward_type = 6;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 6;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // uint32 entity_id = 9;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 9;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtBulletDeactiveNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* disappear_pos_;
  int forward_type_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtEntityStartDieEndNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtEntityStartDieEndNotify) */ {
 public:
  EvtEntityStartDieEndNotify();
  virtual ~EvtEntityStartDieEndNotify();

  EvtEntityStartDieEndNotify(const EvtEntityStartDieEndNotify& from);

  inline EvtEntityStartDieEndNotify& operator=(const EvtEntityStartDieEndNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtEntityStartDieEndNotify(EvtEntityStartDieEndNotify&& from) noexcept
    : EvtEntityStartDieEndNotify() {
    *this = ::std::move(from);
  }

  inline EvtEntityStartDieEndNotify& operator=(EvtEntityStartDieEndNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtEntityStartDieEndNotify& default_instance();

  static inline const EvtEntityStartDieEndNotify* internal_default_instance() {
    return reinterpret_cast<const EvtEntityStartDieEndNotify*>(
               &_EvtEntityStartDieEndNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(EvtEntityStartDieEndNotify* other);
  friend void swap(EvtEntityStartDieEndNotify& a, EvtEntityStartDieEndNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtEntityStartDieEndNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtEntityStartDieEndNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtEntityStartDieEndNotify& from);
  void MergeFrom(const EvtEntityStartDieEndNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtEntityStartDieEndNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtEntityStartDieEndNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtEntityStartDieEndNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtEntityStartDieEndNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtEntityStartDieEndNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtEntityStartDieEndNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtEntityStartDieEndNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtEntityStartDieEndNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtEntityStartDieEndNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtEntityStartDieEndNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtEntityStartDieEndNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtEntityStartDieEndNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtEntityStartDieEndNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtEntityStartDieEndNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 entity_id = 8;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 8;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // .proto.ForwardType forward_type = 11;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 11;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // uint32 die_state_flag = 12;
  void clear_die_state_flag();
  static const int kDieStateFlagFieldNumber = 12;
  ::google::protobuf::uint32 die_state_flag() const;
  void set_die_state_flag(::google::protobuf::uint32 value);

  // bool immediately = 15;
  void clear_immediately();
  static const int kImmediatelyFieldNumber = 15;
  bool immediately() const;
  void set_immediately(bool value);

  // @@protoc_insertion_point(class_scope:proto.EvtEntityStartDieEndNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  int forward_type_;
  ::google::protobuf::uint32 die_state_flag_;
  bool immediately_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtBulletMoveNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtBulletMoveNotify) */ {
 public:
  EvtBulletMoveNotify();
  virtual ~EvtBulletMoveNotify();

  EvtBulletMoveNotify(const EvtBulletMoveNotify& from);

  inline EvtBulletMoveNotify& operator=(const EvtBulletMoveNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtBulletMoveNotify(EvtBulletMoveNotify&& from) noexcept
    : EvtBulletMoveNotify() {
    *this = ::std::move(from);
  }

  inline EvtBulletMoveNotify& operator=(EvtBulletMoveNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtBulletMoveNotify& default_instance();

  static inline const EvtBulletMoveNotify* internal_default_instance() {
    return reinterpret_cast<const EvtBulletMoveNotify*>(
               &_EvtBulletMoveNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(EvtBulletMoveNotify* other);
  friend void swap(EvtBulletMoveNotify& a, EvtBulletMoveNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtBulletMoveNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtBulletMoveNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtBulletMoveNotify& from);
  void MergeFrom(const EvtBulletMoveNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtBulletMoveNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtBulletMoveNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtBulletMoveNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtBulletMoveNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtBulletMoveNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtBulletMoveNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtBulletMoveNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtBulletMoveNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtBulletMoveNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtBulletMoveNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtBulletMoveNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtBulletMoveNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtBulletMoveNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtBulletMoveNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector cur_pos = 1;
  bool has_cur_pos() const;
  void clear_cur_pos();
  static const int kCurPosFieldNumber = 1;
  const ::proto::Vector& cur_pos() const;
  ::proto::Vector* mutable_cur_pos();
  ::proto::Vector* release_cur_pos();
  void set_allocated_cur_pos(::proto::Vector* cur_pos);

  // uint32 entity_id = 11;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 11;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // .proto.ForwardType forward_type = 14;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 14;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // @@protoc_insertion_point(class_scope:proto.EvtBulletMoveNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* cur_pos_;
  ::google::protobuf::uint32 entity_id_;
  int forward_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtAvatarEnterFocusNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAvatarEnterFocusNotify) */ {
 public:
  EvtAvatarEnterFocusNotify();
  virtual ~EvtAvatarEnterFocusNotify();

  EvtAvatarEnterFocusNotify(const EvtAvatarEnterFocusNotify& from);

  inline EvtAvatarEnterFocusNotify& operator=(const EvtAvatarEnterFocusNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAvatarEnterFocusNotify(EvtAvatarEnterFocusNotify&& from) noexcept
    : EvtAvatarEnterFocusNotify() {
    *this = ::std::move(from);
  }

  inline EvtAvatarEnterFocusNotify& operator=(EvtAvatarEnterFocusNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAvatarEnterFocusNotify& default_instance();

  static inline const EvtAvatarEnterFocusNotify* internal_default_instance() {
    return reinterpret_cast<const EvtAvatarEnterFocusNotify*>(
               &_EvtAvatarEnterFocusNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(EvtAvatarEnterFocusNotify* other);
  friend void swap(EvtAvatarEnterFocusNotify& a, EvtAvatarEnterFocusNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAvatarEnterFocusNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAvatarEnterFocusNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAvatarEnterFocusNotify& from);
  void MergeFrom(const EvtAvatarEnterFocusNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAvatarEnterFocusNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtAvatarEnterFocusNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtAvatarEnterFocusNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtAvatarEnterFocusNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtAvatarEnterFocusNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtAvatarEnterFocusNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtAvatarEnterFocusNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtAvatarEnterFocusNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtAvatarEnterFocusNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtAvatarEnterFocusNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtAvatarEnterFocusNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtAvatarEnterFocusNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtAvatarEnterFocusNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtAvatarEnterFocusNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector focus_forward = 7;
  bool has_focus_forward() const;
  void clear_focus_forward();
  static const int kFocusForwardFieldNumber = 7;
  const ::proto::Vector& focus_forward() const;
  ::proto::Vector* mutable_focus_forward();
  ::proto::Vector* release_focus_forward();
  void set_allocated_focus_forward(::proto::Vector* focus_forward);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // .proto.ForwardType forward_type = 8;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 8;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // bool can_move = 10;
  void clear_can_move();
  static const int kCanMoveFieldNumber = 10;
  bool can_move() const;
  void set_can_move(bool value);

  // bool enter_holding_focus_shoot = 13;
  void clear_enter_holding_focus_shoot();
  static const int kEnterHoldingFocusShootFieldNumber = 13;
  bool enter_holding_focus_shoot() const;
  void set_enter_holding_focus_shoot(bool value);

  // bool disable_aim_layer = 6;
  void clear_disable_aim_layer();
  static const int kDisableAimLayerFieldNumber = 6;
  bool disable_aim_layer() const;
  void set_disable_aim_layer(bool value);

  // bool use_auto_focus = 5;
  void clear_use_auto_focus();
  static const int kUseAutoFocusFieldNumber = 5;
  bool use_auto_focus() const;
  void set_use_auto_focus(bool value);

  // bool fast_focus = 3;
  void clear_fast_focus();
  static const int kFastFocusFieldNumber = 3;
  bool fast_focus() const;
  void set_fast_focus(bool value);

  // bool show_cross_hair = 12;
  void clear_show_cross_hair();
  static const int kShowCrossHairFieldNumber = 12;
  bool show_cross_hair() const;
  void set_show_cross_hair(bool value);

  // bool enter_normal_focus_shoot = 14;
  void clear_enter_normal_focus_shoot();
  static const int kEnterNormalFocusShootFieldNumber = 14;
  bool enter_normal_focus_shoot() const;
  void set_enter_normal_focus_shoot(bool value);

  // bool disable_anim = 9;
  void clear_disable_anim();
  static const int kDisableAnimFieldNumber = 9;
  bool disable_anim() const;
  void set_disable_anim(bool value);

  // bool use_focus_sticky = 15;
  void clear_use_focus_sticky();
  static const int kUseFocusStickyFieldNumber = 15;
  bool use_focus_sticky() const;
  void set_use_focus_sticky(bool value);

  // bool use_gyro = 11;
  void clear_use_gyro();
  static const int kUseGyroFieldNumber = 11;
  bool use_gyro() const;
  void set_use_gyro(bool value);

  // @@protoc_insertion_point(class_scope:proto.EvtAvatarEnterFocusNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* focus_forward_;
  ::google::protobuf::uint32 entity_id_;
  int forward_type_;
  bool can_move_;
  bool enter_holding_focus_shoot_;
  bool disable_aim_layer_;
  bool use_auto_focus_;
  bool fast_focus_;
  bool show_cross_hair_;
  bool enter_normal_focus_shoot_;
  bool disable_anim_;
  bool use_focus_sticky_;
  bool use_gyro_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtAvatarExitFocusNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAvatarExitFocusNotify) */ {
 public:
  EvtAvatarExitFocusNotify();
  virtual ~EvtAvatarExitFocusNotify();

  EvtAvatarExitFocusNotify(const EvtAvatarExitFocusNotify& from);

  inline EvtAvatarExitFocusNotify& operator=(const EvtAvatarExitFocusNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAvatarExitFocusNotify(EvtAvatarExitFocusNotify&& from) noexcept
    : EvtAvatarExitFocusNotify() {
    *this = ::std::move(from);
  }

  inline EvtAvatarExitFocusNotify& operator=(EvtAvatarExitFocusNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAvatarExitFocusNotify& default_instance();

  static inline const EvtAvatarExitFocusNotify* internal_default_instance() {
    return reinterpret_cast<const EvtAvatarExitFocusNotify*>(
               &_EvtAvatarExitFocusNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(EvtAvatarExitFocusNotify* other);
  friend void swap(EvtAvatarExitFocusNotify& a, EvtAvatarExitFocusNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAvatarExitFocusNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAvatarExitFocusNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAvatarExitFocusNotify& from);
  void MergeFrom(const EvtAvatarExitFocusNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAvatarExitFocusNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtAvatarExitFocusNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtAvatarExitFocusNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtAvatarExitFocusNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtAvatarExitFocusNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtAvatarExitFocusNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtAvatarExitFocusNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtAvatarExitFocusNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtAvatarExitFocusNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtAvatarExitFocusNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtAvatarExitFocusNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtAvatarExitFocusNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtAvatarExitFocusNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtAvatarExitFocusNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector finish_forward = 12;
  bool has_finish_forward() const;
  void clear_finish_forward();
  static const int kFinishForwardFieldNumber = 12;
  const ::proto::Vector& finish_forward() const;
  ::proto::Vector* mutable_finish_forward();
  ::proto::Vector* release_finish_forward();
  void set_allocated_finish_forward(::proto::Vector* finish_forward);

  // .proto.ForwardType forward_type = 11;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 11;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // uint32 entity_id = 14;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 14;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtAvatarExitFocusNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* finish_forward_;
  int forward_type_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtAvatarUpdateFocusNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAvatarUpdateFocusNotify) */ {
 public:
  EvtAvatarUpdateFocusNotify();
  virtual ~EvtAvatarUpdateFocusNotify();

  EvtAvatarUpdateFocusNotify(const EvtAvatarUpdateFocusNotify& from);

  inline EvtAvatarUpdateFocusNotify& operator=(const EvtAvatarUpdateFocusNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAvatarUpdateFocusNotify(EvtAvatarUpdateFocusNotify&& from) noexcept
    : EvtAvatarUpdateFocusNotify() {
    *this = ::std::move(from);
  }

  inline EvtAvatarUpdateFocusNotify& operator=(EvtAvatarUpdateFocusNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAvatarUpdateFocusNotify& default_instance();

  static inline const EvtAvatarUpdateFocusNotify* internal_default_instance() {
    return reinterpret_cast<const EvtAvatarUpdateFocusNotify*>(
               &_EvtAvatarUpdateFocusNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(EvtAvatarUpdateFocusNotify* other);
  friend void swap(EvtAvatarUpdateFocusNotify& a, EvtAvatarUpdateFocusNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAvatarUpdateFocusNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAvatarUpdateFocusNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAvatarUpdateFocusNotify& from);
  void MergeFrom(const EvtAvatarUpdateFocusNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAvatarUpdateFocusNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtAvatarUpdateFocusNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtAvatarUpdateFocusNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtAvatarUpdateFocusNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtAvatarUpdateFocusNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtAvatarUpdateFocusNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtAvatarUpdateFocusNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtAvatarUpdateFocusNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtAvatarUpdateFocusNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtAvatarUpdateFocusNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtAvatarUpdateFocusNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtAvatarUpdateFocusNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtAvatarUpdateFocusNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtAvatarUpdateFocusNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector focus_forward = 11;
  bool has_focus_forward() const;
  void clear_focus_forward();
  static const int kFocusForwardFieldNumber = 11;
  const ::proto::Vector& focus_forward() const;
  ::proto::Vector* mutable_focus_forward();
  ::proto::Vector* release_focus_forward();
  void set_allocated_focus_forward(::proto::Vector* focus_forward);

  // .proto.ForwardType forward_type = 7;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 7;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // uint32 entity_id = 10;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 10;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtAvatarUpdateFocusNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* focus_forward_;
  int forward_type_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuthorityChange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AuthorityChange) */ {
 public:
  AuthorityChange();
  virtual ~AuthorityChange();

  AuthorityChange(const AuthorityChange& from);

  inline AuthorityChange& operator=(const AuthorityChange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthorityChange(AuthorityChange&& from) noexcept
    : AuthorityChange() {
    *this = ::std::move(from);
  }

  inline AuthorityChange& operator=(AuthorityChange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthorityChange& default_instance();

  static inline const AuthorityChange* internal_default_instance() {
    return reinterpret_cast<const AuthorityChange*>(
               &_AuthorityChange_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(AuthorityChange* other);
  friend void swap(AuthorityChange& a, AuthorityChange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthorityChange* New() const PROTOBUF_FINAL { return New(NULL); }

  AuthorityChange* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AuthorityChange& from);
  void MergeFrom(const AuthorityChange& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AuthorityChange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.EntityAuthorityInfo entity_authority_info = 5;
  bool has_entity_authority_info() const;
  void clear_entity_authority_info();
  static const int kEntityAuthorityInfoFieldNumber = 5;
  const ::proto::EntityAuthorityInfo& entity_authority_info() const;
  ::proto::EntityAuthorityInfo* mutable_entity_authority_info();
  ::proto::EntityAuthorityInfo* release_entity_authority_info();
  void set_allocated_entity_authority_info(::proto::EntityAuthorityInfo* entity_authority_info);

  // uint32 authority_peer_id = 3;
  void clear_authority_peer_id();
  static const int kAuthorityPeerIdFieldNumber = 3;
  ::google::protobuf::uint32 authority_peer_id() const;
  void set_authority_peer_id(::google::protobuf::uint32 value);

  // uint32 entity_id = 13;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 13;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AuthorityChange)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::EntityAuthorityInfo* entity_authority_info_;
  ::google::protobuf::uint32 authority_peer_id_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityAuthorityChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityAuthorityChangeNotify) */ {
 public:
  EntityAuthorityChangeNotify();
  virtual ~EntityAuthorityChangeNotify();

  EntityAuthorityChangeNotify(const EntityAuthorityChangeNotify& from);

  inline EntityAuthorityChangeNotify& operator=(const EntityAuthorityChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityAuthorityChangeNotify(EntityAuthorityChangeNotify&& from) noexcept
    : EntityAuthorityChangeNotify() {
    *this = ::std::move(from);
  }

  inline EntityAuthorityChangeNotify& operator=(EntityAuthorityChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityAuthorityChangeNotify& default_instance();

  static inline const EntityAuthorityChangeNotify* internal_default_instance() {
    return reinterpret_cast<const EntityAuthorityChangeNotify*>(
               &_EntityAuthorityChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(EntityAuthorityChangeNotify* other);
  friend void swap(EntityAuthorityChangeNotify& a, EntityAuthorityChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityAuthorityChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityAuthorityChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityAuthorityChangeNotify& from);
  void MergeFrom(const EntityAuthorityChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityAuthorityChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EntityAuthorityChangeNotify_CmdId CmdId;
  static const CmdId NONE =
    EntityAuthorityChangeNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EntityAuthorityChangeNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EntityAuthorityChangeNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EntityAuthorityChangeNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return EntityAuthorityChangeNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EntityAuthorityChangeNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EntityAuthorityChangeNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EntityAuthorityChangeNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EntityAuthorityChangeNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EntityAuthorityChangeNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EntityAuthorityChangeNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.AuthorityChange authority_change_list = 15;
  int authority_change_list_size() const;
  void clear_authority_change_list();
  static const int kAuthorityChangeListFieldNumber = 15;
  const ::proto::AuthorityChange& authority_change_list(int index) const;
  ::proto::AuthorityChange* mutable_authority_change_list(int index);
  ::proto::AuthorityChange* add_authority_change_list();
  ::google::protobuf::RepeatedPtrField< ::proto::AuthorityChange >*
      mutable_authority_change_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::AuthorityChange >&
      authority_change_list() const;

  // @@protoc_insertion_point(class_scope:proto.EntityAuthorityChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::AuthorityChange > authority_change_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarBuffAddNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarBuffAddNotify) */ {
 public:
  AvatarBuffAddNotify();
  virtual ~AvatarBuffAddNotify();

  AvatarBuffAddNotify(const AvatarBuffAddNotify& from);

  inline AvatarBuffAddNotify& operator=(const AvatarBuffAddNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarBuffAddNotify(AvatarBuffAddNotify&& from) noexcept
    : AvatarBuffAddNotify() {
    *this = ::std::move(from);
  }

  inline AvatarBuffAddNotify& operator=(AvatarBuffAddNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarBuffAddNotify& default_instance();

  static inline const AvatarBuffAddNotify* internal_default_instance() {
    return reinterpret_cast<const AvatarBuffAddNotify*>(
               &_AvatarBuffAddNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(AvatarBuffAddNotify* other);
  friend void swap(AvatarBuffAddNotify& a, AvatarBuffAddNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarBuffAddNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarBuffAddNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarBuffAddNotify& from);
  void MergeFrom(const AvatarBuffAddNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarBuffAddNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AvatarBuffAddNotify_CmdId CmdId;
  static const CmdId NONE =
    AvatarBuffAddNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarBuffAddNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarBuffAddNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarBuffAddNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AvatarBuffAddNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AvatarBuffAddNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarBuffAddNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarBuffAddNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarBuffAddNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarBuffAddNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarBuffAddNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarBuffAddNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 buff_id = 6;
  void clear_buff_id();
  static const int kBuffIdFieldNumber = 6;
  ::google::protobuf::uint32 buff_id() const;
  void set_buff_id(::google::protobuf::uint32 value);

  // uint64 avatar_guid = 10;
  void clear_avatar_guid();
  static const int kAvatarGuidFieldNumber = 10;
  ::google::protobuf::uint64 avatar_guid() const;
  void set_avatar_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarBuffAddNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 buff_id_;
  ::google::protobuf::uint64 avatar_guid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarBuffDelNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarBuffDelNotify) */ {
 public:
  AvatarBuffDelNotify();
  virtual ~AvatarBuffDelNotify();

  AvatarBuffDelNotify(const AvatarBuffDelNotify& from);

  inline AvatarBuffDelNotify& operator=(const AvatarBuffDelNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarBuffDelNotify(AvatarBuffDelNotify&& from) noexcept
    : AvatarBuffDelNotify() {
    *this = ::std::move(from);
  }

  inline AvatarBuffDelNotify& operator=(AvatarBuffDelNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarBuffDelNotify& default_instance();

  static inline const AvatarBuffDelNotify* internal_default_instance() {
    return reinterpret_cast<const AvatarBuffDelNotify*>(
               &_AvatarBuffDelNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(AvatarBuffDelNotify* other);
  friend void swap(AvatarBuffDelNotify& a, AvatarBuffDelNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarBuffDelNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarBuffDelNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarBuffDelNotify& from);
  void MergeFrom(const AvatarBuffDelNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarBuffDelNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AvatarBuffDelNotify_CmdId CmdId;
  static const CmdId NONE =
    AvatarBuffDelNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarBuffDelNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarBuffDelNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarBuffDelNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AvatarBuffDelNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AvatarBuffDelNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarBuffDelNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarBuffDelNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarBuffDelNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarBuffDelNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarBuffDelNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarBuffDelNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 buff_id = 12;
  void clear_buff_id();
  static const int kBuffIdFieldNumber = 12;
  ::google::protobuf::uint32 buff_id() const;
  void set_buff_id(::google::protobuf::uint32 value);

  // uint64 avatar_guid = 10;
  void clear_avatar_guid();
  static const int kAvatarGuidFieldNumber = 10;
  ::google::protobuf::uint64 avatar_guid() const;
  void set_avatar_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarBuffDelNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 buff_id_;
  ::google::protobuf::uint64 avatar_guid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MonsterAlertChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MonsterAlertChangeNotify) */ {
 public:
  MonsterAlertChangeNotify();
  virtual ~MonsterAlertChangeNotify();

  MonsterAlertChangeNotify(const MonsterAlertChangeNotify& from);

  inline MonsterAlertChangeNotify& operator=(const MonsterAlertChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MonsterAlertChangeNotify(MonsterAlertChangeNotify&& from) noexcept
    : MonsterAlertChangeNotify() {
    *this = ::std::move(from);
  }

  inline MonsterAlertChangeNotify& operator=(MonsterAlertChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MonsterAlertChangeNotify& default_instance();

  static inline const MonsterAlertChangeNotify* internal_default_instance() {
    return reinterpret_cast<const MonsterAlertChangeNotify*>(
               &_MonsterAlertChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(MonsterAlertChangeNotify* other);
  friend void swap(MonsterAlertChangeNotify& a, MonsterAlertChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MonsterAlertChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MonsterAlertChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MonsterAlertChangeNotify& from);
  void MergeFrom(const MonsterAlertChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MonsterAlertChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MonsterAlertChangeNotify_CmdId CmdId;
  static const CmdId NONE =
    MonsterAlertChangeNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    MonsterAlertChangeNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    MonsterAlertChangeNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    MonsterAlertChangeNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    MonsterAlertChangeNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return MonsterAlertChangeNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    MonsterAlertChangeNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    MonsterAlertChangeNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    MonsterAlertChangeNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return MonsterAlertChangeNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return MonsterAlertChangeNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return MonsterAlertChangeNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 monster_entity_list = 5;
  int monster_entity_list_size() const;
  void clear_monster_entity_list();
  static const int kMonsterEntityListFieldNumber = 5;
  ::google::protobuf::uint32 monster_entity_list(int index) const;
  void set_monster_entity_list(int index, ::google::protobuf::uint32 value);
  void add_monster_entity_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      monster_entity_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_monster_entity_list();

  // uint32 is_alert = 13;
  void clear_is_alert();
  static const int kIsAlertFieldNumber = 13;
  ::google::protobuf::uint32 is_alert() const;
  void set_is_alert(::google::protobuf::uint32 value);

  // uint32 avatar_entity_id = 15;
  void clear_avatar_entity_id();
  static const int kAvatarEntityIdFieldNumber = 15;
  ::google::protobuf::uint32 avatar_entity_id() const;
  void set_avatar_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MonsterAlertChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > monster_entity_list_;
  mutable int _monster_entity_list_cached_byte_size_;
  ::google::protobuf::uint32 is_alert_;
  ::google::protobuf::uint32 avatar_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MonsterForceAlertNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MonsterForceAlertNotify) */ {
 public:
  MonsterForceAlertNotify();
  virtual ~MonsterForceAlertNotify();

  MonsterForceAlertNotify(const MonsterForceAlertNotify& from);

  inline MonsterForceAlertNotify& operator=(const MonsterForceAlertNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MonsterForceAlertNotify(MonsterForceAlertNotify&& from) noexcept
    : MonsterForceAlertNotify() {
    *this = ::std::move(from);
  }

  inline MonsterForceAlertNotify& operator=(MonsterForceAlertNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MonsterForceAlertNotify& default_instance();

  static inline const MonsterForceAlertNotify* internal_default_instance() {
    return reinterpret_cast<const MonsterForceAlertNotify*>(
               &_MonsterForceAlertNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(MonsterForceAlertNotify* other);
  friend void swap(MonsterForceAlertNotify& a, MonsterForceAlertNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MonsterForceAlertNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MonsterForceAlertNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MonsterForceAlertNotify& from);
  void MergeFrom(const MonsterForceAlertNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MonsterForceAlertNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MonsterForceAlertNotify_CmdId CmdId;
  static const CmdId NONE =
    MonsterForceAlertNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    MonsterForceAlertNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    MonsterForceAlertNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    MonsterForceAlertNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return MonsterForceAlertNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    MonsterForceAlertNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    MonsterForceAlertNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    MonsterForceAlertNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return MonsterForceAlertNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return MonsterForceAlertNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return MonsterForceAlertNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 monster_entity_id = 13;
  void clear_monster_entity_id();
  static const int kMonsterEntityIdFieldNumber = 13;
  ::google::protobuf::uint32 monster_entity_id() const;
  void set_monster_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MonsterForceAlertNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 monster_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarEnterElementViewNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarEnterElementViewNotify) */ {
 public:
  AvatarEnterElementViewNotify();
  virtual ~AvatarEnterElementViewNotify();

  AvatarEnterElementViewNotify(const AvatarEnterElementViewNotify& from);

  inline AvatarEnterElementViewNotify& operator=(const AvatarEnterElementViewNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarEnterElementViewNotify(AvatarEnterElementViewNotify&& from) noexcept
    : AvatarEnterElementViewNotify() {
    *this = ::std::move(from);
  }

  inline AvatarEnterElementViewNotify& operator=(AvatarEnterElementViewNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarEnterElementViewNotify& default_instance();

  static inline const AvatarEnterElementViewNotify* internal_default_instance() {
    return reinterpret_cast<const AvatarEnterElementViewNotify*>(
               &_AvatarEnterElementViewNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(AvatarEnterElementViewNotify* other);
  friend void swap(AvatarEnterElementViewNotify& a, AvatarEnterElementViewNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarEnterElementViewNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarEnterElementViewNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarEnterElementViewNotify& from);
  void MergeFrom(const AvatarEnterElementViewNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarEnterElementViewNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AvatarEnterElementViewNotify_CmdId CmdId;
  static const CmdId NONE =
    AvatarEnterElementViewNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarEnterElementViewNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarEnterElementViewNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarEnterElementViewNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AvatarEnterElementViewNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AvatarEnterElementViewNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarEnterElementViewNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarEnterElementViewNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarEnterElementViewNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarEnterElementViewNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarEnterElementViewNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarEnterElementViewNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bool is_triggerd = 3;
  void clear_is_triggerd();
  static const int kIsTriggerdFieldNumber = 3;
  bool is_triggerd() const;
  void set_is_triggerd(bool value);

  // uint32 avatar_entity_id = 12;
  void clear_avatar_entity_id();
  static const int kAvatarEntityIdFieldNumber = 12;
  ::google::protobuf::uint32 avatar_entity_id() const;
  void set_avatar_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarEnterElementViewNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_triggerd_;
  ::google::protobuf::uint32 avatar_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TriggerCreateGadgetToEquipPartNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TriggerCreateGadgetToEquipPartNotify) */ {
 public:
  TriggerCreateGadgetToEquipPartNotify();
  virtual ~TriggerCreateGadgetToEquipPartNotify();

  TriggerCreateGadgetToEquipPartNotify(const TriggerCreateGadgetToEquipPartNotify& from);

  inline TriggerCreateGadgetToEquipPartNotify& operator=(const TriggerCreateGadgetToEquipPartNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TriggerCreateGadgetToEquipPartNotify(TriggerCreateGadgetToEquipPartNotify&& from) noexcept
    : TriggerCreateGadgetToEquipPartNotify() {
    *this = ::std::move(from);
  }

  inline TriggerCreateGadgetToEquipPartNotify& operator=(TriggerCreateGadgetToEquipPartNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TriggerCreateGadgetToEquipPartNotify& default_instance();

  static inline const TriggerCreateGadgetToEquipPartNotify* internal_default_instance() {
    return reinterpret_cast<const TriggerCreateGadgetToEquipPartNotify*>(
               &_TriggerCreateGadgetToEquipPartNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(TriggerCreateGadgetToEquipPartNotify* other);
  friend void swap(TriggerCreateGadgetToEquipPartNotify& a, TriggerCreateGadgetToEquipPartNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TriggerCreateGadgetToEquipPartNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  TriggerCreateGadgetToEquipPartNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TriggerCreateGadgetToEquipPartNotify& from);
  void MergeFrom(const TriggerCreateGadgetToEquipPartNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TriggerCreateGadgetToEquipPartNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TriggerCreateGadgetToEquipPartNotify_CmdId CmdId;
  static const CmdId NONE =
    TriggerCreateGadgetToEquipPartNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    TriggerCreateGadgetToEquipPartNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    TriggerCreateGadgetToEquipPartNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    TriggerCreateGadgetToEquipPartNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return TriggerCreateGadgetToEquipPartNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    TriggerCreateGadgetToEquipPartNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    TriggerCreateGadgetToEquipPartNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    TriggerCreateGadgetToEquipPartNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return TriggerCreateGadgetToEquipPartNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return TriggerCreateGadgetToEquipPartNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return TriggerCreateGadgetToEquipPartNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string equip_part = 14;
  void clear_equip_part();
  static const int kEquipPartFieldNumber = 14;
  const ::std::string& equip_part() const;
  void set_equip_part(const ::std::string& value);
  #if LANG_CXX11
  void set_equip_part(::std::string&& value);
  #endif
  void set_equip_part(const char* value);
  void set_equip_part(const char* value, size_t size);
  ::std::string* mutable_equip_part();
  ::std::string* release_equip_part();
  void set_allocated_equip_part(::std::string* equip_part);

  // uint32 entity_id = 13;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 13;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 gadget_id = 1;
  void clear_gadget_id();
  static const int kGadgetIdFieldNumber = 1;
  ::google::protobuf::uint32 gadget_id() const;
  void set_gadget_id(::google::protobuf::uint32 value);

  // uint32 gadget_entity_id = 10;
  void clear_gadget_entity_id();
  static const int kGadgetEntityIdFieldNumber = 10;
  ::google::protobuf::uint32 gadget_entity_id() const;
  void set_gadget_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TriggerCreateGadgetToEquipPartNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr equip_part_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 gadget_id_;
  ::google::protobuf::uint32 gadget_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtEntityRenderersChangedNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtEntityRenderersChangedNotify) */ {
 public:
  EvtEntityRenderersChangedNotify();
  virtual ~EvtEntityRenderersChangedNotify();

  EvtEntityRenderersChangedNotify(const EvtEntityRenderersChangedNotify& from);

  inline EvtEntityRenderersChangedNotify& operator=(const EvtEntityRenderersChangedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtEntityRenderersChangedNotify(EvtEntityRenderersChangedNotify&& from) noexcept
    : EvtEntityRenderersChangedNotify() {
    *this = ::std::move(from);
  }

  inline EvtEntityRenderersChangedNotify& operator=(EvtEntityRenderersChangedNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtEntityRenderersChangedNotify& default_instance();

  static inline const EvtEntityRenderersChangedNotify* internal_default_instance() {
    return reinterpret_cast<const EvtEntityRenderersChangedNotify*>(
               &_EvtEntityRenderersChangedNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(EvtEntityRenderersChangedNotify* other);
  friend void swap(EvtEntityRenderersChangedNotify& a, EvtEntityRenderersChangedNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtEntityRenderersChangedNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtEntityRenderersChangedNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtEntityRenderersChangedNotify& from);
  void MergeFrom(const EvtEntityRenderersChangedNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtEntityRenderersChangedNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtEntityRenderersChangedNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtEntityRenderersChangedNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtEntityRenderersChangedNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtEntityRenderersChangedNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtEntityRenderersChangedNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtEntityRenderersChangedNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtEntityRenderersChangedNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtEntityRenderersChangedNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtEntityRenderersChangedNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtEntityRenderersChangedNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtEntityRenderersChangedNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtEntityRenderersChangedNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtEntityRenderersChangedNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.EntityRendererChangedInfo renderer_changed_info = 5;
  bool has_renderer_changed_info() const;
  void clear_renderer_changed_info();
  static const int kRendererChangedInfoFieldNumber = 5;
  const ::proto::EntityRendererChangedInfo& renderer_changed_info() const;
  ::proto::EntityRendererChangedInfo* mutable_renderer_changed_info();
  ::proto::EntityRendererChangedInfo* release_renderer_changed_info();
  void set_allocated_renderer_changed_info(::proto::EntityRendererChangedInfo* renderer_changed_info);

  // uint32 entity_id = 15;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 15;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // bool is_server_cache = 3;
  void clear_is_server_cache();
  static const int kIsServerCacheFieldNumber = 3;
  bool is_server_cache() const;
  void set_is_server_cache(bool value);

  // .proto.ForwardType forward_type = 8;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 8;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // @@protoc_insertion_point(class_scope:proto.EvtEntityRenderersChangedNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::EntityRendererChangedInfo* renderer_changed_info_;
  ::google::protobuf::uint32 entity_id_;
  bool is_server_cache_;
  int forward_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AnimatorForceSetAirMoveNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AnimatorForceSetAirMoveNotify) */ {
 public:
  AnimatorForceSetAirMoveNotify();
  virtual ~AnimatorForceSetAirMoveNotify();

  AnimatorForceSetAirMoveNotify(const AnimatorForceSetAirMoveNotify& from);

  inline AnimatorForceSetAirMoveNotify& operator=(const AnimatorForceSetAirMoveNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnimatorForceSetAirMoveNotify(AnimatorForceSetAirMoveNotify&& from) noexcept
    : AnimatorForceSetAirMoveNotify() {
    *this = ::std::move(from);
  }

  inline AnimatorForceSetAirMoveNotify& operator=(AnimatorForceSetAirMoveNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnimatorForceSetAirMoveNotify& default_instance();

  static inline const AnimatorForceSetAirMoveNotify* internal_default_instance() {
    return reinterpret_cast<const AnimatorForceSetAirMoveNotify*>(
               &_AnimatorForceSetAirMoveNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(AnimatorForceSetAirMoveNotify* other);
  friend void swap(AnimatorForceSetAirMoveNotify& a, AnimatorForceSetAirMoveNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnimatorForceSetAirMoveNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AnimatorForceSetAirMoveNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnimatorForceSetAirMoveNotify& from);
  void MergeFrom(const AnimatorForceSetAirMoveNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnimatorForceSetAirMoveNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AnimatorForceSetAirMoveNotify_CmdId CmdId;
  static const CmdId NONE =
    AnimatorForceSetAirMoveNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AnimatorForceSetAirMoveNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AnimatorForceSetAirMoveNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AnimatorForceSetAirMoveNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AnimatorForceSetAirMoveNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AnimatorForceSetAirMoveNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AnimatorForceSetAirMoveNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AnimatorForceSetAirMoveNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AnimatorForceSetAirMoveNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AnimatorForceSetAirMoveNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AnimatorForceSetAirMoveNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AnimatorForceSetAirMoveNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 entity_id = 14;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 14;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // .proto.ForwardType forward_type = 9;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 9;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // bool in_air_move = 13;
  void clear_in_air_move();
  static const int kInAirMoveFieldNumber = 13;
  bool in_air_move() const;
  void set_in_air_move(bool value);

  // @@protoc_insertion_point(class_scope:proto.AnimatorForceSetAirMoveNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  int forward_type_;
  bool in_air_move_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class AiSkillCdInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AiSkillCdInfo) */ {
 public:
  AiSkillCdInfo();
  virtual ~AiSkillCdInfo();

  AiSkillCdInfo(const AiSkillCdInfo& from);

  inline AiSkillCdInfo& operator=(const AiSkillCdInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AiSkillCdInfo(AiSkillCdInfo&& from) noexcept
    : AiSkillCdInfo() {
    *this = ::std::move(from);
  }

  inline AiSkillCdInfo& operator=(AiSkillCdInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AiSkillCdInfo& default_instance();

  static inline const AiSkillCdInfo* internal_default_instance() {
    return reinterpret_cast<const AiSkillCdInfo*>(
               &_AiSkillCdInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(AiSkillCdInfo* other);
  friend void swap(AiSkillCdInfo& a, AiSkillCdInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AiSkillCdInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AiSkillCdInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AiSkillCdInfo& from);
  void MergeFrom(const AiSkillCdInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AiSkillCdInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> skill_group_cd_map = 6;
  int skill_group_cd_map_size() const;
  void clear_skill_group_cd_map();
  static const int kSkillGroupCdMapFieldNumber = 6;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      skill_group_cd_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_skill_group_cd_map();

  // map<uint32, uint32> skill_cd_map = 11;
  int skill_cd_map_size() const;
  void clear_skill_cd_map();
  static const int kSkillCdMapFieldNumber = 11;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      skill_cd_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_skill_cd_map();

  // @@protoc_insertion_point(class_scope:proto.AiSkillCdInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class AiSkillCdInfo_SkillGroupCdMapEntry : public ::google::protobuf::internal::MapEntry<AiSkillCdInfo_SkillGroupCdMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AiSkillCdInfo_SkillGroupCdMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    AiSkillCdInfo_SkillGroupCdMapEntry();
    AiSkillCdInfo_SkillGroupCdMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AiSkillCdInfo_SkillGroupCdMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AiSkillCdInfo_SkillGroupCdMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AiSkillCdInfo_SkillGroupCdMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > skill_group_cd_map_;
  private:
  public:
  class AiSkillCdInfo_SkillCdMapEntry : public ::google::protobuf::internal::MapEntry<AiSkillCdInfo_SkillCdMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AiSkillCdInfo_SkillCdMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    AiSkillCdInfo_SkillCdMapEntry();
    AiSkillCdInfo_SkillCdMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AiSkillCdInfo_SkillCdMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AiSkillCdInfo_SkillCdMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AiSkillCdInfo_SkillCdMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > skill_cd_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class EvtAiSyncSkillCdNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAiSyncSkillCdNotify) */ {
 public:
  EvtAiSyncSkillCdNotify();
  virtual ~EvtAiSyncSkillCdNotify();

  EvtAiSyncSkillCdNotify(const EvtAiSyncSkillCdNotify& from);

  inline EvtAiSyncSkillCdNotify& operator=(const EvtAiSyncSkillCdNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAiSyncSkillCdNotify(EvtAiSyncSkillCdNotify&& from) noexcept
    : EvtAiSyncSkillCdNotify() {
    *this = ::std::move(from);
  }

  inline EvtAiSyncSkillCdNotify& operator=(EvtAiSyncSkillCdNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAiSyncSkillCdNotify& default_instance();

  static inline const EvtAiSyncSkillCdNotify* internal_default_instance() {
    return reinterpret_cast<const EvtAiSyncSkillCdNotify*>(
               &_EvtAiSyncSkillCdNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(EvtAiSyncSkillCdNotify* other);
  friend void swap(EvtAiSyncSkillCdNotify& a, EvtAiSyncSkillCdNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAiSyncSkillCdNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAiSyncSkillCdNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAiSyncSkillCdNotify& from);
  void MergeFrom(const EvtAiSyncSkillCdNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAiSyncSkillCdNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef EvtAiSyncSkillCdNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtAiSyncSkillCdNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtAiSyncSkillCdNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtAiSyncSkillCdNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtAiSyncSkillCdNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtAiSyncSkillCdNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtAiSyncSkillCdNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtAiSyncSkillCdNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtAiSyncSkillCdNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtAiSyncSkillCdNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtAiSyncSkillCdNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtAiSyncSkillCdNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtAiSyncSkillCdNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint32, .proto.AiSkillCdInfo> ai_cd_map = 7;
  int ai_cd_map_size() const;
  void clear_ai_cd_map();
  static const int kAiCdMapFieldNumber = 7;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiSkillCdInfo >&
      ai_cd_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiSkillCdInfo >*
      mutable_ai_cd_map();

  // @@protoc_insertion_point(class_scope:proto.EvtAiSyncSkillCdNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class EvtAiSyncSkillCdNotify_AiCdMapEntry : public ::google::protobuf::internal::MapEntry<EvtAiSyncSkillCdNotify_AiCdMapEntry, 
      ::google::protobuf::uint32, ::proto::AiSkillCdInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<EvtAiSyncSkillCdNotify_AiCdMapEntry, 
      ::google::protobuf::uint32, ::proto::AiSkillCdInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    EvtAiSyncSkillCdNotify_AiCdMapEntry();
    EvtAiSyncSkillCdNotify_AiCdMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const EvtAiSyncSkillCdNotify_AiCdMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_EvtAiSyncSkillCdNotify_AiCdMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      EvtAiSyncSkillCdNotify_AiCdMapEntry,
      ::google::protobuf::uint32, ::proto::AiSkillCdInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > ai_cd_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtBeingHitsCombineNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtBeingHitsCombineNotify) */ {
 public:
  EvtBeingHitsCombineNotify();
  virtual ~EvtBeingHitsCombineNotify();

  EvtBeingHitsCombineNotify(const EvtBeingHitsCombineNotify& from);

  inline EvtBeingHitsCombineNotify& operator=(const EvtBeingHitsCombineNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtBeingHitsCombineNotify(EvtBeingHitsCombineNotify&& from) noexcept
    : EvtBeingHitsCombineNotify() {
    *this = ::std::move(from);
  }

  inline EvtBeingHitsCombineNotify& operator=(EvtBeingHitsCombineNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtBeingHitsCombineNotify& default_instance();

  static inline const EvtBeingHitsCombineNotify* internal_default_instance() {
    return reinterpret_cast<const EvtBeingHitsCombineNotify*>(
               &_EvtBeingHitsCombineNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(EvtBeingHitsCombineNotify* other);
  friend void swap(EvtBeingHitsCombineNotify& a, EvtBeingHitsCombineNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtBeingHitsCombineNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtBeingHitsCombineNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtBeingHitsCombineNotify& from);
  void MergeFrom(const EvtBeingHitsCombineNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtBeingHitsCombineNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtBeingHitsCombineNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtBeingHitsCombineNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtBeingHitsCombineNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtBeingHitsCombineNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtBeingHitsCombineNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtBeingHitsCombineNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtBeingHitsCombineNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtBeingHitsCombineNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtBeingHitsCombineNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtBeingHitsCombineNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtBeingHitsCombineNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtBeingHitsCombineNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtBeingHitsCombineNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.EvtBeingHitInfo evt_being_hit_info_list = 7;
  int evt_being_hit_info_list_size() const;
  void clear_evt_being_hit_info_list();
  static const int kEvtBeingHitInfoListFieldNumber = 7;
  const ::proto::EvtBeingHitInfo& evt_being_hit_info_list(int index) const;
  ::proto::EvtBeingHitInfo* mutable_evt_being_hit_info_list(int index);
  ::proto::EvtBeingHitInfo* add_evt_being_hit_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::EvtBeingHitInfo >*
      mutable_evt_being_hit_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::EvtBeingHitInfo >&
      evt_being_hit_info_list() const;

  // .proto.ForwardType forward_type = 11;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 11;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // @@protoc_insertion_point(class_scope:proto.EvtBeingHitsCombineNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::EvtBeingHitInfo > evt_being_hit_info_list_;
  int forward_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtAvatarSitDownNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAvatarSitDownNotify) */ {
 public:
  EvtAvatarSitDownNotify();
  virtual ~EvtAvatarSitDownNotify();

  EvtAvatarSitDownNotify(const EvtAvatarSitDownNotify& from);

  inline EvtAvatarSitDownNotify& operator=(const EvtAvatarSitDownNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAvatarSitDownNotify(EvtAvatarSitDownNotify&& from) noexcept
    : EvtAvatarSitDownNotify() {
    *this = ::std::move(from);
  }

  inline EvtAvatarSitDownNotify& operator=(EvtAvatarSitDownNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAvatarSitDownNotify& default_instance();

  static inline const EvtAvatarSitDownNotify* internal_default_instance() {
    return reinterpret_cast<const EvtAvatarSitDownNotify*>(
               &_EvtAvatarSitDownNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(EvtAvatarSitDownNotify* other);
  friend void swap(EvtAvatarSitDownNotify& a, EvtAvatarSitDownNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAvatarSitDownNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAvatarSitDownNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAvatarSitDownNotify& from);
  void MergeFrom(const EvtAvatarSitDownNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAvatarSitDownNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtAvatarSitDownNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtAvatarSitDownNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtAvatarSitDownNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtAvatarSitDownNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtAvatarSitDownNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtAvatarSitDownNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtAvatarSitDownNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtAvatarSitDownNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtAvatarSitDownNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtAvatarSitDownNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtAvatarSitDownNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtAvatarSitDownNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtAvatarSitDownNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector position = 9;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 9;
  const ::proto::Vector& position() const;
  ::proto::Vector* mutable_position();
  ::proto::Vector* release_position();
  void set_allocated_position(::proto::Vector* position);

  // uint32 entity_id = 4;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 4;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint64 chair_id = 6;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 6;
  ::google::protobuf::uint64 chair_id() const;
  void set_chair_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.EvtAvatarSitDownNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* position_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint64 chair_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtAvatarStandUpNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAvatarStandUpNotify) */ {
 public:
  EvtAvatarStandUpNotify();
  virtual ~EvtAvatarStandUpNotify();

  EvtAvatarStandUpNotify(const EvtAvatarStandUpNotify& from);

  inline EvtAvatarStandUpNotify& operator=(const EvtAvatarStandUpNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAvatarStandUpNotify(EvtAvatarStandUpNotify&& from) noexcept
    : EvtAvatarStandUpNotify() {
    *this = ::std::move(from);
  }

  inline EvtAvatarStandUpNotify& operator=(EvtAvatarStandUpNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAvatarStandUpNotify& default_instance();

  static inline const EvtAvatarStandUpNotify* internal_default_instance() {
    return reinterpret_cast<const EvtAvatarStandUpNotify*>(
               &_EvtAvatarStandUpNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(EvtAvatarStandUpNotify* other);
  friend void swap(EvtAvatarStandUpNotify& a, EvtAvatarStandUpNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAvatarStandUpNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAvatarStandUpNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAvatarStandUpNotify& from);
  void MergeFrom(const EvtAvatarStandUpNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAvatarStandUpNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtAvatarStandUpNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtAvatarStandUpNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtAvatarStandUpNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtAvatarStandUpNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtAvatarStandUpNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtAvatarStandUpNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtAvatarStandUpNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtAvatarStandUpNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtAvatarStandUpNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtAvatarStandUpNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtAvatarStandUpNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtAvatarStandUpNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtAvatarStandUpNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 direction = 1;
  void clear_direction();
  static const int kDirectionFieldNumber = 1;
  ::google::protobuf::int32 direction() const;
  void set_direction(::google::protobuf::int32 value);

  // int32 performID = 6;
  void clear_performid();
  static const int kPerformIDFieldNumber = 6;
  ::google::protobuf::int32 performid() const;
  void set_performid(::google::protobuf::int32 value);

  // uint32 entity_id = 9;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 9;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint64 chair_id = 11;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 11;
  ::google::protobuf::uint64 chair_id() const;
  void set_chair_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.EvtAvatarStandUpNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 direction_;
  ::google::protobuf::int32 performid_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint64 chair_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateMassiveEntityReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CreateMassiveEntityReq) */ {
 public:
  CreateMassiveEntityReq();
  virtual ~CreateMassiveEntityReq();

  CreateMassiveEntityReq(const CreateMassiveEntityReq& from);

  inline CreateMassiveEntityReq& operator=(const CreateMassiveEntityReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateMassiveEntityReq(CreateMassiveEntityReq&& from) noexcept
    : CreateMassiveEntityReq() {
    *this = ::std::move(from);
  }

  inline CreateMassiveEntityReq& operator=(CreateMassiveEntityReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateMassiveEntityReq& default_instance();

  static inline const CreateMassiveEntityReq* internal_default_instance() {
    return reinterpret_cast<const CreateMassiveEntityReq*>(
               &_CreateMassiveEntityReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(CreateMassiveEntityReq* other);
  friend void swap(CreateMassiveEntityReq& a, CreateMassiveEntityReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateMassiveEntityReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateMassiveEntityReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateMassiveEntityReq& from);
  void MergeFrom(const CreateMassiveEntityReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateMassiveEntityReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CreateMassiveEntityReq_CmdId CmdId;
  static const CmdId NONE =
    CreateMassiveEntityReq_CmdId_NONE;
  static const CmdId CMD_ID =
    CreateMassiveEntityReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CreateMassiveEntityReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CreateMassiveEntityReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    CreateMassiveEntityReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return CreateMassiveEntityReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CreateMassiveEntityReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CreateMassiveEntityReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CreateMassiveEntityReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CreateMassiveEntityReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CreateMassiveEntityReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CreateMassiveEntityReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ClientMassiveEntity massive_entity_list = 1;
  int massive_entity_list_size() const;
  void clear_massive_entity_list();
  static const int kMassiveEntityListFieldNumber = 1;
  const ::proto::ClientMassiveEntity& massive_entity_list(int index) const;
  ::proto::ClientMassiveEntity* mutable_massive_entity_list(int index);
  ::proto::ClientMassiveEntity* add_massive_entity_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ClientMassiveEntity >*
      mutable_massive_entity_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ClientMassiveEntity >&
      massive_entity_list() const;

  // @@protoc_insertion_point(class_scope:proto.CreateMassiveEntityReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ClientMassiveEntity > massive_entity_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateMassiveEntityRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CreateMassiveEntityRsp) */ {
 public:
  CreateMassiveEntityRsp();
  virtual ~CreateMassiveEntityRsp();

  CreateMassiveEntityRsp(const CreateMassiveEntityRsp& from);

  inline CreateMassiveEntityRsp& operator=(const CreateMassiveEntityRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateMassiveEntityRsp(CreateMassiveEntityRsp&& from) noexcept
    : CreateMassiveEntityRsp() {
    *this = ::std::move(from);
  }

  inline CreateMassiveEntityRsp& operator=(CreateMassiveEntityRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateMassiveEntityRsp& default_instance();

  static inline const CreateMassiveEntityRsp* internal_default_instance() {
    return reinterpret_cast<const CreateMassiveEntityRsp*>(
               &_CreateMassiveEntityRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(CreateMassiveEntityRsp* other);
  friend void swap(CreateMassiveEntityRsp& a, CreateMassiveEntityRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateMassiveEntityRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateMassiveEntityRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateMassiveEntityRsp& from);
  void MergeFrom(const CreateMassiveEntityRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateMassiveEntityRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CreateMassiveEntityRsp_CmdId CmdId;
  static const CmdId NONE =
    CreateMassiveEntityRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    CreateMassiveEntityRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CreateMassiveEntityRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CreateMassiveEntityRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CreateMassiveEntityRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CreateMassiveEntityRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CreateMassiveEntityRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CreateMassiveEntityRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CreateMassiveEntityRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CreateMassiveEntityRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CreateMassiveEntityRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.CreateMassiveEntityRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateMassiveEntityNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CreateMassiveEntityNotify) */ {
 public:
  CreateMassiveEntityNotify();
  virtual ~CreateMassiveEntityNotify();

  CreateMassiveEntityNotify(const CreateMassiveEntityNotify& from);

  inline CreateMassiveEntityNotify& operator=(const CreateMassiveEntityNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateMassiveEntityNotify(CreateMassiveEntityNotify&& from) noexcept
    : CreateMassiveEntityNotify() {
    *this = ::std::move(from);
  }

  inline CreateMassiveEntityNotify& operator=(CreateMassiveEntityNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateMassiveEntityNotify& default_instance();

  static inline const CreateMassiveEntityNotify* internal_default_instance() {
    return reinterpret_cast<const CreateMassiveEntityNotify*>(
               &_CreateMassiveEntityNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(CreateMassiveEntityNotify* other);
  friend void swap(CreateMassiveEntityNotify& a, CreateMassiveEntityNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateMassiveEntityNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateMassiveEntityNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateMassiveEntityNotify& from);
  void MergeFrom(const CreateMassiveEntityNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateMassiveEntityNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CreateMassiveEntityNotify_CmdId CmdId;
  static const CmdId NONE =
    CreateMassiveEntityNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    CreateMassiveEntityNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CreateMassiveEntityNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CreateMassiveEntityNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CreateMassiveEntityNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CreateMassiveEntityNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CreateMassiveEntityNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CreateMassiveEntityNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CreateMassiveEntityNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CreateMassiveEntityNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CreateMassiveEntityNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ServerMassiveEntity massive_entity_list = 15;
  int massive_entity_list_size() const;
  void clear_massive_entity_list();
  static const int kMassiveEntityListFieldNumber = 15;
  const ::proto::ServerMassiveEntity& massive_entity_list(int index) const;
  ::proto::ServerMassiveEntity* mutable_massive_entity_list(int index);
  ::proto::ServerMassiveEntity* add_massive_entity_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ServerMassiveEntity >*
      mutable_massive_entity_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ServerMassiveEntity >&
      massive_entity_list() const;

  // @@protoc_insertion_point(class_scope:proto.CreateMassiveEntityNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ServerMassiveEntity > massive_entity_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DestroyMassiveEntityNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DestroyMassiveEntityNotify) */ {
 public:
  DestroyMassiveEntityNotify();
  virtual ~DestroyMassiveEntityNotify();

  DestroyMassiveEntityNotify(const DestroyMassiveEntityNotify& from);

  inline DestroyMassiveEntityNotify& operator=(const DestroyMassiveEntityNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DestroyMassiveEntityNotify(DestroyMassiveEntityNotify&& from) noexcept
    : DestroyMassiveEntityNotify() {
    *this = ::std::move(from);
  }

  inline DestroyMassiveEntityNotify& operator=(DestroyMassiveEntityNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyMassiveEntityNotify& default_instance();

  static inline const DestroyMassiveEntityNotify* internal_default_instance() {
    return reinterpret_cast<const DestroyMassiveEntityNotify*>(
               &_DestroyMassiveEntityNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(DestroyMassiveEntityNotify* other);
  friend void swap(DestroyMassiveEntityNotify& a, DestroyMassiveEntityNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DestroyMassiveEntityNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DestroyMassiveEntityNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DestroyMassiveEntityNotify& from);
  void MergeFrom(const DestroyMassiveEntityNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DestroyMassiveEntityNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DestroyMassiveEntityNotify_CmdId CmdId;
  static const CmdId NONE =
    DestroyMassiveEntityNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    DestroyMassiveEntityNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    DestroyMassiveEntityNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    DestroyMassiveEntityNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    DestroyMassiveEntityNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return DestroyMassiveEntityNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    DestroyMassiveEntityNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    DestroyMassiveEntityNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    DestroyMassiveEntityNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return DestroyMassiveEntityNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return DestroyMassiveEntityNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return DestroyMassiveEntityNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ClientMassiveEntity massive_entity_list = 7;
  int massive_entity_list_size() const;
  void clear_massive_entity_list();
  static const int kMassiveEntityListFieldNumber = 7;
  const ::proto::ClientMassiveEntity& massive_entity_list(int index) const;
  ::proto::ClientMassiveEntity* mutable_massive_entity_list(int index);
  ::proto::ClientMassiveEntity* add_massive_entity_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ClientMassiveEntity >*
      mutable_massive_entity_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ClientMassiveEntity >&
      massive_entity_list() const;

  // @@protoc_insertion_point(class_scope:proto.DestroyMassiveEntityNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ClientMassiveEntity > massive_entity_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MassiveEntityStateChangedNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MassiveEntityStateChangedNotify) */ {
 public:
  MassiveEntityStateChangedNotify();
  virtual ~MassiveEntityStateChangedNotify();

  MassiveEntityStateChangedNotify(const MassiveEntityStateChangedNotify& from);

  inline MassiveEntityStateChangedNotify& operator=(const MassiveEntityStateChangedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MassiveEntityStateChangedNotify(MassiveEntityStateChangedNotify&& from) noexcept
    : MassiveEntityStateChangedNotify() {
    *this = ::std::move(from);
  }

  inline MassiveEntityStateChangedNotify& operator=(MassiveEntityStateChangedNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MassiveEntityStateChangedNotify& default_instance();

  static inline const MassiveEntityStateChangedNotify* internal_default_instance() {
    return reinterpret_cast<const MassiveEntityStateChangedNotify*>(
               &_MassiveEntityStateChangedNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(MassiveEntityStateChangedNotify* other);
  friend void swap(MassiveEntityStateChangedNotify& a, MassiveEntityStateChangedNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MassiveEntityStateChangedNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MassiveEntityStateChangedNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MassiveEntityStateChangedNotify& from);
  void MergeFrom(const MassiveEntityStateChangedNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MassiveEntityStateChangedNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MassiveEntityStateChangedNotify_CmdId CmdId;
  static const CmdId NONE =
    MassiveEntityStateChangedNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    MassiveEntityStateChangedNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    MassiveEntityStateChangedNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    MassiveEntityStateChangedNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    MassiveEntityStateChangedNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return MassiveEntityStateChangedNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    MassiveEntityStateChangedNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    MassiveEntityStateChangedNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    MassiveEntityStateChangedNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return MassiveEntityStateChangedNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return MassiveEntityStateChangedNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return MassiveEntityStateChangedNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.MassiveEntityState massive_entity_state_list = 4;
  int massive_entity_state_list_size() const;
  void clear_massive_entity_state_list();
  static const int kMassiveEntityStateListFieldNumber = 4;
  const ::proto::MassiveEntityState& massive_entity_state_list(int index) const;
  ::proto::MassiveEntityState* mutable_massive_entity_state_list(int index);
  ::proto::MassiveEntityState* add_massive_entity_state_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MassiveEntityState >*
      mutable_massive_entity_state_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MassiveEntityState >&
      massive_entity_state_list() const;

  // @@protoc_insertion_point(class_scope:proto.MassiveEntityStateChangedNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::MassiveEntityState > massive_entity_state_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TeamEntityInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TeamEntityInfo) */ {
 public:
  TeamEntityInfo();
  virtual ~TeamEntityInfo();

  TeamEntityInfo(const TeamEntityInfo& from);

  inline TeamEntityInfo& operator=(const TeamEntityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TeamEntityInfo(TeamEntityInfo&& from) noexcept
    : TeamEntityInfo() {
    *this = ::std::move(from);
  }

  inline TeamEntityInfo& operator=(TeamEntityInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamEntityInfo& default_instance();

  static inline const TeamEntityInfo* internal_default_instance() {
    return reinterpret_cast<const TeamEntityInfo*>(
               &_TeamEntityInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(TeamEntityInfo* other);
  friend void swap(TeamEntityInfo& a, TeamEntityInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TeamEntityInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  TeamEntityInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TeamEntityInfo& from);
  void MergeFrom(const TeamEntityInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TeamEntityInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AbilitySyncStateInfo team_ability_info = 9;
  bool has_team_ability_info() const;
  void clear_team_ability_info();
  static const int kTeamAbilityInfoFieldNumber = 9;
  const ::proto::AbilitySyncStateInfo& team_ability_info() const;
  ::proto::AbilitySyncStateInfo* mutable_team_ability_info();
  ::proto::AbilitySyncStateInfo* release_team_ability_info();
  void set_allocated_team_ability_info(::proto::AbilitySyncStateInfo* team_ability_info);

  // uint32 team_entity_id = 8;
  void clear_team_entity_id();
  static const int kTeamEntityIdFieldNumber = 8;
  ::google::protobuf::uint32 team_entity_id() const;
  void set_team_entity_id(::google::protobuf::uint32 value);

  // uint32 authority_peer_id = 10;
  void clear_authority_peer_id();
  static const int kAuthorityPeerIdFieldNumber = 10;
  ::google::protobuf::uint32 authority_peer_id() const;
  void set_authority_peer_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TeamEntityInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AbilitySyncStateInfo* team_ability_info_;
  ::google::protobuf::uint32 team_entity_id_;
  ::google::protobuf::uint32 authority_peer_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SyncTeamEntityNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SyncTeamEntityNotify) */ {
 public:
  SyncTeamEntityNotify();
  virtual ~SyncTeamEntityNotify();

  SyncTeamEntityNotify(const SyncTeamEntityNotify& from);

  inline SyncTeamEntityNotify& operator=(const SyncTeamEntityNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncTeamEntityNotify(SyncTeamEntityNotify&& from) noexcept
    : SyncTeamEntityNotify() {
    *this = ::std::move(from);
  }

  inline SyncTeamEntityNotify& operator=(SyncTeamEntityNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncTeamEntityNotify& default_instance();

  static inline const SyncTeamEntityNotify* internal_default_instance() {
    return reinterpret_cast<const SyncTeamEntityNotify*>(
               &_SyncTeamEntityNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(SyncTeamEntityNotify* other);
  friend void swap(SyncTeamEntityNotify& a, SyncTeamEntityNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncTeamEntityNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncTeamEntityNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncTeamEntityNotify& from);
  void MergeFrom(const SyncTeamEntityNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncTeamEntityNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SyncTeamEntityNotify_CmdId CmdId;
  static const CmdId NONE =
    SyncTeamEntityNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SyncTeamEntityNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SyncTeamEntityNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SyncTeamEntityNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SyncTeamEntityNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SyncTeamEntityNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SyncTeamEntityNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SyncTeamEntityNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SyncTeamEntityNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SyncTeamEntityNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SyncTeamEntityNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.TeamEntityInfo team_entity_info_list = 15;
  int team_entity_info_list_size() const;
  void clear_team_entity_info_list();
  static const int kTeamEntityInfoListFieldNumber = 15;
  const ::proto::TeamEntityInfo& team_entity_info_list(int index) const;
  ::proto::TeamEntityInfo* mutable_team_entity_info_list(int index);
  ::proto::TeamEntityInfo* add_team_entity_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::TeamEntityInfo >*
      mutable_team_entity_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::TeamEntityInfo >&
      team_entity_info_list() const;

  // uint32 scene_id = 13;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 13;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SyncTeamEntityNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::TeamEntityInfo > team_entity_info_list_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelTeamEntityNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DelTeamEntityNotify) */ {
 public:
  DelTeamEntityNotify();
  virtual ~DelTeamEntityNotify();

  DelTeamEntityNotify(const DelTeamEntityNotify& from);

  inline DelTeamEntityNotify& operator=(const DelTeamEntityNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DelTeamEntityNotify(DelTeamEntityNotify&& from) noexcept
    : DelTeamEntityNotify() {
    *this = ::std::move(from);
  }

  inline DelTeamEntityNotify& operator=(DelTeamEntityNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DelTeamEntityNotify& default_instance();

  static inline const DelTeamEntityNotify* internal_default_instance() {
    return reinterpret_cast<const DelTeamEntityNotify*>(
               &_DelTeamEntityNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(DelTeamEntityNotify* other);
  friend void swap(DelTeamEntityNotify& a, DelTeamEntityNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DelTeamEntityNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DelTeamEntityNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelTeamEntityNotify& from);
  void MergeFrom(const DelTeamEntityNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelTeamEntityNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DelTeamEntityNotify_CmdId CmdId;
  static const CmdId NONE =
    DelTeamEntityNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    DelTeamEntityNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    DelTeamEntityNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    DelTeamEntityNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return DelTeamEntityNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    DelTeamEntityNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    DelTeamEntityNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    DelTeamEntityNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return DelTeamEntityNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return DelTeamEntityNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return DelTeamEntityNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 del_entity_id_list = 15;
  int del_entity_id_list_size() const;
  void clear_del_entity_id_list();
  static const int kDelEntityIdListFieldNumber = 15;
  ::google::protobuf::uint32 del_entity_id_list(int index) const;
  void set_del_entity_id_list(int index, ::google::protobuf::uint32 value);
  void add_del_entity_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      del_entity_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_del_entity_id_list();

  // uint32 scene_id = 8;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 8;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DelTeamEntityNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > del_entity_id_list_;
  mutable int _del_entity_id_list_cached_byte_size_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtSyncSkillAnchorPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtSyncSkillAnchorPosition) */ {
 public:
  EvtSyncSkillAnchorPosition();
  virtual ~EvtSyncSkillAnchorPosition();

  EvtSyncSkillAnchorPosition(const EvtSyncSkillAnchorPosition& from);

  inline EvtSyncSkillAnchorPosition& operator=(const EvtSyncSkillAnchorPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtSyncSkillAnchorPosition(EvtSyncSkillAnchorPosition&& from) noexcept
    : EvtSyncSkillAnchorPosition() {
    *this = ::std::move(from);
  }

  inline EvtSyncSkillAnchorPosition& operator=(EvtSyncSkillAnchorPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtSyncSkillAnchorPosition& default_instance();

  static inline const EvtSyncSkillAnchorPosition* internal_default_instance() {
    return reinterpret_cast<const EvtSyncSkillAnchorPosition*>(
               &_EvtSyncSkillAnchorPosition_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(EvtSyncSkillAnchorPosition* other);
  friend void swap(EvtSyncSkillAnchorPosition& a, EvtSyncSkillAnchorPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtSyncSkillAnchorPosition* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtSyncSkillAnchorPosition* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtSyncSkillAnchorPosition& from);
  void MergeFrom(const EvtSyncSkillAnchorPosition& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtSyncSkillAnchorPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector skill_anchor_position = 13;
  bool has_skill_anchor_position() const;
  void clear_skill_anchor_position();
  static const int kSkillAnchorPositionFieldNumber = 13;
  const ::proto::Vector& skill_anchor_position() const;
  ::proto::Vector* mutable_skill_anchor_position();
  ::proto::Vector* release_skill_anchor_position();
  void set_allocated_skill_anchor_position(::proto::Vector* skill_anchor_position);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtSyncSkillAnchorPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* skill_anchor_position_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombatInvokeEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CombatInvokeEntry) */ {
 public:
  CombatInvokeEntry();
  virtual ~CombatInvokeEntry();

  CombatInvokeEntry(const CombatInvokeEntry& from);

  inline CombatInvokeEntry& operator=(const CombatInvokeEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CombatInvokeEntry(CombatInvokeEntry&& from) noexcept
    : CombatInvokeEntry() {
    *this = ::std::move(from);
  }

  inline CombatInvokeEntry& operator=(CombatInvokeEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatInvokeEntry& default_instance();

  static inline const CombatInvokeEntry* internal_default_instance() {
    return reinterpret_cast<const CombatInvokeEntry*>(
               &_CombatInvokeEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(CombatInvokeEntry* other);
  friend void swap(CombatInvokeEntry& a, CombatInvokeEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CombatInvokeEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  CombatInvokeEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CombatInvokeEntry& from);
  void MergeFrom(const CombatInvokeEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CombatInvokeEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes combat_data = 12;
  void clear_combat_data();
  static const int kCombatDataFieldNumber = 12;
  const ::std::string& combat_data() const;
  void set_combat_data(const ::std::string& value);
  #if LANG_CXX11
  void set_combat_data(::std::string&& value);
  #endif
  void set_combat_data(const char* value);
  void set_combat_data(const void* value, size_t size);
  ::std::string* mutable_combat_data();
  ::std::string* release_combat_data();
  void set_allocated_combat_data(::std::string* combat_data);

  // .proto.ForwardType forward_type = 10;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 10;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // .proto.CombatTypeArgument argument_type = 11;
  void clear_argument_type();
  static const int kArgumentTypeFieldNumber = 11;
  ::proto::CombatTypeArgument argument_type() const;
  void set_argument_type(::proto::CombatTypeArgument value);

  // @@protoc_insertion_point(class_scope:proto.CombatInvokeEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr combat_data_;
  int forward_type_;
  int argument_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombatInvocationsNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CombatInvocationsNotify) */ {
 public:
  CombatInvocationsNotify();
  virtual ~CombatInvocationsNotify();

  CombatInvocationsNotify(const CombatInvocationsNotify& from);

  inline CombatInvocationsNotify& operator=(const CombatInvocationsNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CombatInvocationsNotify(CombatInvocationsNotify&& from) noexcept
    : CombatInvocationsNotify() {
    *this = ::std::move(from);
  }

  inline CombatInvocationsNotify& operator=(CombatInvocationsNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatInvocationsNotify& default_instance();

  static inline const CombatInvocationsNotify* internal_default_instance() {
    return reinterpret_cast<const CombatInvocationsNotify*>(
               &_CombatInvocationsNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(CombatInvocationsNotify* other);
  friend void swap(CombatInvocationsNotify& a, CombatInvocationsNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CombatInvocationsNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CombatInvocationsNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CombatInvocationsNotify& from);
  void MergeFrom(const CombatInvocationsNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CombatInvocationsNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CombatInvocationsNotify_CmdId CmdId;
  static const CmdId NONE =
    CombatInvocationsNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    CombatInvocationsNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CombatInvocationsNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CombatInvocationsNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    CombatInvocationsNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return CombatInvocationsNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CombatInvocationsNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CombatInvocationsNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CombatInvocationsNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CombatInvocationsNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CombatInvocationsNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CombatInvocationsNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.CombatInvokeEntry invoke_list = 14;
  int invoke_list_size() const;
  void clear_invoke_list();
  static const int kInvokeListFieldNumber = 14;
  const ::proto::CombatInvokeEntry& invoke_list(int index) const;
  ::proto::CombatInvokeEntry* mutable_invoke_list(int index);
  ::proto::CombatInvokeEntry* add_invoke_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CombatInvokeEntry >*
      mutable_invoke_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CombatInvokeEntry >&
      invoke_list() const;

  // @@protoc_insertion_point(class_scope:proto.CombatInvocationsNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::CombatInvokeEntry > invoke_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerBuffChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerBuffChangeNotify) */ {
 public:
  ServerBuffChangeNotify();
  virtual ~ServerBuffChangeNotify();

  ServerBuffChangeNotify(const ServerBuffChangeNotify& from);

  inline ServerBuffChangeNotify& operator=(const ServerBuffChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerBuffChangeNotify(ServerBuffChangeNotify&& from) noexcept
    : ServerBuffChangeNotify() {
    *this = ::std::move(from);
  }

  inline ServerBuffChangeNotify& operator=(ServerBuffChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerBuffChangeNotify& default_instance();

  static inline const ServerBuffChangeNotify* internal_default_instance() {
    return reinterpret_cast<const ServerBuffChangeNotify*>(
               &_ServerBuffChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(ServerBuffChangeNotify* other);
  friend void swap(ServerBuffChangeNotify& a, ServerBuffChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerBuffChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerBuffChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerBuffChangeNotify& from);
  void MergeFrom(const ServerBuffChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerBuffChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ServerBuffChangeNotify_CmdId CmdId;
  static const CmdId NONE =
    ServerBuffChangeNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ServerBuffChangeNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ServerBuffChangeNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ServerBuffChangeNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ServerBuffChangeNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ServerBuffChangeNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ServerBuffChangeNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ServerBuffChangeNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ServerBuffChangeNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ServerBuffChangeNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ServerBuffChangeNotify_CmdId_Parse(name, value);
  }

  typedef ServerBuffChangeNotify_ServerBuffChangeType ServerBuffChangeType;
  static const ServerBuffChangeType ADD_SERVER_BUFF =
    ServerBuffChangeNotify_ServerBuffChangeType_ADD_SERVER_BUFF;
  static const ServerBuffChangeType DEL_SERVER_BUFF =
    ServerBuffChangeNotify_ServerBuffChangeType_DEL_SERVER_BUFF;
  static inline bool ServerBuffChangeType_IsValid(int value) {
    return ServerBuffChangeNotify_ServerBuffChangeType_IsValid(value);
  }
  static const ServerBuffChangeType ServerBuffChangeType_MIN =
    ServerBuffChangeNotify_ServerBuffChangeType_ServerBuffChangeType_MIN;
  static const ServerBuffChangeType ServerBuffChangeType_MAX =
    ServerBuffChangeNotify_ServerBuffChangeType_ServerBuffChangeType_MAX;
  static const int ServerBuffChangeType_ARRAYSIZE =
    ServerBuffChangeNotify_ServerBuffChangeType_ServerBuffChangeType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ServerBuffChangeType_descriptor() {
    return ServerBuffChangeNotify_ServerBuffChangeType_descriptor();
  }
  static inline const ::std::string& ServerBuffChangeType_Name(ServerBuffChangeType value) {
    return ServerBuffChangeNotify_ServerBuffChangeType_Name(value);
  }
  static inline bool ServerBuffChangeType_Parse(const ::std::string& name,
      ServerBuffChangeType* value) {
    return ServerBuffChangeNotify_ServerBuffChangeType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 entity_id_list = 1;
  int entity_id_list_size() const;
  void clear_entity_id_list();
  static const int kEntityIdListFieldNumber = 1;
  ::google::protobuf::uint32 entity_id_list(int index) const;
  void set_entity_id_list(int index, ::google::protobuf::uint32 value);
  void add_entity_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      entity_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_entity_id_list();

  // repeated .proto.ServerBuff server_buff_list = 11;
  int server_buff_list_size() const;
  void clear_server_buff_list();
  static const int kServerBuffListFieldNumber = 11;
  const ::proto::ServerBuff& server_buff_list(int index) const;
  ::proto::ServerBuff* mutable_server_buff_list(int index);
  ::proto::ServerBuff* add_server_buff_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >*
      mutable_server_buff_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >&
      server_buff_list() const;

  // repeated uint64 avatar_guid_list = 12;
  int avatar_guid_list_size() const;
  void clear_avatar_guid_list();
  static const int kAvatarGuidListFieldNumber = 12;
  ::google::protobuf::uint64 avatar_guid_list(int index) const;
  void set_avatar_guid_list(int index, ::google::protobuf::uint64 value);
  void add_avatar_guid_list(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      avatar_guid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_avatar_guid_list();

  // .proto.ServerBuffChangeNotify.ServerBuffChangeType server_buff_change_type = 7;
  void clear_server_buff_change_type();
  static const int kServerBuffChangeTypeFieldNumber = 7;
  ::proto::ServerBuffChangeNotify_ServerBuffChangeType server_buff_change_type() const;
  void set_server_buff_change_type(::proto::ServerBuffChangeNotify_ServerBuffChangeType value);

  // bool is_creature_buff = 10;
  void clear_is_creature_buff();
  static const int kIsCreatureBuffFieldNumber = 10;
  bool is_creature_buff() const;
  void set_is_creature_buff(bool value);

  // @@protoc_insertion_point(class_scope:proto.ServerBuffChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > entity_id_list_;
  mutable int _entity_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff > server_buff_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > avatar_guid_list_;
  mutable int _avatar_guid_list_cached_byte_size_;
  int server_buff_change_type_;
  bool is_creature_buff_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class AiThreatInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AiThreatInfo) */ {
 public:
  AiThreatInfo();
  virtual ~AiThreatInfo();

  AiThreatInfo(const AiThreatInfo& from);

  inline AiThreatInfo& operator=(const AiThreatInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AiThreatInfo(AiThreatInfo&& from) noexcept
    : AiThreatInfo() {
    *this = ::std::move(from);
  }

  inline AiThreatInfo& operator=(AiThreatInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AiThreatInfo& default_instance();

  static inline const AiThreatInfo* internal_default_instance() {
    return reinterpret_cast<const AiThreatInfo*>(
               &_AiThreatInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(AiThreatInfo* other);
  friend void swap(AiThreatInfo& a, AiThreatInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AiThreatInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AiThreatInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AiThreatInfo& from);
  void MergeFrom(const AiThreatInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AiThreatInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> ai_threat_map = 11;
  int ai_threat_map_size() const;
  void clear_ai_threat_map();
  static const int kAiThreatMapFieldNumber = 11;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      ai_threat_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_ai_threat_map();

  // @@protoc_insertion_point(class_scope:proto.AiThreatInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class AiThreatInfo_AiThreatMapEntry : public ::google::protobuf::internal::MapEntry<AiThreatInfo_AiThreatMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AiThreatInfo_AiThreatMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    AiThreatInfo_AiThreatMapEntry();
    AiThreatInfo_AiThreatMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AiThreatInfo_AiThreatMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AiThreatInfo_AiThreatMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AiThreatInfo_AiThreatMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > ai_threat_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class EvtAiSyncCombatThreatInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAiSyncCombatThreatInfoNotify) */ {
 public:
  EvtAiSyncCombatThreatInfoNotify();
  virtual ~EvtAiSyncCombatThreatInfoNotify();

  EvtAiSyncCombatThreatInfoNotify(const EvtAiSyncCombatThreatInfoNotify& from);

  inline EvtAiSyncCombatThreatInfoNotify& operator=(const EvtAiSyncCombatThreatInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAiSyncCombatThreatInfoNotify(EvtAiSyncCombatThreatInfoNotify&& from) noexcept
    : EvtAiSyncCombatThreatInfoNotify() {
    *this = ::std::move(from);
  }

  inline EvtAiSyncCombatThreatInfoNotify& operator=(EvtAiSyncCombatThreatInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAiSyncCombatThreatInfoNotify& default_instance();

  static inline const EvtAiSyncCombatThreatInfoNotify* internal_default_instance() {
    return reinterpret_cast<const EvtAiSyncCombatThreatInfoNotify*>(
               &_EvtAiSyncCombatThreatInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(EvtAiSyncCombatThreatInfoNotify* other);
  friend void swap(EvtAiSyncCombatThreatInfoNotify& a, EvtAiSyncCombatThreatInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAiSyncCombatThreatInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAiSyncCombatThreatInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAiSyncCombatThreatInfoNotify& from);
  void MergeFrom(const EvtAiSyncCombatThreatInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAiSyncCombatThreatInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef EvtAiSyncCombatThreatInfoNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtAiSyncCombatThreatInfoNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtAiSyncCombatThreatInfoNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtAiSyncCombatThreatInfoNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtAiSyncCombatThreatInfoNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtAiSyncCombatThreatInfoNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtAiSyncCombatThreatInfoNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtAiSyncCombatThreatInfoNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtAiSyncCombatThreatInfoNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtAiSyncCombatThreatInfoNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtAiSyncCombatThreatInfoNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtAiSyncCombatThreatInfoNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtAiSyncCombatThreatInfoNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint32, .proto.AiThreatInfo> combat_threat_info_map = 8;
  int combat_threat_info_map_size() const;
  void clear_combat_threat_info_map();
  static const int kCombatThreatInfoMapFieldNumber = 8;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiThreatInfo >&
      combat_threat_info_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiThreatInfo >*
      mutable_combat_threat_info_map();

  // @@protoc_insertion_point(class_scope:proto.EvtAiSyncCombatThreatInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry : public ::google::protobuf::internal::MapEntry<EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::AiThreatInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::AiThreatInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry();
    EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry,
      ::google::protobuf::uint32, ::proto::AiThreatInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > combat_threat_info_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MassiveEntityElementOpBatchNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MassiveEntityElementOpBatchNotify) */ {
 public:
  MassiveEntityElementOpBatchNotify();
  virtual ~MassiveEntityElementOpBatchNotify();

  MassiveEntityElementOpBatchNotify(const MassiveEntityElementOpBatchNotify& from);

  inline MassiveEntityElementOpBatchNotify& operator=(const MassiveEntityElementOpBatchNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MassiveEntityElementOpBatchNotify(MassiveEntityElementOpBatchNotify&& from) noexcept
    : MassiveEntityElementOpBatchNotify() {
    *this = ::std::move(from);
  }

  inline MassiveEntityElementOpBatchNotify& operator=(MassiveEntityElementOpBatchNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MassiveEntityElementOpBatchNotify& default_instance();

  enum CheckShapeCase {
    kShapeSphere = 10,
    kShapeBox = 2,
    CHECK_SHAPE_NOT_SET = 0,
  };

  static inline const MassiveEntityElementOpBatchNotify* internal_default_instance() {
    return reinterpret_cast<const MassiveEntityElementOpBatchNotify*>(
               &_MassiveEntityElementOpBatchNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(MassiveEntityElementOpBatchNotify* other);
  friend void swap(MassiveEntityElementOpBatchNotify& a, MassiveEntityElementOpBatchNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MassiveEntityElementOpBatchNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MassiveEntityElementOpBatchNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MassiveEntityElementOpBatchNotify& from);
  void MergeFrom(const MassiveEntityElementOpBatchNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MassiveEntityElementOpBatchNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MassiveEntityElementOpBatchNotify_CmdId CmdId;
  static const CmdId NONE =
    MassiveEntityElementOpBatchNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    MassiveEntityElementOpBatchNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    MassiveEntityElementOpBatchNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    MassiveEntityElementOpBatchNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    MassiveEntityElementOpBatchNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return MassiveEntityElementOpBatchNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    MassiveEntityElementOpBatchNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    MassiveEntityElementOpBatchNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    MassiveEntityElementOpBatchNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return MassiveEntityElementOpBatchNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return MassiveEntityElementOpBatchNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return MassiveEntityElementOpBatchNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 attacker_id = 3;
  void clear_attacker_id();
  static const int kAttackerIdFieldNumber = 3;
  ::google::protobuf::uint32 attacker_id() const;
  void set_attacker_id(::google::protobuf::uint32 value);

  // int32 reaction_source_type = 4;
  void clear_reaction_source_type();
  static const int kReactionSourceTypeFieldNumber = 4;
  ::google::protobuf::int32 reaction_source_type() const;
  void set_reaction_source_type(::google::protobuf::int32 value);

  // int32 entity_type = 6;
  void clear_entity_type();
  static const int kEntityTypeFieldNumber = 6;
  ::google::protobuf::int32 entity_type() const;
  void set_entity_type(::google::protobuf::int32 value);

  // float attack_element_durability = 7;
  void clear_attack_element_durability();
  static const int kAttackElementDurabilityFieldNumber = 7;
  float attack_element_durability() const;
  void set_attack_element_durability(float value);

  // int32 source_element_type = 12;
  void clear_source_element_type();
  static const int kSourceElementTypeFieldNumber = 12;
  ::google::protobuf::int32 source_element_type() const;
  void set_source_element_type(::google::protobuf::int32 value);

  // uint32 op_idx = 9;
  void clear_op_idx();
  static const int kOpIdxFieldNumber = 9;
  ::google::protobuf::uint32 op_idx() const;
  void set_op_idx(::google::protobuf::uint32 value);

  // uint32 user_id = 11;
  void clear_user_id();
  static const int kUserIdFieldNumber = 11;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // .proto.ShapeSphere shape_sphere = 10;
  bool has_shape_sphere() const;
  void clear_shape_sphere();
  static const int kShapeSphereFieldNumber = 10;
  const ::proto::ShapeSphere& shape_sphere() const;
  ::proto::ShapeSphere* mutable_shape_sphere();
  ::proto::ShapeSphere* release_shape_sphere();
  void set_allocated_shape_sphere(::proto::ShapeSphere* shape_sphere);

  // .proto.ShapeBox shape_box = 2;
  bool has_shape_box() const;
  void clear_shape_box();
  static const int kShapeBoxFieldNumber = 2;
  const ::proto::ShapeBox& shape_box() const;
  ::proto::ShapeBox* mutable_shape_box();
  ::proto::ShapeBox* release_shape_box();
  void set_allocated_shape_box(::proto::ShapeBox* shape_box);

  CheckShapeCase check_shape_case() const;
  // @@protoc_insertion_point(class_scope:proto.MassiveEntityElementOpBatchNotify)
 private:
  void set_has_shape_sphere();
  void set_has_shape_box();

  inline bool has_check_shape() const;
  void clear_check_shape();
  inline void clear_has_check_shape();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 attacker_id_;
  ::google::protobuf::int32 reaction_source_type_;
  ::google::protobuf::int32 entity_type_;
  float attack_element_durability_;
  ::google::protobuf::int32 source_element_type_;
  ::google::protobuf::uint32 op_idx_;
  ::google::protobuf::uint32 user_id_;
  union CheckShapeUnion {
    CheckShapeUnion() {}
    ::proto::ShapeSphere* shape_sphere_;
    ::proto::ShapeBox* shape_box_;
  } check_shape_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AiSyncInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AiSyncInfo) */ {
 public:
  AiSyncInfo();
  virtual ~AiSyncInfo();

  AiSyncInfo(const AiSyncInfo& from);

  inline AiSyncInfo& operator=(const AiSyncInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AiSyncInfo(AiSyncInfo&& from) noexcept
    : AiSyncInfo() {
    *this = ::std::move(from);
  }

  inline AiSyncInfo& operator=(AiSyncInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AiSyncInfo& default_instance();

  static inline const AiSyncInfo* internal_default_instance() {
    return reinterpret_cast<const AiSyncInfo*>(
               &_AiSyncInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(AiSyncInfo* other);
  friend void swap(AiSyncInfo& a, AiSyncInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AiSyncInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AiSyncInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AiSyncInfo& from);
  void MergeFrom(const AiSyncInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AiSyncInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_self_killing = 8;
  void clear_is_self_killing();
  static const int kIsSelfKillingFieldNumber = 8;
  bool is_self_killing() const;
  void set_is_self_killing(bool value);

  // bool has_path_to_target = 4;
  void clear_has_path_to_target();
  static const int kHasPathToTargetFieldNumber = 4;
  bool has_path_to_target() const;
  void set_has_path_to_target(bool value);

  // uint32 entity_id = 9;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 9;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AiSyncInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_self_killing_;
  bool has_path_to_target_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityAiSyncNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityAiSyncNotify) */ {
 public:
  EntityAiSyncNotify();
  virtual ~EntityAiSyncNotify();

  EntityAiSyncNotify(const EntityAiSyncNotify& from);

  inline EntityAiSyncNotify& operator=(const EntityAiSyncNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityAiSyncNotify(EntityAiSyncNotify&& from) noexcept
    : EntityAiSyncNotify() {
    *this = ::std::move(from);
  }

  inline EntityAiSyncNotify& operator=(EntityAiSyncNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityAiSyncNotify& default_instance();

  static inline const EntityAiSyncNotify* internal_default_instance() {
    return reinterpret_cast<const EntityAiSyncNotify*>(
               &_EntityAiSyncNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(EntityAiSyncNotify* other);
  friend void swap(EntityAiSyncNotify& a, EntityAiSyncNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityAiSyncNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityAiSyncNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityAiSyncNotify& from);
  void MergeFrom(const EntityAiSyncNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityAiSyncNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EntityAiSyncNotify_CmdId CmdId;
  static const CmdId NONE =
    EntityAiSyncNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EntityAiSyncNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EntityAiSyncNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EntityAiSyncNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EntityAiSyncNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EntityAiSyncNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EntityAiSyncNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EntityAiSyncNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EntityAiSyncNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EntityAiSyncNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EntityAiSyncNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EntityAiSyncNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.AiSyncInfo info_list = 1;
  int info_list_size() const;
  void clear_info_list();
  static const int kInfoListFieldNumber = 1;
  const ::proto::AiSyncInfo& info_list(int index) const;
  ::proto::AiSyncInfo* mutable_info_list(int index);
  ::proto::AiSyncInfo* add_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::AiSyncInfo >*
      mutable_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::AiSyncInfo >&
      info_list() const;

  // repeated uint32 local_avatar_alerted_monster_list = 15;
  int local_avatar_alerted_monster_list_size() const;
  void clear_local_avatar_alerted_monster_list();
  static const int kLocalAvatarAlertedMonsterListFieldNumber = 15;
  ::google::protobuf::uint32 local_avatar_alerted_monster_list(int index) const;
  void set_local_avatar_alerted_monster_list(int index, ::google::protobuf::uint32 value);
  void add_local_avatar_alerted_monster_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      local_avatar_alerted_monster_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_local_avatar_alerted_monster_list();

  // @@protoc_insertion_point(class_scope:proto.EntityAiSyncNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::AiSyncInfo > info_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > local_avatar_alerted_monster_list_;
  mutable int _local_avatar_alerted_monster_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LuaSetOptionNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LuaSetOptionNotify) */ {
 public:
  LuaSetOptionNotify();
  virtual ~LuaSetOptionNotify();

  LuaSetOptionNotify(const LuaSetOptionNotify& from);

  inline LuaSetOptionNotify& operator=(const LuaSetOptionNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LuaSetOptionNotify(LuaSetOptionNotify&& from) noexcept
    : LuaSetOptionNotify() {
    *this = ::std::move(from);
  }

  inline LuaSetOptionNotify& operator=(LuaSetOptionNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LuaSetOptionNotify& default_instance();

  static inline const LuaSetOptionNotify* internal_default_instance() {
    return reinterpret_cast<const LuaSetOptionNotify*>(
               &_LuaSetOptionNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(LuaSetOptionNotify* other);
  friend void swap(LuaSetOptionNotify& a, LuaSetOptionNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LuaSetOptionNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  LuaSetOptionNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LuaSetOptionNotify& from);
  void MergeFrom(const LuaSetOptionNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LuaSetOptionNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LuaSetOptionNotify_CmdId CmdId;
  static const CmdId NONE =
    LuaSetOptionNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    LuaSetOptionNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    LuaSetOptionNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    LuaSetOptionNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return LuaSetOptionNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    LuaSetOptionNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    LuaSetOptionNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    LuaSetOptionNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return LuaSetOptionNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return LuaSetOptionNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return LuaSetOptionNotify_CmdId_Parse(name, value);
  }

  typedef LuaSetOptionNotify_LuaOptionType LuaOptionType;
  static const LuaOptionType LUA_OPTION_NONE =
    LuaSetOptionNotify_LuaOptionType_LUA_OPTION_NONE;
  static const LuaOptionType LUA_OPTION_PLAYER_INPUT =
    LuaSetOptionNotify_LuaOptionType_LUA_OPTION_PLAYER_INPUT;
  static inline bool LuaOptionType_IsValid(int value) {
    return LuaSetOptionNotify_LuaOptionType_IsValid(value);
  }
  static const LuaOptionType LuaOptionType_MIN =
    LuaSetOptionNotify_LuaOptionType_LuaOptionType_MIN;
  static const LuaOptionType LuaOptionType_MAX =
    LuaSetOptionNotify_LuaOptionType_LuaOptionType_MAX;
  static const int LuaOptionType_ARRAYSIZE =
    LuaSetOptionNotify_LuaOptionType_LuaOptionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  LuaOptionType_descriptor() {
    return LuaSetOptionNotify_LuaOptionType_descriptor();
  }
  static inline const ::std::string& LuaOptionType_Name(LuaOptionType value) {
    return LuaSetOptionNotify_LuaOptionType_Name(value);
  }
  static inline bool LuaOptionType_Parse(const ::std::string& name,
      LuaOptionType* value) {
    return LuaSetOptionNotify_LuaOptionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string lua_set_param = 8;
  void clear_lua_set_param();
  static const int kLuaSetParamFieldNumber = 8;
  const ::std::string& lua_set_param() const;
  void set_lua_set_param(const ::std::string& value);
  #if LANG_CXX11
  void set_lua_set_param(::std::string&& value);
  #endif
  void set_lua_set_param(const char* value);
  void set_lua_set_param(const char* value, size_t size);
  ::std::string* mutable_lua_set_param();
  ::std::string* release_lua_set_param();
  void set_allocated_lua_set_param(::std::string* lua_set_param);

  // .proto.LuaSetOptionNotify.LuaOptionType option_type = 10;
  void clear_option_type();
  static const int kOptionTypeFieldNumber = 10;
  ::proto::LuaSetOptionNotify_LuaOptionType option_type() const;
  void set_option_type(::proto::LuaSetOptionNotify_LuaOptionType value);

  // @@protoc_insertion_point(class_scope:proto.LuaSetOptionNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr lua_set_param_;
  int option_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtDestroyServerGadgetNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtDestroyServerGadgetNotify) */ {
 public:
  EvtDestroyServerGadgetNotify();
  virtual ~EvtDestroyServerGadgetNotify();

  EvtDestroyServerGadgetNotify(const EvtDestroyServerGadgetNotify& from);

  inline EvtDestroyServerGadgetNotify& operator=(const EvtDestroyServerGadgetNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtDestroyServerGadgetNotify(EvtDestroyServerGadgetNotify&& from) noexcept
    : EvtDestroyServerGadgetNotify() {
    *this = ::std::move(from);
  }

  inline EvtDestroyServerGadgetNotify& operator=(EvtDestroyServerGadgetNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtDestroyServerGadgetNotify& default_instance();

  static inline const EvtDestroyServerGadgetNotify* internal_default_instance() {
    return reinterpret_cast<const EvtDestroyServerGadgetNotify*>(
               &_EvtDestroyServerGadgetNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(EvtDestroyServerGadgetNotify* other);
  friend void swap(EvtDestroyServerGadgetNotify& a, EvtDestroyServerGadgetNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtDestroyServerGadgetNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtDestroyServerGadgetNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtDestroyServerGadgetNotify& from);
  void MergeFrom(const EvtDestroyServerGadgetNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtDestroyServerGadgetNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtDestroyServerGadgetNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtDestroyServerGadgetNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtDestroyServerGadgetNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtDestroyServerGadgetNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtDestroyServerGadgetNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtDestroyServerGadgetNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtDestroyServerGadgetNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtDestroyServerGadgetNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtDestroyServerGadgetNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtDestroyServerGadgetNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtDestroyServerGadgetNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtDestroyServerGadgetNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtDestroyServerGadgetNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 entity_id = 7;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 7;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtDestroyServerGadgetNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityAiKillSelfNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityAiKillSelfNotify) */ {
 public:
  EntityAiKillSelfNotify();
  virtual ~EntityAiKillSelfNotify();

  EntityAiKillSelfNotify(const EntityAiKillSelfNotify& from);

  inline EntityAiKillSelfNotify& operator=(const EntityAiKillSelfNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityAiKillSelfNotify(EntityAiKillSelfNotify&& from) noexcept
    : EntityAiKillSelfNotify() {
    *this = ::std::move(from);
  }

  inline EntityAiKillSelfNotify& operator=(EntityAiKillSelfNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityAiKillSelfNotify& default_instance();

  static inline const EntityAiKillSelfNotify* internal_default_instance() {
    return reinterpret_cast<const EntityAiKillSelfNotify*>(
               &_EntityAiKillSelfNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(EntityAiKillSelfNotify* other);
  friend void swap(EntityAiKillSelfNotify& a, EntityAiKillSelfNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityAiKillSelfNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityAiKillSelfNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityAiKillSelfNotify& from);
  void MergeFrom(const EntityAiKillSelfNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityAiKillSelfNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EntityAiKillSelfNotify_CmdId CmdId;
  static const CmdId NONE =
    EntityAiKillSelfNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EntityAiKillSelfNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EntityAiKillSelfNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EntityAiKillSelfNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EntityAiKillSelfNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EntityAiKillSelfNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EntityAiKillSelfNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EntityAiKillSelfNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EntityAiKillSelfNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EntityAiKillSelfNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EntityAiKillSelfNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EntityAiKillSelfNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 entity_id = 12;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 12;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EntityAiKillSelfNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtAvatarLockChairReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAvatarLockChairReq) */ {
 public:
  EvtAvatarLockChairReq();
  virtual ~EvtAvatarLockChairReq();

  EvtAvatarLockChairReq(const EvtAvatarLockChairReq& from);

  inline EvtAvatarLockChairReq& operator=(const EvtAvatarLockChairReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAvatarLockChairReq(EvtAvatarLockChairReq&& from) noexcept
    : EvtAvatarLockChairReq() {
    *this = ::std::move(from);
  }

  inline EvtAvatarLockChairReq& operator=(EvtAvatarLockChairReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAvatarLockChairReq& default_instance();

  static inline const EvtAvatarLockChairReq* internal_default_instance() {
    return reinterpret_cast<const EvtAvatarLockChairReq*>(
               &_EvtAvatarLockChairReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    81;

  void Swap(EvtAvatarLockChairReq* other);
  friend void swap(EvtAvatarLockChairReq& a, EvtAvatarLockChairReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAvatarLockChairReq* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAvatarLockChairReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAvatarLockChairReq& from);
  void MergeFrom(const EvtAvatarLockChairReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAvatarLockChairReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtAvatarLockChairReq_CmdId CmdId;
  static const CmdId NONE =
    EvtAvatarLockChairReq_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtAvatarLockChairReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtAvatarLockChairReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtAvatarLockChairReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtAvatarLockChairReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtAvatarLockChairReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtAvatarLockChairReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtAvatarLockChairReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtAvatarLockChairReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtAvatarLockChairReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtAvatarLockChairReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtAvatarLockChairReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector position = 8;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 8;
  const ::proto::Vector& position() const;
  ::proto::Vector* mutable_position();
  ::proto::Vector* release_position();
  void set_allocated_position(::proto::Vector* position);

  // uint64 chair_id = 5;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 5;
  ::google::protobuf::uint64 chair_id() const;
  void set_chair_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.EvtAvatarLockChairReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* position_;
  ::google::protobuf::uint64 chair_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtAvatarLockChairRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAvatarLockChairRsp) */ {
 public:
  EvtAvatarLockChairRsp();
  virtual ~EvtAvatarLockChairRsp();

  EvtAvatarLockChairRsp(const EvtAvatarLockChairRsp& from);

  inline EvtAvatarLockChairRsp& operator=(const EvtAvatarLockChairRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAvatarLockChairRsp(EvtAvatarLockChairRsp&& from) noexcept
    : EvtAvatarLockChairRsp() {
    *this = ::std::move(from);
  }

  inline EvtAvatarLockChairRsp& operator=(EvtAvatarLockChairRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAvatarLockChairRsp& default_instance();

  static inline const EvtAvatarLockChairRsp* internal_default_instance() {
    return reinterpret_cast<const EvtAvatarLockChairRsp*>(
               &_EvtAvatarLockChairRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    82;

  void Swap(EvtAvatarLockChairRsp* other);
  friend void swap(EvtAvatarLockChairRsp& a, EvtAvatarLockChairRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAvatarLockChairRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAvatarLockChairRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAvatarLockChairRsp& from);
  void MergeFrom(const EvtAvatarLockChairRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAvatarLockChairRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtAvatarLockChairRsp_CmdId CmdId;
  static const CmdId NONE =
    EvtAvatarLockChairRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtAvatarLockChairRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtAvatarLockChairRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtAvatarLockChairRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return EvtAvatarLockChairRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtAvatarLockChairRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtAvatarLockChairRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtAvatarLockChairRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtAvatarLockChairRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtAvatarLockChairRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtAvatarLockChairRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector position = 4;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 4;
  const ::proto::Vector& position() const;
  ::proto::Vector* mutable_position();
  ::proto::Vector* release_position();
  void set_allocated_position(::proto::Vector* position);

  // int32 retcode = 12;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 12;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 entity_id = 15;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 15;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint64 chair_id = 14;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 14;
  ::google::protobuf::uint64 chair_id() const;
  void set_chair_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.EvtAvatarLockChairRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* position_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint64 chair_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReportFightAntiCheatNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReportFightAntiCheatNotify) */ {
 public:
  ReportFightAntiCheatNotify();
  virtual ~ReportFightAntiCheatNotify();

  ReportFightAntiCheatNotify(const ReportFightAntiCheatNotify& from);

  inline ReportFightAntiCheatNotify& operator=(const ReportFightAntiCheatNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReportFightAntiCheatNotify(ReportFightAntiCheatNotify&& from) noexcept
    : ReportFightAntiCheatNotify() {
    *this = ::std::move(from);
  }

  inline ReportFightAntiCheatNotify& operator=(ReportFightAntiCheatNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportFightAntiCheatNotify& default_instance();

  static inline const ReportFightAntiCheatNotify* internal_default_instance() {
    return reinterpret_cast<const ReportFightAntiCheatNotify*>(
               &_ReportFightAntiCheatNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    83;

  void Swap(ReportFightAntiCheatNotify* other);
  friend void swap(ReportFightAntiCheatNotify& a, ReportFightAntiCheatNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReportFightAntiCheatNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ReportFightAntiCheatNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReportFightAntiCheatNotify& from);
  void MergeFrom(const ReportFightAntiCheatNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReportFightAntiCheatNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ReportFightAntiCheatNotify_CmdId CmdId;
  static const CmdId NONE =
    ReportFightAntiCheatNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ReportFightAntiCheatNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ReportFightAntiCheatNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ReportFightAntiCheatNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ReportFightAntiCheatNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ReportFightAntiCheatNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ReportFightAntiCheatNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ReportFightAntiCheatNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ReportFightAntiCheatNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ReportFightAntiCheatNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ReportFightAntiCheatNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ReportFightAntiCheatNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 cheat_count = 8;
  void clear_cheat_count();
  static const int kCheatCountFieldNumber = 8;
  ::google::protobuf::uint32 cheat_count() const;
  void set_cheat_count(::google::protobuf::uint32 value);

  // uint32 cheat_type = 12;
  void clear_cheat_type();
  static const int kCheatTypeFieldNumber = 12;
  ::google::protobuf::uint32 cheat_type() const;
  void set_cheat_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ReportFightAntiCheatNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cheat_count_;
  ::google::protobuf::uint32 cheat_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtBeingHealedNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtBeingHealedNotify) */ {
 public:
  EvtBeingHealedNotify();
  virtual ~EvtBeingHealedNotify();

  EvtBeingHealedNotify(const EvtBeingHealedNotify& from);

  inline EvtBeingHealedNotify& operator=(const EvtBeingHealedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtBeingHealedNotify(EvtBeingHealedNotify&& from) noexcept
    : EvtBeingHealedNotify() {
    *this = ::std::move(from);
  }

  inline EvtBeingHealedNotify& operator=(EvtBeingHealedNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtBeingHealedNotify& default_instance();

  static inline const EvtBeingHealedNotify* internal_default_instance() {
    return reinterpret_cast<const EvtBeingHealedNotify*>(
               &_EvtBeingHealedNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    84;

  void Swap(EvtBeingHealedNotify* other);
  friend void swap(EvtBeingHealedNotify& a, EvtBeingHealedNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtBeingHealedNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtBeingHealedNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtBeingHealedNotify& from);
  void MergeFrom(const EvtBeingHealedNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtBeingHealedNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtBeingHealedNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtBeingHealedNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtBeingHealedNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtBeingHealedNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtBeingHealedNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return EvtBeingHealedNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtBeingHealedNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtBeingHealedNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtBeingHealedNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtBeingHealedNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtBeingHealedNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtBeingHealedNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 target_id = 1;
  void clear_target_id();
  static const int kTargetIdFieldNumber = 1;
  ::google::protobuf::uint32 target_id() const;
  void set_target_id(::google::protobuf::uint32 value);

  // float heal_amount = 4;
  void clear_heal_amount();
  static const int kHealAmountFieldNumber = 4;
  float heal_amount() const;
  void set_heal_amount(float value);

  // float real_heal_amount = 5;
  void clear_real_heal_amount();
  static const int kRealHealAmountFieldNumber = 5;
  float real_heal_amount() const;
  void set_real_heal_amount(float value);

  // uint32 source_id = 13;
  void clear_source_id();
  static const int kSourceIdFieldNumber = 13;
  ::google::protobuf::uint32 source_id() const;
  void set_source_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtBeingHealedNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_id_;
  float heal_amount_;
  float real_heal_amount_;
  ::google::protobuf::uint32 source_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtLocalGadgetOwnerLeaveSceneNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtLocalGadgetOwnerLeaveSceneNotify) */ {
 public:
  EvtLocalGadgetOwnerLeaveSceneNotify();
  virtual ~EvtLocalGadgetOwnerLeaveSceneNotify();

  EvtLocalGadgetOwnerLeaveSceneNotify(const EvtLocalGadgetOwnerLeaveSceneNotify& from);

  inline EvtLocalGadgetOwnerLeaveSceneNotify& operator=(const EvtLocalGadgetOwnerLeaveSceneNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtLocalGadgetOwnerLeaveSceneNotify(EvtLocalGadgetOwnerLeaveSceneNotify&& from) noexcept
    : EvtLocalGadgetOwnerLeaveSceneNotify() {
    *this = ::std::move(from);
  }

  inline EvtLocalGadgetOwnerLeaveSceneNotify& operator=(EvtLocalGadgetOwnerLeaveSceneNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtLocalGadgetOwnerLeaveSceneNotify& default_instance();

  static inline const EvtLocalGadgetOwnerLeaveSceneNotify* internal_default_instance() {
    return reinterpret_cast<const EvtLocalGadgetOwnerLeaveSceneNotify*>(
               &_EvtLocalGadgetOwnerLeaveSceneNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    85;

  void Swap(EvtLocalGadgetOwnerLeaveSceneNotify* other);
  friend void swap(EvtLocalGadgetOwnerLeaveSceneNotify& a, EvtLocalGadgetOwnerLeaveSceneNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtLocalGadgetOwnerLeaveSceneNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtLocalGadgetOwnerLeaveSceneNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtLocalGadgetOwnerLeaveSceneNotify& from);
  void MergeFrom(const EvtLocalGadgetOwnerLeaveSceneNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtLocalGadgetOwnerLeaveSceneNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtLocalGadgetOwnerLeaveSceneNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 entity_id = 10;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 10;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtLocalGadgetOwnerLeaveSceneNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================


// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::EvtBeingHitNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtBeingHitNotify_CmdId>() {
  return ::proto::EvtBeingHitNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtAnimatorParameterNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtAnimatorParameterNotify_CmdId>() {
  return ::proto::EvtAnimatorParameterNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::HostPlayerNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::HostPlayerNotify_CmdId>() {
  return ::proto::HostPlayerNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtDoSkillSuccNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtDoSkillSuccNotify_CmdId>() {
  return ::proto::EvtDoSkillSuccNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtCreateGadgetNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtCreateGadgetNotify_CmdId>() {
  return ::proto::EvtCreateGadgetNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtDestroyGadgetNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtDestroyGadgetNotify_CmdId>() {
  return ::proto::EvtDestroyGadgetNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtFaceToEntityNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtFaceToEntityNotify_CmdId>() {
  return ::proto::EvtFaceToEntityNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtFaceToDirNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtFaceToDirNotify_CmdId>() {
  return ::proto::EvtFaceToDirNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtCostStaminaNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtCostStaminaNotify_CmdId>() {
  return ::proto::EvtCostStaminaNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtSetAttackTargetNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtSetAttackTargetNotify_CmdId>() {
  return ::proto::EvtSetAttackTargetNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtAnimatorStateChangedNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtAnimatorStateChangedNotify_CmdId>() {
  return ::proto::EvtAnimatorStateChangedNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtRushMoveNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtRushMoveNotify_CmdId>() {
  return ::proto::EvtRushMoveNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtBulletHitNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtBulletHitNotify_CmdId>() {
  return ::proto::EvtBulletHitNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtBulletDeactiveNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtBulletDeactiveNotify_CmdId>() {
  return ::proto::EvtBulletDeactiveNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtEntityStartDieEndNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtEntityStartDieEndNotify_CmdId>() {
  return ::proto::EvtEntityStartDieEndNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtBulletMoveNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtBulletMoveNotify_CmdId>() {
  return ::proto::EvtBulletMoveNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtAvatarEnterFocusNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtAvatarEnterFocusNotify_CmdId>() {
  return ::proto::EvtAvatarEnterFocusNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtAvatarExitFocusNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtAvatarExitFocusNotify_CmdId>() {
  return ::proto::EvtAvatarExitFocusNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtAvatarUpdateFocusNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtAvatarUpdateFocusNotify_CmdId>() {
  return ::proto::EvtAvatarUpdateFocusNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EntityAuthorityChangeNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EntityAuthorityChangeNotify_CmdId>() {
  return ::proto::EntityAuthorityChangeNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarBuffAddNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarBuffAddNotify_CmdId>() {
  return ::proto::AvatarBuffAddNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarBuffDelNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarBuffDelNotify_CmdId>() {
  return ::proto::AvatarBuffDelNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::MonsterAlertChangeNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MonsterAlertChangeNotify_CmdId>() {
  return ::proto::MonsterAlertChangeNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::MonsterForceAlertNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MonsterForceAlertNotify_CmdId>() {
  return ::proto::MonsterForceAlertNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarEnterElementViewNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarEnterElementViewNotify_CmdId>() {
  return ::proto::AvatarEnterElementViewNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::TriggerCreateGadgetToEquipPartNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TriggerCreateGadgetToEquipPartNotify_CmdId>() {
  return ::proto::TriggerCreateGadgetToEquipPartNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtEntityRenderersChangedNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtEntityRenderersChangedNotify_CmdId>() {
  return ::proto::EvtEntityRenderersChangedNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AnimatorForceSetAirMoveNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AnimatorForceSetAirMoveNotify_CmdId>() {
  return ::proto::AnimatorForceSetAirMoveNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtAiSyncSkillCdNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtAiSyncSkillCdNotify_CmdId>() {
  return ::proto::EvtAiSyncSkillCdNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtBeingHitsCombineNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtBeingHitsCombineNotify_CmdId>() {
  return ::proto::EvtBeingHitsCombineNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtAvatarSitDownNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtAvatarSitDownNotify_CmdId>() {
  return ::proto::EvtAvatarSitDownNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtAvatarStandUpNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtAvatarStandUpNotify_CmdId>() {
  return ::proto::EvtAvatarStandUpNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CreateMassiveEntityReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CreateMassiveEntityReq_CmdId>() {
  return ::proto::CreateMassiveEntityReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CreateMassiveEntityRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CreateMassiveEntityRsp_CmdId>() {
  return ::proto::CreateMassiveEntityRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CreateMassiveEntityNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CreateMassiveEntityNotify_CmdId>() {
  return ::proto::CreateMassiveEntityNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::DestroyMassiveEntityNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DestroyMassiveEntityNotify_CmdId>() {
  return ::proto::DestroyMassiveEntityNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::MassiveEntityStateChangedNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MassiveEntityStateChangedNotify_CmdId>() {
  return ::proto::MassiveEntityStateChangedNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SyncTeamEntityNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SyncTeamEntityNotify_CmdId>() {
  return ::proto::SyncTeamEntityNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::DelTeamEntityNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DelTeamEntityNotify_CmdId>() {
  return ::proto::DelTeamEntityNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CombatInvocationsNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CombatInvocationsNotify_CmdId>() {
  return ::proto::CombatInvocationsNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ServerBuffChangeNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ServerBuffChangeNotify_CmdId>() {
  return ::proto::ServerBuffChangeNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ServerBuffChangeNotify_ServerBuffChangeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ServerBuffChangeNotify_ServerBuffChangeType>() {
  return ::proto::ServerBuffChangeNotify_ServerBuffChangeType_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtAiSyncCombatThreatInfoNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtAiSyncCombatThreatInfoNotify_CmdId>() {
  return ::proto::EvtAiSyncCombatThreatInfoNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::MassiveEntityElementOpBatchNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MassiveEntityElementOpBatchNotify_CmdId>() {
  return ::proto::MassiveEntityElementOpBatchNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EntityAiSyncNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EntityAiSyncNotify_CmdId>() {
  return ::proto::EntityAiSyncNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::LuaSetOptionNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::LuaSetOptionNotify_CmdId>() {
  return ::proto::LuaSetOptionNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::LuaSetOptionNotify_LuaOptionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::LuaSetOptionNotify_LuaOptionType>() {
  return ::proto::LuaSetOptionNotify_LuaOptionType_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtDestroyServerGadgetNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtDestroyServerGadgetNotify_CmdId>() {
  return ::proto::EvtDestroyServerGadgetNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EntityAiKillSelfNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EntityAiKillSelfNotify_CmdId>() {
  return ::proto::EntityAiKillSelfNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtAvatarLockChairReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtAvatarLockChairReq_CmdId>() {
  return ::proto::EvtAvatarLockChairReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtAvatarLockChairRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtAvatarLockChairRsp_CmdId>() {
  return ::proto::EvtAvatarLockChairRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ReportFightAntiCheatNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ReportFightAntiCheatNotify_CmdId>() {
  return ::proto::ReportFightAntiCheatNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtBeingHealedNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtBeingHealedNotify_CmdId>() {
  return ::proto::EvtBeingHealedNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtLocalGadgetOwnerLeaveSceneNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtLocalGadgetOwnerLeaveSceneNotify_CmdId>() {
  return ::proto::EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ForwardType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ForwardType>() {
  return ::proto::ForwardType_descriptor();
}
template <> struct is_proto_enum< ::proto::HitColliderType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::HitColliderType>() {
  return ::proto::HitColliderType_descriptor();
}
template <> struct is_proto_enum< ::proto::CombatTypeArgument> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CombatTypeArgument>() {
  return ::proto::CombatTypeArgument_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5ffight_2eproto__INCLUDED
