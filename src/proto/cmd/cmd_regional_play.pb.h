// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_regional_play.proto

#ifndef PROTOBUF_cmd_2fcmd_5fregional_5fplay_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fregional_5fplay_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class DeathZoneInfo;
class DeathZoneInfoDefaultTypeInternal;
extern DeathZoneInfoDefaultTypeInternal _DeathZoneInfo_default_instance_;
class DeathZoneInfoNotify;
class DeathZoneInfoNotifyDefaultTypeInternal;
extern DeathZoneInfoNotifyDefaultTypeInternal _DeathZoneInfoNotify_default_instance_;
class PlayerDeathZoneNotify;
class PlayerDeathZoneNotifyDefaultTypeInternal;
extern PlayerDeathZoneNotifyDefaultTypeInternal _PlayerDeathZoneNotify_default_instance_;
class RegionalPlayInfoNotify;
class RegionalPlayInfoNotifyDefaultTypeInternal;
extern RegionalPlayInfoNotifyDefaultTypeInternal _RegionalPlayInfoNotify_default_instance_;
class RegionalPlayVar;
class RegionalPlayVarDefaultTypeInternal;
extern RegionalPlayVarDefaultTypeInternal _RegionalPlayVar_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fregional_5fplay_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fregional_5fplay_2eproto

enum RegionalPlayInfoNotify_CmdId {
  RegionalPlayInfoNotify_CmdId_NONE = 0,
  RegionalPlayInfoNotify_CmdId_CMD_ID = 6276,
  RegionalPlayInfoNotify_CmdId_ENET_CHANNEL_ID = 0,
  RegionalPlayInfoNotify_CmdId_ENET_IS_RELIABLE = 1,
  RegionalPlayInfoNotify_CmdId_RegionalPlayInfoNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RegionalPlayInfoNotify_CmdId_RegionalPlayInfoNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RegionalPlayInfoNotify_CmdId_IsValid(int value);
const RegionalPlayInfoNotify_CmdId RegionalPlayInfoNotify_CmdId_CmdId_MIN = RegionalPlayInfoNotify_CmdId_NONE;
const RegionalPlayInfoNotify_CmdId RegionalPlayInfoNotify_CmdId_CmdId_MAX = RegionalPlayInfoNotify_CmdId_CMD_ID;
const int RegionalPlayInfoNotify_CmdId_CmdId_ARRAYSIZE = RegionalPlayInfoNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* RegionalPlayInfoNotify_CmdId_descriptor();
inline const ::std::string& RegionalPlayInfoNotify_CmdId_Name(RegionalPlayInfoNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    RegionalPlayInfoNotify_CmdId_descriptor(), value);
}
inline bool RegionalPlayInfoNotify_CmdId_Parse(
    const ::std::string& name, RegionalPlayInfoNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RegionalPlayInfoNotify_CmdId>(
    RegionalPlayInfoNotify_CmdId_descriptor(), name, value);
}
enum DeathZoneInfoNotify_CmdId {
  DeathZoneInfoNotify_CmdId_NONE = 0,
  DeathZoneInfoNotify_CmdId_CMD_ID = 6268,
  DeathZoneInfoNotify_CmdId_ENET_CHANNEL_ID = 0,
  DeathZoneInfoNotify_CmdId_ENET_IS_RELIABLE = 1,
  DeathZoneInfoNotify_CmdId_DeathZoneInfoNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DeathZoneInfoNotify_CmdId_DeathZoneInfoNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DeathZoneInfoNotify_CmdId_IsValid(int value);
const DeathZoneInfoNotify_CmdId DeathZoneInfoNotify_CmdId_CmdId_MIN = DeathZoneInfoNotify_CmdId_NONE;
const DeathZoneInfoNotify_CmdId DeathZoneInfoNotify_CmdId_CmdId_MAX = DeathZoneInfoNotify_CmdId_CMD_ID;
const int DeathZoneInfoNotify_CmdId_CmdId_ARRAYSIZE = DeathZoneInfoNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* DeathZoneInfoNotify_CmdId_descriptor();
inline const ::std::string& DeathZoneInfoNotify_CmdId_Name(DeathZoneInfoNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    DeathZoneInfoNotify_CmdId_descriptor(), value);
}
inline bool DeathZoneInfoNotify_CmdId_Parse(
    const ::std::string& name, DeathZoneInfoNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeathZoneInfoNotify_CmdId>(
    DeathZoneInfoNotify_CmdId_descriptor(), name, value);
}
enum PlayerDeathZoneNotify_CmdId {
  PlayerDeathZoneNotify_CmdId_NONE = 0,
  PlayerDeathZoneNotify_CmdId_CMD_ID = 6275,
  PlayerDeathZoneNotify_CmdId_ENET_CHANNEL_ID = 0,
  PlayerDeathZoneNotify_CmdId_ENET_IS_RELIABLE = 1,
  PlayerDeathZoneNotify_CmdId_PlayerDeathZoneNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerDeathZoneNotify_CmdId_PlayerDeathZoneNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerDeathZoneNotify_CmdId_IsValid(int value);
const PlayerDeathZoneNotify_CmdId PlayerDeathZoneNotify_CmdId_CmdId_MIN = PlayerDeathZoneNotify_CmdId_NONE;
const PlayerDeathZoneNotify_CmdId PlayerDeathZoneNotify_CmdId_CmdId_MAX = PlayerDeathZoneNotify_CmdId_CMD_ID;
const int PlayerDeathZoneNotify_CmdId_CmdId_ARRAYSIZE = PlayerDeathZoneNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerDeathZoneNotify_CmdId_descriptor();
inline const ::std::string& PlayerDeathZoneNotify_CmdId_Name(PlayerDeathZoneNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerDeathZoneNotify_CmdId_descriptor(), value);
}
inline bool PlayerDeathZoneNotify_CmdId_Parse(
    const ::std::string& name, PlayerDeathZoneNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerDeathZoneNotify_CmdId>(
    PlayerDeathZoneNotify_CmdId_descriptor(), name, value);
}
// ===================================================================

class RegionalPlayVar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RegionalPlayVar) */ {
 public:
  RegionalPlayVar();
  virtual ~RegionalPlayVar();

  RegionalPlayVar(const RegionalPlayVar& from);

  inline RegionalPlayVar& operator=(const RegionalPlayVar& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegionalPlayVar(RegionalPlayVar&& from) noexcept
    : RegionalPlayVar() {
    *this = ::std::move(from);
  }

  inline RegionalPlayVar& operator=(RegionalPlayVar&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegionalPlayVar& default_instance();

  static inline const RegionalPlayVar* internal_default_instance() {
    return reinterpret_cast<const RegionalPlayVar*>(
               &_RegionalPlayVar_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RegionalPlayVar* other);
  friend void swap(RegionalPlayVar& a, RegionalPlayVar& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegionalPlayVar* New() const PROTOBUF_FINAL { return New(NULL); }

  RegionalPlayVar* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegionalPlayVar& from);
  void MergeFrom(const RegionalPlayVar& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegionalPlayVar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  float value() const;
  void set_value(float value);

  // float base_value = 10;
  void clear_base_value();
  static const int kBaseValueFieldNumber = 10;
  float base_value() const;
  void set_base_value(float value);

  // float max_value = 11;
  void clear_max_value();
  static const int kMaxValueFieldNumber = 11;
  float max_value() const;
  void set_max_value(float value);

  // uint32 type = 15;
  void clear_type();
  static const int kTypeFieldNumber = 15;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.RegionalPlayVar)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float value_;
  float base_value_;
  float max_value_;
  ::google::protobuf::uint32 type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fregional_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegionalPlayInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RegionalPlayInfoNotify) */ {
 public:
  RegionalPlayInfoNotify();
  virtual ~RegionalPlayInfoNotify();

  RegionalPlayInfoNotify(const RegionalPlayInfoNotify& from);

  inline RegionalPlayInfoNotify& operator=(const RegionalPlayInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegionalPlayInfoNotify(RegionalPlayInfoNotify&& from) noexcept
    : RegionalPlayInfoNotify() {
    *this = ::std::move(from);
  }

  inline RegionalPlayInfoNotify& operator=(RegionalPlayInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegionalPlayInfoNotify& default_instance();

  static inline const RegionalPlayInfoNotify* internal_default_instance() {
    return reinterpret_cast<const RegionalPlayInfoNotify*>(
               &_RegionalPlayInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RegionalPlayInfoNotify* other);
  friend void swap(RegionalPlayInfoNotify& a, RegionalPlayInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegionalPlayInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  RegionalPlayInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegionalPlayInfoNotify& from);
  void MergeFrom(const RegionalPlayInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegionalPlayInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RegionalPlayInfoNotify_CmdId CmdId;
  static const CmdId NONE =
    RegionalPlayInfoNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    RegionalPlayInfoNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    RegionalPlayInfoNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    RegionalPlayInfoNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return RegionalPlayInfoNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    RegionalPlayInfoNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    RegionalPlayInfoNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    RegionalPlayInfoNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return RegionalPlayInfoNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return RegionalPlayInfoNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return RegionalPlayInfoNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.RegionalPlayVar var_list = 5;
  int var_list_size() const;
  void clear_var_list();
  static const int kVarListFieldNumber = 5;
  const ::proto::RegionalPlayVar& var_list(int index) const;
  ::proto::RegionalPlayVar* mutable_var_list(int index);
  ::proto::RegionalPlayVar* add_var_list();
  ::google::protobuf::RepeatedPtrField< ::proto::RegionalPlayVar >*
      mutable_var_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::RegionalPlayVar >&
      var_list() const;

  // string play_name = 9;
  void clear_play_name();
  static const int kPlayNameFieldNumber = 9;
  const ::std::string& play_name() const;
  void set_play_name(const ::std::string& value);
  #if LANG_CXX11
  void set_play_name(::std::string&& value);
  #endif
  void set_play_name(const char* value);
  void set_play_name(const char* value, size_t size);
  ::std::string* mutable_play_name();
  ::std::string* release_play_name();
  void set_allocated_play_name(::std::string* play_name);

  // uint32 play_type = 7;
  void clear_play_type();
  static const int kPlayTypeFieldNumber = 7;
  ::google::protobuf::uint32 play_type() const;
  void set_play_type(::google::protobuf::uint32 value);

  // bool is_enabled = 15;
  void clear_is_enabled();
  static const int kIsEnabledFieldNumber = 15;
  bool is_enabled() const;
  void set_is_enabled(bool value);

  // bool is_in_region = 4;
  void clear_is_in_region();
  static const int kIsInRegionFieldNumber = 4;
  bool is_in_region() const;
  void set_is_in_region(bool value);

  // @@protoc_insertion_point(class_scope:proto.RegionalPlayInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::RegionalPlayVar > var_list_;
  ::google::protobuf::internal::ArenaStringPtr play_name_;
  ::google::protobuf::uint32 play_type_;
  bool is_enabled_;
  bool is_in_region_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fregional_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeathZoneInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DeathZoneInfo) */ {
 public:
  DeathZoneInfo();
  virtual ~DeathZoneInfo();

  DeathZoneInfo(const DeathZoneInfo& from);

  inline DeathZoneInfo& operator=(const DeathZoneInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeathZoneInfo(DeathZoneInfo&& from) noexcept
    : DeathZoneInfo() {
    *this = ::std::move(from);
  }

  inline DeathZoneInfo& operator=(DeathZoneInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeathZoneInfo& default_instance();

  static inline const DeathZoneInfo* internal_default_instance() {
    return reinterpret_cast<const DeathZoneInfo*>(
               &_DeathZoneInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(DeathZoneInfo* other);
  friend void swap(DeathZoneInfo& a, DeathZoneInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeathZoneInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DeathZoneInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeathZoneInfo& from);
  void MergeFrom(const DeathZoneInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeathZoneInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_open = 9;
  void clear_is_open();
  static const int kIsOpenFieldNumber = 9;
  bool is_open() const;
  void set_is_open(bool value);

  // uint32 id = 14;
  void clear_id();
  static const int kIdFieldNumber = 14;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DeathZoneInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_open_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fregional_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeathZoneInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DeathZoneInfoNotify) */ {
 public:
  DeathZoneInfoNotify();
  virtual ~DeathZoneInfoNotify();

  DeathZoneInfoNotify(const DeathZoneInfoNotify& from);

  inline DeathZoneInfoNotify& operator=(const DeathZoneInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeathZoneInfoNotify(DeathZoneInfoNotify&& from) noexcept
    : DeathZoneInfoNotify() {
    *this = ::std::move(from);
  }

  inline DeathZoneInfoNotify& operator=(DeathZoneInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeathZoneInfoNotify& default_instance();

  static inline const DeathZoneInfoNotify* internal_default_instance() {
    return reinterpret_cast<const DeathZoneInfoNotify*>(
               &_DeathZoneInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(DeathZoneInfoNotify* other);
  friend void swap(DeathZoneInfoNotify& a, DeathZoneInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeathZoneInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DeathZoneInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeathZoneInfoNotify& from);
  void MergeFrom(const DeathZoneInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeathZoneInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DeathZoneInfoNotify_CmdId CmdId;
  static const CmdId NONE =
    DeathZoneInfoNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    DeathZoneInfoNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    DeathZoneInfoNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    DeathZoneInfoNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return DeathZoneInfoNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    DeathZoneInfoNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    DeathZoneInfoNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    DeathZoneInfoNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return DeathZoneInfoNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return DeathZoneInfoNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return DeathZoneInfoNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.DeathZoneInfo death_zone_info_list = 8;
  int death_zone_info_list_size() const;
  void clear_death_zone_info_list();
  static const int kDeathZoneInfoListFieldNumber = 8;
  const ::proto::DeathZoneInfo& death_zone_info_list(int index) const;
  ::proto::DeathZoneInfo* mutable_death_zone_info_list(int index);
  ::proto::DeathZoneInfo* add_death_zone_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::DeathZoneInfo >*
      mutable_death_zone_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::DeathZoneInfo >&
      death_zone_info_list() const;

  // @@protoc_insertion_point(class_scope:proto.DeathZoneInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::DeathZoneInfo > death_zone_info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fregional_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerDeathZoneNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerDeathZoneNotify) */ {
 public:
  PlayerDeathZoneNotify();
  virtual ~PlayerDeathZoneNotify();

  PlayerDeathZoneNotify(const PlayerDeathZoneNotify& from);

  inline PlayerDeathZoneNotify& operator=(const PlayerDeathZoneNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerDeathZoneNotify(PlayerDeathZoneNotify&& from) noexcept
    : PlayerDeathZoneNotify() {
    *this = ::std::move(from);
  }

  inline PlayerDeathZoneNotify& operator=(PlayerDeathZoneNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerDeathZoneNotify& default_instance();

  static inline const PlayerDeathZoneNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerDeathZoneNotify*>(
               &_PlayerDeathZoneNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(PlayerDeathZoneNotify* other);
  friend void swap(PlayerDeathZoneNotify& a, PlayerDeathZoneNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerDeathZoneNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerDeathZoneNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerDeathZoneNotify& from);
  void MergeFrom(const PlayerDeathZoneNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerDeathZoneNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerDeathZoneNotify_CmdId CmdId;
  static const CmdId NONE =
    PlayerDeathZoneNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerDeathZoneNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerDeathZoneNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerDeathZoneNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerDeathZoneNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerDeathZoneNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerDeathZoneNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerDeathZoneNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerDeathZoneNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerDeathZoneNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerDeathZoneNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 cur_death_zone_id = 8;
  void clear_cur_death_zone_id();
  static const int kCurDeathZoneIdFieldNumber = 8;
  ::google::protobuf::uint32 cur_death_zone_id() const;
  void set_cur_death_zone_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerDeathZoneNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cur_death_zone_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fregional_5fplay_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================


// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::RegionalPlayInfoNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::RegionalPlayInfoNotify_CmdId>() {
  return ::proto::RegionalPlayInfoNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::DeathZoneInfoNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DeathZoneInfoNotify_CmdId>() {
  return ::proto::DeathZoneInfoNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerDeathZoneNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerDeathZoneNotify_CmdId>() {
  return ::proto::PlayerDeathZoneNotify_CmdId_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fregional_5fplay_2eproto__INCLUDED
