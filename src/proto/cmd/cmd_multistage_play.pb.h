// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_multistage_play.proto

#ifndef PROTOBUF_cmd_2fcmd_5fmultistage_5fplay_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fmultistage_5fplay_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class BrickBreakerPlayerBattleInfo;
class BrickBreakerPlayerBattleInfoDefaultTypeInternal;
extern BrickBreakerPlayerBattleInfoDefaultTypeInternal _BrickBreakerPlayerBattleInfo_default_instance_;
class BrickBreakerPlayerReadyNotify;
class BrickBreakerPlayerReadyNotifyDefaultTypeInternal;
extern BrickBreakerPlayerReadyNotifyDefaultTypeInternal _BrickBreakerPlayerReadyNotify_default_instance_;
class BrickBreakerPlayerSetAvatarNotify;
class BrickBreakerPlayerSetAvatarNotifyDefaultTypeInternal;
extern BrickBreakerPlayerSetAvatarNotifyDefaultTypeInternal _BrickBreakerPlayerSetAvatarNotify_default_instance_;
class BrickBreakerPlayerSetChangingNotify;
class BrickBreakerPlayerSetChangingNotifyDefaultTypeInternal;
extern BrickBreakerPlayerSetChangingNotifyDefaultTypeInternal _BrickBreakerPlayerSetChangingNotify_default_instance_;
class BrickBreakerPlayerSetSkillNotify;
class BrickBreakerPlayerSetSkillNotifyDefaultTypeInternal;
extern BrickBreakerPlayerSetSkillNotifyDefaultTypeInternal _BrickBreakerPlayerSetSkillNotify_default_instance_;
class BrickBreakerSelectAvatarReq;
class BrickBreakerSelectAvatarReqDefaultTypeInternal;
extern BrickBreakerSelectAvatarReqDefaultTypeInternal _BrickBreakerSelectAvatarReq_default_instance_;
class BrickBreakerSelectAvatarRsp;
class BrickBreakerSelectAvatarRspDefaultTypeInternal;
extern BrickBreakerSelectAvatarRspDefaultTypeInternal _BrickBreakerSelectAvatarRsp_default_instance_;
class BrickBreakerSelectSkillReq;
class BrickBreakerSelectSkillReqDefaultTypeInternal;
extern BrickBreakerSelectSkillReqDefaultTypeInternal _BrickBreakerSelectSkillReq_default_instance_;
class BrickBreakerSelectSkillRsp;
class BrickBreakerSelectSkillRspDefaultTypeInternal;
extern BrickBreakerSelectSkillRspDefaultTypeInternal _BrickBreakerSelectSkillRsp_default_instance_;
class BrickBreakerSetChangingReq;
class BrickBreakerSetChangingReqDefaultTypeInternal;
extern BrickBreakerSetChangingReqDefaultTypeInternal _BrickBreakerSetChangingReq_default_instance_;
class BrickBreakerSetChangingRsp;
class BrickBreakerSetChangingRspDefaultTypeInternal;
extern BrickBreakerSetChangingRspDefaultTypeInternal _BrickBreakerSetChangingRsp_default_instance_;
class BrickBreakerSetReadyReq;
class BrickBreakerSetReadyReqDefaultTypeInternal;
extern BrickBreakerSetReadyReqDefaultTypeInternal _BrickBreakerSetReadyReq_default_instance_;
class BrickBreakerSetReadyRsp;
class BrickBreakerSetReadyRspDefaultTypeInternal;
extern BrickBreakerSetReadyRspDefaultTypeInternal _BrickBreakerSetReadyRsp_default_instance_;
class BrickBreakerStageInfo;
class BrickBreakerStageInfoDefaultTypeInternal;
extern BrickBreakerStageInfoDefaultTypeInternal _BrickBreakerStageInfo_default_instance_;
class CharAmusementAvatarInfo;
class CharAmusementAvatarInfoDefaultTypeInternal;
extern CharAmusementAvatarInfoDefaultTypeInternal _CharAmusementAvatarInfo_default_instance_;
class CharAmusementInfo;
class CharAmusementInfoDefaultTypeInternal;
extern CharAmusementInfoDefaultTypeInternal _CharAmusementInfo_default_instance_;
class ChessCardInfo;
class ChessCardInfoDefaultTypeInternal;
extern ChessCardInfoDefaultTypeInternal _ChessCardInfo_default_instance_;
class ChessEntranceDetailInfo;
class ChessEntranceDetailInfoDefaultTypeInternal;
extern ChessEntranceDetailInfoDefaultTypeInternal _ChessEntranceDetailInfo_default_instance_;
class ChessEntranceInfo;
class ChessEntranceInfoDefaultTypeInternal;
extern ChessEntranceInfoDefaultTypeInternal _ChessEntranceInfo_default_instance_;
class ChessEscapedMonstersNotify;
class ChessEscapedMonstersNotifyDefaultTypeInternal;
extern ChessEscapedMonstersNotifyDefaultTypeInternal _ChessEscapedMonstersNotify_default_instance_;
class ChessLeftMonstersNotify;
class ChessLeftMonstersNotifyDefaultTypeInternal;
extern ChessLeftMonstersNotifyDefaultTypeInternal _ChessLeftMonstersNotify_default_instance_;
class ChessManualRefreshCardsReq;
class ChessManualRefreshCardsReqDefaultTypeInternal;
extern ChessManualRefreshCardsReqDefaultTypeInternal _ChessManualRefreshCardsReq_default_instance_;
class ChessManualRefreshCardsRsp;
class ChessManualRefreshCardsRspDefaultTypeInternal;
extern ChessManualRefreshCardsRspDefaultTypeInternal _ChessManualRefreshCardsRsp_default_instance_;
class ChessMonsterInfo;
class ChessMonsterInfoDefaultTypeInternal;
extern ChessMonsterInfoDefaultTypeInternal _ChessMonsterInfo_default_instance_;
class ChessMysteryInfo;
class ChessMysteryInfoDefaultTypeInternal;
extern ChessMysteryInfoDefaultTypeInternal _ChessMysteryInfo_default_instance_;
class ChessMysteryInfo_DetailInfoMapEntry;
class ChessMysteryInfo_DetailInfoMapEntryDefaultTypeInternal;
extern ChessMysteryInfo_DetailInfoMapEntryDefaultTypeInternal _ChessMysteryInfo_DetailInfoMapEntry_default_instance_;
class ChessMysteryInfo_EntrancePointMapEntry;
class ChessMysteryInfo_EntrancePointMapEntryDefaultTypeInternal;
extern ChessMysteryInfo_EntrancePointMapEntryDefaultTypeInternal _ChessMysteryInfo_EntrancePointMapEntry_default_instance_;
class ChessNormalCardInfo;
class ChessNormalCardInfoDefaultTypeInternal;
extern ChessNormalCardInfoDefaultTypeInternal _ChessNormalCardInfo_default_instance_;
class ChessPickCardNotify;
class ChessPickCardNotifyDefaultTypeInternal;
extern ChessPickCardNotifyDefaultTypeInternal _ChessPickCardNotify_default_instance_;
class ChessPickCardReq;
class ChessPickCardReqDefaultTypeInternal;
extern ChessPickCardReqDefaultTypeInternal _ChessPickCardReq_default_instance_;
class ChessPickCardRsp;
class ChessPickCardRspDefaultTypeInternal;
extern ChessPickCardRspDefaultTypeInternal _ChessPickCardRsp_default_instance_;
class ChessPlayerInfo;
class ChessPlayerInfoDefaultTypeInternal;
extern ChessPlayerInfoDefaultTypeInternal _ChessPlayerInfo_default_instance_;
class ChessPlayerInfoNotify;
class ChessPlayerInfoNotifyDefaultTypeInternal;
extern ChessPlayerInfoNotifyDefaultTypeInternal _ChessPlayerInfoNotify_default_instance_;
class ChessSelectedCardsNotify;
class ChessSelectedCardsNotifyDefaultTypeInternal;
extern ChessSelectedCardsNotifyDefaultTypeInternal _ChessSelectedCardsNotify_default_instance_;
class CoinCollectPlayerInfo;
class CoinCollectPlayerInfoDefaultTypeInternal;
extern CoinCollectPlayerInfoDefaultTypeInternal _CoinCollectPlayerInfo_default_instance_;
class CoinCollectPrepareStageNotify;
class CoinCollectPrepareStageNotifyDefaultTypeInternal;
extern CoinCollectPrepareStageNotifyDefaultTypeInternal _CoinCollectPrepareStageNotify_default_instance_;
class CoinCollectStageInfo;
class CoinCollectStageInfoDefaultTypeInternal;
extern CoinCollectStageInfoDefaultTypeInternal _CoinCollectStageInfo_default_instance_;
class CoinCollectTeamAvatarInfo;
class CoinCollectTeamAvatarInfoDefaultTypeInternal;
extern CoinCollectTeamAvatarInfoDefaultTypeInternal _CoinCollectTeamAvatarInfo_default_instance_;
class FleurFairBossSettleInfo;
class FleurFairBossSettleInfoDefaultTypeInternal;
extern FleurFairBossSettleInfoDefaultTypeInternal _FleurFairBossSettleInfo_default_instance_;
class FleurFairBuffEnergyNotify;
class FleurFairBuffEnergyNotifyDefaultTypeInternal;
extern FleurFairBuffEnergyNotifyDefaultTypeInternal _FleurFairBuffEnergyNotify_default_instance_;
class FleurFairFinishGalleryStageNotify;
class FleurFairFinishGalleryStageNotifyDefaultTypeInternal;
extern FleurFairFinishGalleryStageNotifyDefaultTypeInternal _FleurFairFinishGalleryStageNotify_default_instance_;
class FleurFairGallerySettleInfo;
class FleurFairGallerySettleInfoDefaultTypeInternal;
extern FleurFairGallerySettleInfoDefaultTypeInternal _FleurFairGallerySettleInfo_default_instance_;
class FleurFairGallerySettleInfo_EnergyStatMapEntry;
class FleurFairGallerySettleInfo_EnergyStatMapEntryDefaultTypeInternal;
extern FleurFairGallerySettleInfo_EnergyStatMapEntryDefaultTypeInternal _FleurFairGallerySettleInfo_EnergyStatMapEntry_default_instance_;
class FleurFairPlayerStatInfo;
class FleurFairPlayerStatInfoDefaultTypeInternal;
extern FleurFairPlayerStatInfoDefaultTypeInternal _FleurFairPlayerStatInfo_default_instance_;
class FleurFairStageSettleNotify;
class FleurFairStageSettleNotifyDefaultTypeInternal;
extern FleurFairStageSettleNotifyDefaultTypeInternal _FleurFairStageSettleNotify_default_instance_;
class GlobalBuildingInfoNotify;
class GlobalBuildingInfoNotifyDefaultTypeInternal;
extern GlobalBuildingInfoNotifyDefaultTypeInternal _GlobalBuildingInfoNotify_default_instance_;
class HideAndSeekPlayerBattleInfo;
class HideAndSeekPlayerBattleInfoDefaultTypeInternal;
extern HideAndSeekPlayerBattleInfoDefaultTypeInternal _HideAndSeekPlayerBattleInfo_default_instance_;
class HideAndSeekPlayerReadyNotify;
class HideAndSeekPlayerReadyNotifyDefaultTypeInternal;
extern HideAndSeekPlayerReadyNotifyDefaultTypeInternal _HideAndSeekPlayerReadyNotify_default_instance_;
class HideAndSeekPlayerSetAvatarNotify;
class HideAndSeekPlayerSetAvatarNotifyDefaultTypeInternal;
extern HideAndSeekPlayerSetAvatarNotifyDefaultTypeInternal _HideAndSeekPlayerSetAvatarNotify_default_instance_;
class HideAndSeekSelectAvatarReq;
class HideAndSeekSelectAvatarReqDefaultTypeInternal;
extern HideAndSeekSelectAvatarReqDefaultTypeInternal _HideAndSeekSelectAvatarReq_default_instance_;
class HideAndSeekSelectAvatarRsp;
class HideAndSeekSelectAvatarRspDefaultTypeInternal;
extern HideAndSeekSelectAvatarRspDefaultTypeInternal _HideAndSeekSelectAvatarRsp_default_instance_;
class HideAndSeekSetReadyReq;
class HideAndSeekSetReadyReqDefaultTypeInternal;
extern HideAndSeekSetReadyReqDefaultTypeInternal _HideAndSeekSetReadyReq_default_instance_;
class HideAndSeekSetReadyRsp;
class HideAndSeekSetReadyRspDefaultTypeInternal;
extern HideAndSeekSetReadyRspDefaultTypeInternal _HideAndSeekSetReadyRsp_default_instance_;
class HideAndSeekSettleInfo;
class HideAndSeekSettleInfoDefaultTypeInternal;
extern HideAndSeekSettleInfoDefaultTypeInternal _HideAndSeekSettleInfo_default_instance_;
class HideAndSeekSettleNotify;
class HideAndSeekSettleNotifyDefaultTypeInternal;
extern HideAndSeekSettleNotifyDefaultTypeInternal _HideAndSeekSettleNotify_default_instance_;
class HideAndSeekStageInfo;
class HideAndSeekStageInfoDefaultTypeInternal;
extern HideAndSeekStageInfoDefaultTypeInternal _HideAndSeekStageInfo_default_instance_;
class HideAndSeekStageInfo_BattleInfoMapEntry;
class HideAndSeekStageInfo_BattleInfoMapEntryDefaultTypeInternal;
extern HideAndSeekStageInfo_BattleInfoMapEntryDefaultTypeInternal _HideAndSeekStageInfo_BattleInfoMapEntry_default_instance_;
class InBattleChessInfo;
class InBattleChessInfoDefaultTypeInternal;
extern InBattleChessInfoDefaultTypeInternal _InBattleChessInfo_default_instance_;
class InBattleChessInfo_PlayerInfoMapEntry;
class InBattleChessInfo_PlayerInfoMapEntryDefaultTypeInternal;
extern InBattleChessInfo_PlayerInfoMapEntryDefaultTypeInternal _InBattleChessInfo_PlayerInfoMapEntry_default_instance_;
class InBattleChessSettleInfo;
class InBattleChessSettleInfoDefaultTypeInternal;
extern InBattleChessSettleInfoDefaultTypeInternal _InBattleChessSettleInfo_default_instance_;
class InBattleFleurFairInfo;
class InBattleFleurFairInfoDefaultTypeInternal;
extern InBattleFleurFairInfoDefaultTypeInternal _InBattleFleurFairInfo_default_instance_;
class InBattleIrodoriChessInfo;
class InBattleIrodoriChessInfoDefaultTypeInternal;
extern InBattleIrodoriChessInfoDefaultTypeInternal _InBattleIrodoriChessInfo_default_instance_;
class InBattleIrodoriChessSettleInfo;
class InBattleIrodoriChessSettleInfoDefaultTypeInternal;
extern InBattleIrodoriChessSettleInfoDefaultTypeInternal _InBattleIrodoriChessSettleInfo_default_instance_;
class InBattleMechanicusBuildingInfo;
class InBattleMechanicusBuildingInfoDefaultTypeInternal;
extern InBattleMechanicusBuildingInfoDefaultTypeInternal _InBattleMechanicusBuildingInfo_default_instance_;
class InBattleMechanicusBuildingPointsNotify;
class InBattleMechanicusBuildingPointsNotifyDefaultTypeInternal;
extern InBattleMechanicusBuildingPointsNotifyDefaultTypeInternal _InBattleMechanicusBuildingPointsNotify_default_instance_;
class InBattleMechanicusBuildingPointsNotify_PlayerBuildingPointsMapEntry;
class InBattleMechanicusBuildingPointsNotify_PlayerBuildingPointsMapEntryDefaultTypeInternal;
extern InBattleMechanicusBuildingPointsNotify_PlayerBuildingPointsMapEntryDefaultTypeInternal _InBattleMechanicusBuildingPointsNotify_PlayerBuildingPointsMapEntry_default_instance_;
class InBattleMechanicusCardInfo;
class InBattleMechanicusCardInfoDefaultTypeInternal;
extern InBattleMechanicusCardInfoDefaultTypeInternal _InBattleMechanicusCardInfo_default_instance_;
class InBattleMechanicusCardResultNotify;
class InBattleMechanicusCardResultNotifyDefaultTypeInternal;
extern InBattleMechanicusCardResultNotifyDefaultTypeInternal _InBattleMechanicusCardResultNotify_default_instance_;
class InBattleMechanicusCardResultNotify_PlayerConfirmedCardMapEntry;
class InBattleMechanicusCardResultNotify_PlayerConfirmedCardMapEntryDefaultTypeInternal;
extern InBattleMechanicusCardResultNotify_PlayerConfirmedCardMapEntryDefaultTypeInternal _InBattleMechanicusCardResultNotify_PlayerConfirmedCardMapEntry_default_instance_;
class InBattleMechanicusConfirmCardNotify;
class InBattleMechanicusConfirmCardNotifyDefaultTypeInternal;
extern InBattleMechanicusConfirmCardNotifyDefaultTypeInternal _InBattleMechanicusConfirmCardNotify_default_instance_;
class InBattleMechanicusConfirmCardReq;
class InBattleMechanicusConfirmCardReqDefaultTypeInternal;
extern InBattleMechanicusConfirmCardReqDefaultTypeInternal _InBattleMechanicusConfirmCardReq_default_instance_;
class InBattleMechanicusConfirmCardRsp;
class InBattleMechanicusConfirmCardRspDefaultTypeInternal;
extern InBattleMechanicusConfirmCardRspDefaultTypeInternal _InBattleMechanicusConfirmCardRsp_default_instance_;
class InBattleMechanicusExcapeMonsterNotify;
class InBattleMechanicusExcapeMonsterNotifyDefaultTypeInternal;
extern InBattleMechanicusExcapeMonsterNotifyDefaultTypeInternal _InBattleMechanicusExcapeMonsterNotify_default_instance_;
class InBattleMechanicusInfo;
class InBattleMechanicusInfoDefaultTypeInternal;
extern InBattleMechanicusInfoDefaultTypeInternal _InBattleMechanicusInfo_default_instance_;
class InBattleMechanicusLeftMonsterNotify;
class InBattleMechanicusLeftMonsterNotifyDefaultTypeInternal;
extern InBattleMechanicusLeftMonsterNotifyDefaultTypeInternal _InBattleMechanicusLeftMonsterNotify_default_instance_;
class InBattleMechanicusMonsterInfo;
class InBattleMechanicusMonsterInfoDefaultTypeInternal;
extern InBattleMechanicusMonsterInfoDefaultTypeInternal _InBattleMechanicusMonsterInfo_default_instance_;
class InBattleMechanicusPickCardNotify;
class InBattleMechanicusPickCardNotifyDefaultTypeInternal;
extern InBattleMechanicusPickCardNotifyDefaultTypeInternal _InBattleMechanicusPickCardNotify_default_instance_;
class InBattleMechanicusPickCardReq;
class InBattleMechanicusPickCardReqDefaultTypeInternal;
extern InBattleMechanicusPickCardReqDefaultTypeInternal _InBattleMechanicusPickCardReq_default_instance_;
class InBattleMechanicusPickCardRsp;
class InBattleMechanicusPickCardRspDefaultTypeInternal;
extern InBattleMechanicusPickCardRspDefaultTypeInternal _InBattleMechanicusPickCardRsp_default_instance_;
class InBattleMechanicusPlayerInfo;
class InBattleMechanicusPlayerInfoDefaultTypeInternal;
extern InBattleMechanicusPlayerInfoDefaultTypeInternal _InBattleMechanicusPlayerInfo_default_instance_;
class InBattleMechanicusSettleInfo;
class InBattleMechanicusSettleInfoDefaultTypeInternal;
extern InBattleMechanicusSettleInfoDefaultTypeInternal _InBattleMechanicusSettleInfo_default_instance_;
class InBattleMechanicusSettleNotify;
class InBattleMechanicusSettleNotifyDefaultTypeInternal;
extern InBattleMechanicusSettleNotifyDefaultTypeInternal _InBattleMechanicusSettleNotify_default_instance_;
class IrodoriChessEntranceDetailInfo;
class IrodoriChessEntranceDetailInfoDefaultTypeInternal;
extern IrodoriChessEntranceDetailInfoDefaultTypeInternal _IrodoriChessEntranceDetailInfo_default_instance_;
class IrodoriChessEntranceInfo;
class IrodoriChessEntranceInfoDefaultTypeInternal;
extern IrodoriChessEntranceInfoDefaultTypeInternal _IrodoriChessEntranceInfo_default_instance_;
class IrodoriChessLeftMonsterNotify;
class IrodoriChessLeftMonsterNotifyDefaultTypeInternal;
extern IrodoriChessLeftMonsterNotifyDefaultTypeInternal _IrodoriChessLeftMonsterNotify_default_instance_;
class IrodoriChessMonsterInfo;
class IrodoriChessMonsterInfoDefaultTypeInternal;
extern IrodoriChessMonsterInfoDefaultTypeInternal _IrodoriChessMonsterInfo_default_instance_;
class IrodoriChessMysteryInfo;
class IrodoriChessMysteryInfoDefaultTypeInternal;
extern IrodoriChessMysteryInfoDefaultTypeInternal _IrodoriChessMysteryInfo_default_instance_;
class IrodoriChessPlayerInfo;
class IrodoriChessPlayerInfoDefaultTypeInternal;
extern IrodoriChessPlayerInfoDefaultTypeInternal _IrodoriChessPlayerInfo_default_instance_;
class IrodoriChessPlayerInfoNotify;
class IrodoriChessPlayerInfoNotifyDefaultTypeInternal;
extern IrodoriChessPlayerInfoNotifyDefaultTypeInternal _IrodoriChessPlayerInfoNotify_default_instance_;
class LanV3BoatSettleInfo;
class LanV3BoatSettleInfoDefaultTypeInternal;
extern LanV3BoatSettleInfoDefaultTypeInternal _LanV3BoatSettleInfo_default_instance_;
class LanV3BoatSettleNotify;
class LanV3BoatSettleNotifyDefaultTypeInternal;
extern LanV3BoatSettleNotifyDefaultTypeInternal _LanV3BoatSettleNotify_default_instance_;
class LanV3BoatStageInfo;
class LanV3BoatStageInfoDefaultTypeInternal;
extern LanV3BoatStageInfoDefaultTypeInternal _LanV3BoatStageInfo_default_instance_;
class MultistagePlayEndNotify;
class MultistagePlayEndNotifyDefaultTypeInternal;
extern MultistagePlayEndNotifyDefaultTypeInternal _MultistagePlayEndNotify_default_instance_;
class MultistagePlayFinishStageReq;
class MultistagePlayFinishStageReqDefaultTypeInternal;
extern MultistagePlayFinishStageReqDefaultTypeInternal _MultistagePlayFinishStageReq_default_instance_;
class MultistagePlayFinishStageRsp;
class MultistagePlayFinishStageRspDefaultTypeInternal;
extern MultistagePlayFinishStageRspDefaultTypeInternal _MultistagePlayFinishStageRsp_default_instance_;
class MultistagePlayInfo;
class MultistagePlayInfoDefaultTypeInternal;
extern MultistagePlayInfoDefaultTypeInternal _MultistagePlayInfo_default_instance_;
class MultistagePlayInfoNotify;
class MultistagePlayInfoNotifyDefaultTypeInternal;
extern MultistagePlayInfoNotifyDefaultTypeInternal _MultistagePlayInfoNotify_default_instance_;
class MultistagePlaySettleNotify;
class MultistagePlaySettleNotifyDefaultTypeInternal;
extern MultistagePlaySettleNotifyDefaultTypeInternal _MultistagePlaySettleNotify_default_instance_;
class MultistagePlayStageEndNotify;
class MultistagePlayStageEndNotifyDefaultTypeInternal;
extern MultistagePlayStageEndNotifyDefaultTypeInternal _MultistagePlayStageEndNotify_default_instance_;
class MultistageSettleWatcherInfo;
class MultistageSettleWatcherInfoDefaultTypeInternal;
extern MultistageSettleWatcherInfoDefaultTypeInternal _MultistageSettleWatcherInfo_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto

enum MultistagePlayInfoNotify_CmdId {
  MultistagePlayInfoNotify_CmdId_NONE = 0,
  MultistagePlayInfoNotify_CmdId_CMD_ID = 5372,
  MultistagePlayInfoNotify_CmdId_ENET_CHANNEL_ID = 0,
  MultistagePlayInfoNotify_CmdId_ENET_IS_RELIABLE = 1,
  MultistagePlayInfoNotify_CmdId_MultistagePlayInfoNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MultistagePlayInfoNotify_CmdId_MultistagePlayInfoNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MultistagePlayInfoNotify_CmdId_IsValid(int value);
const MultistagePlayInfoNotify_CmdId MultistagePlayInfoNotify_CmdId_CmdId_MIN = MultistagePlayInfoNotify_CmdId_NONE;
const MultistagePlayInfoNotify_CmdId MultistagePlayInfoNotify_CmdId_CmdId_MAX = MultistagePlayInfoNotify_CmdId_CMD_ID;
const int MultistagePlayInfoNotify_CmdId_CmdId_ARRAYSIZE = MultistagePlayInfoNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MultistagePlayInfoNotify_CmdId_descriptor();
inline const ::std::string& MultistagePlayInfoNotify_CmdId_Name(MultistagePlayInfoNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MultistagePlayInfoNotify_CmdId_descriptor(), value);
}
inline bool MultistagePlayInfoNotify_CmdId_Parse(
    const ::std::string& name, MultistagePlayInfoNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MultistagePlayInfoNotify_CmdId>(
    MultistagePlayInfoNotify_CmdId_descriptor(), name, value);
}
enum MultistagePlayFinishStageReq_CmdId {
  MultistagePlayFinishStageReq_CmdId_NONE = 0,
  MultistagePlayFinishStageReq_CmdId_CMD_ID = 5398,
  MultistagePlayFinishStageReq_CmdId_ENET_CHANNEL_ID = 0,
  MultistagePlayFinishStageReq_CmdId_ENET_IS_RELIABLE = 1,
  MultistagePlayFinishStageReq_CmdId_IS_ALLOW_CLIENT = 1,
  MultistagePlayFinishStageReq_CmdId_MultistagePlayFinishStageReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MultistagePlayFinishStageReq_CmdId_MultistagePlayFinishStageReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MultistagePlayFinishStageReq_CmdId_IsValid(int value);
const MultistagePlayFinishStageReq_CmdId MultistagePlayFinishStageReq_CmdId_CmdId_MIN = MultistagePlayFinishStageReq_CmdId_NONE;
const MultistagePlayFinishStageReq_CmdId MultistagePlayFinishStageReq_CmdId_CmdId_MAX = MultistagePlayFinishStageReq_CmdId_CMD_ID;
const int MultistagePlayFinishStageReq_CmdId_CmdId_ARRAYSIZE = MultistagePlayFinishStageReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MultistagePlayFinishStageReq_CmdId_descriptor();
inline const ::std::string& MultistagePlayFinishStageReq_CmdId_Name(MultistagePlayFinishStageReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MultistagePlayFinishStageReq_CmdId_descriptor(), value);
}
inline bool MultistagePlayFinishStageReq_CmdId_Parse(
    const ::std::string& name, MultistagePlayFinishStageReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MultistagePlayFinishStageReq_CmdId>(
    MultistagePlayFinishStageReq_CmdId_descriptor(), name, value);
}
enum InBattleMechanicusExcapeMonsterNotify_CmdId {
  InBattleMechanicusExcapeMonsterNotify_CmdId_NONE = 0,
  InBattleMechanicusExcapeMonsterNotify_CmdId_CMD_ID = 5307,
  InBattleMechanicusExcapeMonsterNotify_CmdId_ENET_CHANNEL_ID = 0,
  InBattleMechanicusExcapeMonsterNotify_CmdId_ENET_IS_RELIABLE = 1,
  InBattleMechanicusExcapeMonsterNotify_CmdId_InBattleMechanicusExcapeMonsterNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InBattleMechanicusExcapeMonsterNotify_CmdId_InBattleMechanicusExcapeMonsterNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InBattleMechanicusExcapeMonsterNotify_CmdId_IsValid(int value);
const InBattleMechanicusExcapeMonsterNotify_CmdId InBattleMechanicusExcapeMonsterNotify_CmdId_CmdId_MIN = InBattleMechanicusExcapeMonsterNotify_CmdId_NONE;
const InBattleMechanicusExcapeMonsterNotify_CmdId InBattleMechanicusExcapeMonsterNotify_CmdId_CmdId_MAX = InBattleMechanicusExcapeMonsterNotify_CmdId_CMD_ID;
const int InBattleMechanicusExcapeMonsterNotify_CmdId_CmdId_ARRAYSIZE = InBattleMechanicusExcapeMonsterNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* InBattleMechanicusExcapeMonsterNotify_CmdId_descriptor();
inline const ::std::string& InBattleMechanicusExcapeMonsterNotify_CmdId_Name(InBattleMechanicusExcapeMonsterNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    InBattleMechanicusExcapeMonsterNotify_CmdId_descriptor(), value);
}
inline bool InBattleMechanicusExcapeMonsterNotify_CmdId_Parse(
    const ::std::string& name, InBattleMechanicusExcapeMonsterNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InBattleMechanicusExcapeMonsterNotify_CmdId>(
    InBattleMechanicusExcapeMonsterNotify_CmdId_descriptor(), name, value);
}
enum InBattleMechanicusLeftMonsterNotify_CmdId {
  InBattleMechanicusLeftMonsterNotify_CmdId_NONE = 0,
  InBattleMechanicusLeftMonsterNotify_CmdId_CMD_ID = 5321,
  InBattleMechanicusLeftMonsterNotify_CmdId_ENET_CHANNEL_ID = 0,
  InBattleMechanicusLeftMonsterNotify_CmdId_ENET_IS_RELIABLE = 1,
  InBattleMechanicusLeftMonsterNotify_CmdId_InBattleMechanicusLeftMonsterNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InBattleMechanicusLeftMonsterNotify_CmdId_InBattleMechanicusLeftMonsterNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InBattleMechanicusLeftMonsterNotify_CmdId_IsValid(int value);
const InBattleMechanicusLeftMonsterNotify_CmdId InBattleMechanicusLeftMonsterNotify_CmdId_CmdId_MIN = InBattleMechanicusLeftMonsterNotify_CmdId_NONE;
const InBattleMechanicusLeftMonsterNotify_CmdId InBattleMechanicusLeftMonsterNotify_CmdId_CmdId_MAX = InBattleMechanicusLeftMonsterNotify_CmdId_CMD_ID;
const int InBattleMechanicusLeftMonsterNotify_CmdId_CmdId_ARRAYSIZE = InBattleMechanicusLeftMonsterNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* InBattleMechanicusLeftMonsterNotify_CmdId_descriptor();
inline const ::std::string& InBattleMechanicusLeftMonsterNotify_CmdId_Name(InBattleMechanicusLeftMonsterNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    InBattleMechanicusLeftMonsterNotify_CmdId_descriptor(), value);
}
inline bool InBattleMechanicusLeftMonsterNotify_CmdId_Parse(
    const ::std::string& name, InBattleMechanicusLeftMonsterNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InBattleMechanicusLeftMonsterNotify_CmdId>(
    InBattleMechanicusLeftMonsterNotify_CmdId_descriptor(), name, value);
}
enum InBattleMechanicusBuildingPointsNotify_CmdId {
  InBattleMechanicusBuildingPointsNotify_CmdId_NONE = 0,
  InBattleMechanicusBuildingPointsNotify_CmdId_CMD_ID = 5303,
  InBattleMechanicusBuildingPointsNotify_CmdId_ENET_CHANNEL_ID = 0,
  InBattleMechanicusBuildingPointsNotify_CmdId_ENET_IS_RELIABLE = 1,
  InBattleMechanicusBuildingPointsNotify_CmdId_InBattleMechanicusBuildingPointsNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InBattleMechanicusBuildingPointsNotify_CmdId_InBattleMechanicusBuildingPointsNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InBattleMechanicusBuildingPointsNotify_CmdId_IsValid(int value);
const InBattleMechanicusBuildingPointsNotify_CmdId InBattleMechanicusBuildingPointsNotify_CmdId_CmdId_MIN = InBattleMechanicusBuildingPointsNotify_CmdId_NONE;
const InBattleMechanicusBuildingPointsNotify_CmdId InBattleMechanicusBuildingPointsNotify_CmdId_CmdId_MAX = InBattleMechanicusBuildingPointsNotify_CmdId_CMD_ID;
const int InBattleMechanicusBuildingPointsNotify_CmdId_CmdId_ARRAYSIZE = InBattleMechanicusBuildingPointsNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* InBattleMechanicusBuildingPointsNotify_CmdId_descriptor();
inline const ::std::string& InBattleMechanicusBuildingPointsNotify_CmdId_Name(InBattleMechanicusBuildingPointsNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    InBattleMechanicusBuildingPointsNotify_CmdId_descriptor(), value);
}
inline bool InBattleMechanicusBuildingPointsNotify_CmdId_Parse(
    const ::std::string& name, InBattleMechanicusBuildingPointsNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InBattleMechanicusBuildingPointsNotify_CmdId>(
    InBattleMechanicusBuildingPointsNotify_CmdId_descriptor(), name, value);
}
enum InBattleMechanicusPickCardReq_CmdId {
  InBattleMechanicusPickCardReq_CmdId_NONE = 0,
  InBattleMechanicusPickCardReq_CmdId_CMD_ID = 5390,
  InBattleMechanicusPickCardReq_CmdId_ENET_CHANNEL_ID = 0,
  InBattleMechanicusPickCardReq_CmdId_ENET_IS_RELIABLE = 1,
  InBattleMechanicusPickCardReq_CmdId_IS_ALLOW_CLIENT = 1,
  InBattleMechanicusPickCardReq_CmdId_InBattleMechanicusPickCardReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InBattleMechanicusPickCardReq_CmdId_InBattleMechanicusPickCardReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InBattleMechanicusPickCardReq_CmdId_IsValid(int value);
const InBattleMechanicusPickCardReq_CmdId InBattleMechanicusPickCardReq_CmdId_CmdId_MIN = InBattleMechanicusPickCardReq_CmdId_NONE;
const InBattleMechanicusPickCardReq_CmdId InBattleMechanicusPickCardReq_CmdId_CmdId_MAX = InBattleMechanicusPickCardReq_CmdId_CMD_ID;
const int InBattleMechanicusPickCardReq_CmdId_CmdId_ARRAYSIZE = InBattleMechanicusPickCardReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* InBattleMechanicusPickCardReq_CmdId_descriptor();
inline const ::std::string& InBattleMechanicusPickCardReq_CmdId_Name(InBattleMechanicusPickCardReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    InBattleMechanicusPickCardReq_CmdId_descriptor(), value);
}
inline bool InBattleMechanicusPickCardReq_CmdId_Parse(
    const ::std::string& name, InBattleMechanicusPickCardReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InBattleMechanicusPickCardReq_CmdId>(
    InBattleMechanicusPickCardReq_CmdId_descriptor(), name, value);
}
enum InBattleMechanicusPickCardRsp_CmdId {
  InBattleMechanicusPickCardRsp_CmdId_NONE = 0,
  InBattleMechanicusPickCardRsp_CmdId_CMD_ID = 5373,
  InBattleMechanicusPickCardRsp_CmdId_ENET_CHANNEL_ID = 0,
  InBattleMechanicusPickCardRsp_CmdId_ENET_IS_RELIABLE = 1,
  InBattleMechanicusPickCardRsp_CmdId_InBattleMechanicusPickCardRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InBattleMechanicusPickCardRsp_CmdId_InBattleMechanicusPickCardRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InBattleMechanicusPickCardRsp_CmdId_IsValid(int value);
const InBattleMechanicusPickCardRsp_CmdId InBattleMechanicusPickCardRsp_CmdId_CmdId_MIN = InBattleMechanicusPickCardRsp_CmdId_NONE;
const InBattleMechanicusPickCardRsp_CmdId InBattleMechanicusPickCardRsp_CmdId_CmdId_MAX = InBattleMechanicusPickCardRsp_CmdId_CMD_ID;
const int InBattleMechanicusPickCardRsp_CmdId_CmdId_ARRAYSIZE = InBattleMechanicusPickCardRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* InBattleMechanicusPickCardRsp_CmdId_descriptor();
inline const ::std::string& InBattleMechanicusPickCardRsp_CmdId_Name(InBattleMechanicusPickCardRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    InBattleMechanicusPickCardRsp_CmdId_descriptor(), value);
}
inline bool InBattleMechanicusPickCardRsp_CmdId_Parse(
    const ::std::string& name, InBattleMechanicusPickCardRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InBattleMechanicusPickCardRsp_CmdId>(
    InBattleMechanicusPickCardRsp_CmdId_descriptor(), name, value);
}
enum InBattleMechanicusPickCardNotify_CmdId {
  InBattleMechanicusPickCardNotify_CmdId_NONE = 0,
  InBattleMechanicusPickCardNotify_CmdId_CMD_ID = 5399,
  InBattleMechanicusPickCardNotify_CmdId_ENET_CHANNEL_ID = 0,
  InBattleMechanicusPickCardNotify_CmdId_ENET_IS_RELIABLE = 1,
  InBattleMechanicusPickCardNotify_CmdId_InBattleMechanicusPickCardNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InBattleMechanicusPickCardNotify_CmdId_InBattleMechanicusPickCardNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InBattleMechanicusPickCardNotify_CmdId_IsValid(int value);
const InBattleMechanicusPickCardNotify_CmdId InBattleMechanicusPickCardNotify_CmdId_CmdId_MIN = InBattleMechanicusPickCardNotify_CmdId_NONE;
const InBattleMechanicusPickCardNotify_CmdId InBattleMechanicusPickCardNotify_CmdId_CmdId_MAX = InBattleMechanicusPickCardNotify_CmdId_CMD_ID;
const int InBattleMechanicusPickCardNotify_CmdId_CmdId_ARRAYSIZE = InBattleMechanicusPickCardNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* InBattleMechanicusPickCardNotify_CmdId_descriptor();
inline const ::std::string& InBattleMechanicusPickCardNotify_CmdId_Name(InBattleMechanicusPickCardNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    InBattleMechanicusPickCardNotify_CmdId_descriptor(), value);
}
inline bool InBattleMechanicusPickCardNotify_CmdId_Parse(
    const ::std::string& name, InBattleMechanicusPickCardNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InBattleMechanicusPickCardNotify_CmdId>(
    InBattleMechanicusPickCardNotify_CmdId_descriptor(), name, value);
}
enum InBattleMechanicusConfirmCardReq_CmdId {
  InBattleMechanicusConfirmCardReq_CmdId_NONE = 0,
  InBattleMechanicusConfirmCardReq_CmdId_CMD_ID = 5331,
  InBattleMechanicusConfirmCardReq_CmdId_ENET_CHANNEL_ID = 0,
  InBattleMechanicusConfirmCardReq_CmdId_ENET_IS_RELIABLE = 1,
  InBattleMechanicusConfirmCardReq_CmdId_IS_ALLOW_CLIENT = 1,
  InBattleMechanicusConfirmCardReq_CmdId_InBattleMechanicusConfirmCardReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InBattleMechanicusConfirmCardReq_CmdId_InBattleMechanicusConfirmCardReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InBattleMechanicusConfirmCardReq_CmdId_IsValid(int value);
const InBattleMechanicusConfirmCardReq_CmdId InBattleMechanicusConfirmCardReq_CmdId_CmdId_MIN = InBattleMechanicusConfirmCardReq_CmdId_NONE;
const InBattleMechanicusConfirmCardReq_CmdId InBattleMechanicusConfirmCardReq_CmdId_CmdId_MAX = InBattleMechanicusConfirmCardReq_CmdId_CMD_ID;
const int InBattleMechanicusConfirmCardReq_CmdId_CmdId_ARRAYSIZE = InBattleMechanicusConfirmCardReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* InBattleMechanicusConfirmCardReq_CmdId_descriptor();
inline const ::std::string& InBattleMechanicusConfirmCardReq_CmdId_Name(InBattleMechanicusConfirmCardReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    InBattleMechanicusConfirmCardReq_CmdId_descriptor(), value);
}
inline bool InBattleMechanicusConfirmCardReq_CmdId_Parse(
    const ::std::string& name, InBattleMechanicusConfirmCardReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InBattleMechanicusConfirmCardReq_CmdId>(
    InBattleMechanicusConfirmCardReq_CmdId_descriptor(), name, value);
}
enum InBattleMechanicusConfirmCardRsp_CmdId {
  InBattleMechanicusConfirmCardRsp_CmdId_NONE = 0,
  InBattleMechanicusConfirmCardRsp_CmdId_CMD_ID = 5375,
  InBattleMechanicusConfirmCardRsp_CmdId_ENET_CHANNEL_ID = 0,
  InBattleMechanicusConfirmCardRsp_CmdId_ENET_IS_RELIABLE = 1,
  InBattleMechanicusConfirmCardRsp_CmdId_InBattleMechanicusConfirmCardRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InBattleMechanicusConfirmCardRsp_CmdId_InBattleMechanicusConfirmCardRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InBattleMechanicusConfirmCardRsp_CmdId_IsValid(int value);
const InBattleMechanicusConfirmCardRsp_CmdId InBattleMechanicusConfirmCardRsp_CmdId_CmdId_MIN = InBattleMechanicusConfirmCardRsp_CmdId_NONE;
const InBattleMechanicusConfirmCardRsp_CmdId InBattleMechanicusConfirmCardRsp_CmdId_CmdId_MAX = InBattleMechanicusConfirmCardRsp_CmdId_CMD_ID;
const int InBattleMechanicusConfirmCardRsp_CmdId_CmdId_ARRAYSIZE = InBattleMechanicusConfirmCardRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* InBattleMechanicusConfirmCardRsp_CmdId_descriptor();
inline const ::std::string& InBattleMechanicusConfirmCardRsp_CmdId_Name(InBattleMechanicusConfirmCardRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    InBattleMechanicusConfirmCardRsp_CmdId_descriptor(), value);
}
inline bool InBattleMechanicusConfirmCardRsp_CmdId_Parse(
    const ::std::string& name, InBattleMechanicusConfirmCardRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InBattleMechanicusConfirmCardRsp_CmdId>(
    InBattleMechanicusConfirmCardRsp_CmdId_descriptor(), name, value);
}
enum InBattleMechanicusConfirmCardNotify_CmdId {
  InBattleMechanicusConfirmCardNotify_CmdId_NONE = 0,
  InBattleMechanicusConfirmCardNotify_CmdId_CMD_ID = 5348,
  InBattleMechanicusConfirmCardNotify_CmdId_ENET_CHANNEL_ID = 0,
  InBattleMechanicusConfirmCardNotify_CmdId_ENET_IS_RELIABLE = 1,
  InBattleMechanicusConfirmCardNotify_CmdId_InBattleMechanicusConfirmCardNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InBattleMechanicusConfirmCardNotify_CmdId_InBattleMechanicusConfirmCardNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InBattleMechanicusConfirmCardNotify_CmdId_IsValid(int value);
const InBattleMechanicusConfirmCardNotify_CmdId InBattleMechanicusConfirmCardNotify_CmdId_CmdId_MIN = InBattleMechanicusConfirmCardNotify_CmdId_NONE;
const InBattleMechanicusConfirmCardNotify_CmdId InBattleMechanicusConfirmCardNotify_CmdId_CmdId_MAX = InBattleMechanicusConfirmCardNotify_CmdId_CMD_ID;
const int InBattleMechanicusConfirmCardNotify_CmdId_CmdId_ARRAYSIZE = InBattleMechanicusConfirmCardNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* InBattleMechanicusConfirmCardNotify_CmdId_descriptor();
inline const ::std::string& InBattleMechanicusConfirmCardNotify_CmdId_Name(InBattleMechanicusConfirmCardNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    InBattleMechanicusConfirmCardNotify_CmdId_descriptor(), value);
}
inline bool InBattleMechanicusConfirmCardNotify_CmdId_Parse(
    const ::std::string& name, InBattleMechanicusConfirmCardNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InBattleMechanicusConfirmCardNotify_CmdId>(
    InBattleMechanicusConfirmCardNotify_CmdId_descriptor(), name, value);
}
enum InBattleMechanicusCardResultNotify_CmdId {
  InBattleMechanicusCardResultNotify_CmdId_NONE = 0,
  InBattleMechanicusCardResultNotify_CmdId_CMD_ID = 5397,
  InBattleMechanicusCardResultNotify_CmdId_ENET_CHANNEL_ID = 0,
  InBattleMechanicusCardResultNotify_CmdId_ENET_IS_RELIABLE = 1,
  InBattleMechanicusCardResultNotify_CmdId_InBattleMechanicusCardResultNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InBattleMechanicusCardResultNotify_CmdId_InBattleMechanicusCardResultNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InBattleMechanicusCardResultNotify_CmdId_IsValid(int value);
const InBattleMechanicusCardResultNotify_CmdId InBattleMechanicusCardResultNotify_CmdId_CmdId_MIN = InBattleMechanicusCardResultNotify_CmdId_NONE;
const InBattleMechanicusCardResultNotify_CmdId InBattleMechanicusCardResultNotify_CmdId_CmdId_MAX = InBattleMechanicusCardResultNotify_CmdId_CMD_ID;
const int InBattleMechanicusCardResultNotify_CmdId_CmdId_ARRAYSIZE = InBattleMechanicusCardResultNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* InBattleMechanicusCardResultNotify_CmdId_descriptor();
inline const ::std::string& InBattleMechanicusCardResultNotify_CmdId_Name(InBattleMechanicusCardResultNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    InBattleMechanicusCardResultNotify_CmdId_descriptor(), value);
}
inline bool InBattleMechanicusCardResultNotify_CmdId_Parse(
    const ::std::string& name, InBattleMechanicusCardResultNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InBattleMechanicusCardResultNotify_CmdId>(
    InBattleMechanicusCardResultNotify_CmdId_descriptor(), name, value);
}
enum MultistagePlayFinishStageRsp_CmdId {
  MultistagePlayFinishStageRsp_CmdId_NONE = 0,
  MultistagePlayFinishStageRsp_CmdId_CMD_ID = 5381,
  MultistagePlayFinishStageRsp_CmdId_ENET_CHANNEL_ID = 0,
  MultistagePlayFinishStageRsp_CmdId_ENET_IS_RELIABLE = 1,
  MultistagePlayFinishStageRsp_CmdId_MultistagePlayFinishStageRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MultistagePlayFinishStageRsp_CmdId_MultistagePlayFinishStageRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MultistagePlayFinishStageRsp_CmdId_IsValid(int value);
const MultistagePlayFinishStageRsp_CmdId MultistagePlayFinishStageRsp_CmdId_CmdId_MIN = MultistagePlayFinishStageRsp_CmdId_NONE;
const MultistagePlayFinishStageRsp_CmdId MultistagePlayFinishStageRsp_CmdId_CmdId_MAX = MultistagePlayFinishStageRsp_CmdId_CMD_ID;
const int MultistagePlayFinishStageRsp_CmdId_CmdId_ARRAYSIZE = MultistagePlayFinishStageRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MultistagePlayFinishStageRsp_CmdId_descriptor();
inline const ::std::string& MultistagePlayFinishStageRsp_CmdId_Name(MultistagePlayFinishStageRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MultistagePlayFinishStageRsp_CmdId_descriptor(), value);
}
inline bool MultistagePlayFinishStageRsp_CmdId_Parse(
    const ::std::string& name, MultistagePlayFinishStageRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MultistagePlayFinishStageRsp_CmdId>(
    MultistagePlayFinishStageRsp_CmdId_descriptor(), name, value);
}
enum InBattleMechanicusSettleNotify_CmdId {
  InBattleMechanicusSettleNotify_CmdId_NONE = 0,
  InBattleMechanicusSettleNotify_CmdId_CMD_ID = 5305,
  InBattleMechanicusSettleNotify_CmdId_ENET_CHANNEL_ID = 0,
  InBattleMechanicusSettleNotify_CmdId_ENET_IS_RELIABLE = 1,
  InBattleMechanicusSettleNotify_CmdId_InBattleMechanicusSettleNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InBattleMechanicusSettleNotify_CmdId_InBattleMechanicusSettleNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InBattleMechanicusSettleNotify_CmdId_IsValid(int value);
const InBattleMechanicusSettleNotify_CmdId InBattleMechanicusSettleNotify_CmdId_CmdId_MIN = InBattleMechanicusSettleNotify_CmdId_NONE;
const InBattleMechanicusSettleNotify_CmdId InBattleMechanicusSettleNotify_CmdId_CmdId_MAX = InBattleMechanicusSettleNotify_CmdId_CMD_ID;
const int InBattleMechanicusSettleNotify_CmdId_CmdId_ARRAYSIZE = InBattleMechanicusSettleNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* InBattleMechanicusSettleNotify_CmdId_descriptor();
inline const ::std::string& InBattleMechanicusSettleNotify_CmdId_Name(InBattleMechanicusSettleNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    InBattleMechanicusSettleNotify_CmdId_descriptor(), value);
}
inline bool InBattleMechanicusSettleNotify_CmdId_Parse(
    const ::std::string& name, InBattleMechanicusSettleNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InBattleMechanicusSettleNotify_CmdId>(
    InBattleMechanicusSettleNotify_CmdId_descriptor(), name, value);
}
enum MultistagePlaySettleNotify_CmdId {
  MultistagePlaySettleNotify_CmdId_NONE = 0,
  MultistagePlaySettleNotify_CmdId_CMD_ID = 5313,
  MultistagePlaySettleNotify_CmdId_ENET_CHANNEL_ID = 0,
  MultistagePlaySettleNotify_CmdId_ENET_IS_RELIABLE = 1,
  MultistagePlaySettleNotify_CmdId_MultistagePlaySettleNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MultistagePlaySettleNotify_CmdId_MultistagePlaySettleNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MultistagePlaySettleNotify_CmdId_IsValid(int value);
const MultistagePlaySettleNotify_CmdId MultistagePlaySettleNotify_CmdId_CmdId_MIN = MultistagePlaySettleNotify_CmdId_NONE;
const MultistagePlaySettleNotify_CmdId MultistagePlaySettleNotify_CmdId_CmdId_MAX = MultistagePlaySettleNotify_CmdId_CMD_ID;
const int MultistagePlaySettleNotify_CmdId_CmdId_ARRAYSIZE = MultistagePlaySettleNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MultistagePlaySettleNotify_CmdId_descriptor();
inline const ::std::string& MultistagePlaySettleNotify_CmdId_Name(MultistagePlaySettleNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MultistagePlaySettleNotify_CmdId_descriptor(), value);
}
inline bool MultistagePlaySettleNotify_CmdId_Parse(
    const ::std::string& name, MultistagePlaySettleNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MultistagePlaySettleNotify_CmdId>(
    MultistagePlaySettleNotify_CmdId_descriptor(), name, value);
}
enum MultistagePlayStageEndNotify_CmdId {
  MultistagePlayStageEndNotify_CmdId_NONE = 0,
  MultistagePlayStageEndNotify_CmdId_CMD_ID = 5379,
  MultistagePlayStageEndNotify_CmdId_ENET_CHANNEL_ID = 0,
  MultistagePlayStageEndNotify_CmdId_ENET_IS_RELIABLE = 1,
  MultistagePlayStageEndNotify_CmdId_MultistagePlayStageEndNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MultistagePlayStageEndNotify_CmdId_MultistagePlayStageEndNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MultistagePlayStageEndNotify_CmdId_IsValid(int value);
const MultistagePlayStageEndNotify_CmdId MultistagePlayStageEndNotify_CmdId_CmdId_MIN = MultistagePlayStageEndNotify_CmdId_NONE;
const MultistagePlayStageEndNotify_CmdId MultistagePlayStageEndNotify_CmdId_CmdId_MAX = MultistagePlayStageEndNotify_CmdId_CMD_ID;
const int MultistagePlayStageEndNotify_CmdId_CmdId_ARRAYSIZE = MultistagePlayStageEndNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MultistagePlayStageEndNotify_CmdId_descriptor();
inline const ::std::string& MultistagePlayStageEndNotify_CmdId_Name(MultistagePlayStageEndNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MultistagePlayStageEndNotify_CmdId_descriptor(), value);
}
inline bool MultistagePlayStageEndNotify_CmdId_Parse(
    const ::std::string& name, MultistagePlayStageEndNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MultistagePlayStageEndNotify_CmdId>(
    MultistagePlayStageEndNotify_CmdId_descriptor(), name, value);
}
enum MultistagePlayEndNotify_CmdId {
  MultistagePlayEndNotify_CmdId_NONE = 0,
  MultistagePlayEndNotify_CmdId_CMD_ID = 5355,
  MultistagePlayEndNotify_CmdId_ENET_CHANNEL_ID = 0,
  MultistagePlayEndNotify_CmdId_ENET_IS_RELIABLE = 1,
  MultistagePlayEndNotify_CmdId_MultistagePlayEndNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MultistagePlayEndNotify_CmdId_MultistagePlayEndNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MultistagePlayEndNotify_CmdId_IsValid(int value);
const MultistagePlayEndNotify_CmdId MultistagePlayEndNotify_CmdId_CmdId_MIN = MultistagePlayEndNotify_CmdId_NONE;
const MultistagePlayEndNotify_CmdId MultistagePlayEndNotify_CmdId_CmdId_MAX = MultistagePlayEndNotify_CmdId_CMD_ID;
const int MultistagePlayEndNotify_CmdId_CmdId_ARRAYSIZE = MultistagePlayEndNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MultistagePlayEndNotify_CmdId_descriptor();
inline const ::std::string& MultistagePlayEndNotify_CmdId_Name(MultistagePlayEndNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MultistagePlayEndNotify_CmdId_descriptor(), value);
}
inline bool MultistagePlayEndNotify_CmdId_Parse(
    const ::std::string& name, MultistagePlayEndNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MultistagePlayEndNotify_CmdId>(
    MultistagePlayEndNotify_CmdId_descriptor(), name, value);
}
enum FleurFairBuffEnergyNotify_CmdId {
  FleurFairBuffEnergyNotify_CmdId_NONE = 0,
  FleurFairBuffEnergyNotify_CmdId_CMD_ID = 5324,
  FleurFairBuffEnergyNotify_CmdId_ENET_CHANNEL_ID = 0,
  FleurFairBuffEnergyNotify_CmdId_ENET_IS_RELIABLE = 1,
  FleurFairBuffEnergyNotify_CmdId_FleurFairBuffEnergyNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FleurFairBuffEnergyNotify_CmdId_FleurFairBuffEnergyNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FleurFairBuffEnergyNotify_CmdId_IsValid(int value);
const FleurFairBuffEnergyNotify_CmdId FleurFairBuffEnergyNotify_CmdId_CmdId_MIN = FleurFairBuffEnergyNotify_CmdId_NONE;
const FleurFairBuffEnergyNotify_CmdId FleurFairBuffEnergyNotify_CmdId_CmdId_MAX = FleurFairBuffEnergyNotify_CmdId_CMD_ID;
const int FleurFairBuffEnergyNotify_CmdId_CmdId_ARRAYSIZE = FleurFairBuffEnergyNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* FleurFairBuffEnergyNotify_CmdId_descriptor();
inline const ::std::string& FleurFairBuffEnergyNotify_CmdId_Name(FleurFairBuffEnergyNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    FleurFairBuffEnergyNotify_CmdId_descriptor(), value);
}
inline bool FleurFairBuffEnergyNotify_CmdId_Parse(
    const ::std::string& name, FleurFairBuffEnergyNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FleurFairBuffEnergyNotify_CmdId>(
    FleurFairBuffEnergyNotify_CmdId_descriptor(), name, value);
}
enum FleurFairStageSettleNotify_CmdId {
  FleurFairStageSettleNotify_CmdId_NONE = 0,
  FleurFairStageSettleNotify_CmdId_CMD_ID = 5356,
  FleurFairStageSettleNotify_CmdId_ENET_CHANNEL_ID = 0,
  FleurFairStageSettleNotify_CmdId_ENET_IS_RELIABLE = 1,
  FleurFairStageSettleNotify_CmdId_FleurFairStageSettleNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FleurFairStageSettleNotify_CmdId_FleurFairStageSettleNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FleurFairStageSettleNotify_CmdId_IsValid(int value);
const FleurFairStageSettleNotify_CmdId FleurFairStageSettleNotify_CmdId_CmdId_MIN = FleurFairStageSettleNotify_CmdId_NONE;
const FleurFairStageSettleNotify_CmdId FleurFairStageSettleNotify_CmdId_CmdId_MAX = FleurFairStageSettleNotify_CmdId_CMD_ID;
const int FleurFairStageSettleNotify_CmdId_CmdId_ARRAYSIZE = FleurFairStageSettleNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* FleurFairStageSettleNotify_CmdId_descriptor();
inline const ::std::string& FleurFairStageSettleNotify_CmdId_Name(FleurFairStageSettleNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    FleurFairStageSettleNotify_CmdId_descriptor(), value);
}
inline bool FleurFairStageSettleNotify_CmdId_Parse(
    const ::std::string& name, FleurFairStageSettleNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FleurFairStageSettleNotify_CmdId>(
    FleurFairStageSettleNotify_CmdId_descriptor(), name, value);
}
enum FleurFairFinishGalleryStageNotify_CmdId {
  FleurFairFinishGalleryStageNotify_CmdId_NONE = 0,
  FleurFairFinishGalleryStageNotify_CmdId_CMD_ID = 5342,
  FleurFairFinishGalleryStageNotify_CmdId_ENET_CHANNEL_ID = 0,
  FleurFairFinishGalleryStageNotify_CmdId_ENET_IS_RELIABLE = 1,
  FleurFairFinishGalleryStageNotify_CmdId_FleurFairFinishGalleryStageNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FleurFairFinishGalleryStageNotify_CmdId_FleurFairFinishGalleryStageNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FleurFairFinishGalleryStageNotify_CmdId_IsValid(int value);
const FleurFairFinishGalleryStageNotify_CmdId FleurFairFinishGalleryStageNotify_CmdId_CmdId_MIN = FleurFairFinishGalleryStageNotify_CmdId_NONE;
const FleurFairFinishGalleryStageNotify_CmdId FleurFairFinishGalleryStageNotify_CmdId_CmdId_MAX = FleurFairFinishGalleryStageNotify_CmdId_CMD_ID;
const int FleurFairFinishGalleryStageNotify_CmdId_CmdId_ARRAYSIZE = FleurFairFinishGalleryStageNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* FleurFairFinishGalleryStageNotify_CmdId_descriptor();
inline const ::std::string& FleurFairFinishGalleryStageNotify_CmdId_Name(FleurFairFinishGalleryStageNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    FleurFairFinishGalleryStageNotify_CmdId_descriptor(), value);
}
inline bool FleurFairFinishGalleryStageNotify_CmdId_Parse(
    const ::std::string& name, FleurFairFinishGalleryStageNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FleurFairFinishGalleryStageNotify_CmdId>(
    FleurFairFinishGalleryStageNotify_CmdId_descriptor(), name, value);
}
enum HideAndSeekSelectAvatarReq_CmdId {
  HideAndSeekSelectAvatarReq_CmdId_NONE = 0,
  HideAndSeekSelectAvatarReq_CmdId_CMD_ID = 5330,
  HideAndSeekSelectAvatarReq_CmdId_ENET_CHANNEL_ID = 0,
  HideAndSeekSelectAvatarReq_CmdId_ENET_IS_RELIABLE = 1,
  HideAndSeekSelectAvatarReq_CmdId_IS_ALLOW_CLIENT = 1,
  HideAndSeekSelectAvatarReq_CmdId_HideAndSeekSelectAvatarReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HideAndSeekSelectAvatarReq_CmdId_HideAndSeekSelectAvatarReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HideAndSeekSelectAvatarReq_CmdId_IsValid(int value);
const HideAndSeekSelectAvatarReq_CmdId HideAndSeekSelectAvatarReq_CmdId_CmdId_MIN = HideAndSeekSelectAvatarReq_CmdId_NONE;
const HideAndSeekSelectAvatarReq_CmdId HideAndSeekSelectAvatarReq_CmdId_CmdId_MAX = HideAndSeekSelectAvatarReq_CmdId_CMD_ID;
const int HideAndSeekSelectAvatarReq_CmdId_CmdId_ARRAYSIZE = HideAndSeekSelectAvatarReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* HideAndSeekSelectAvatarReq_CmdId_descriptor();
inline const ::std::string& HideAndSeekSelectAvatarReq_CmdId_Name(HideAndSeekSelectAvatarReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    HideAndSeekSelectAvatarReq_CmdId_descriptor(), value);
}
inline bool HideAndSeekSelectAvatarReq_CmdId_Parse(
    const ::std::string& name, HideAndSeekSelectAvatarReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HideAndSeekSelectAvatarReq_CmdId>(
    HideAndSeekSelectAvatarReq_CmdId_descriptor(), name, value);
}
enum HideAndSeekSelectAvatarRsp_CmdId {
  HideAndSeekSelectAvatarRsp_CmdId_NONE = 0,
  HideAndSeekSelectAvatarRsp_CmdId_CMD_ID = 5367,
  HideAndSeekSelectAvatarRsp_CmdId_ENET_CHANNEL_ID = 0,
  HideAndSeekSelectAvatarRsp_CmdId_ENET_IS_RELIABLE = 1,
  HideAndSeekSelectAvatarRsp_CmdId_HideAndSeekSelectAvatarRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HideAndSeekSelectAvatarRsp_CmdId_HideAndSeekSelectAvatarRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HideAndSeekSelectAvatarRsp_CmdId_IsValid(int value);
const HideAndSeekSelectAvatarRsp_CmdId HideAndSeekSelectAvatarRsp_CmdId_CmdId_MIN = HideAndSeekSelectAvatarRsp_CmdId_NONE;
const HideAndSeekSelectAvatarRsp_CmdId HideAndSeekSelectAvatarRsp_CmdId_CmdId_MAX = HideAndSeekSelectAvatarRsp_CmdId_CMD_ID;
const int HideAndSeekSelectAvatarRsp_CmdId_CmdId_ARRAYSIZE = HideAndSeekSelectAvatarRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* HideAndSeekSelectAvatarRsp_CmdId_descriptor();
inline const ::std::string& HideAndSeekSelectAvatarRsp_CmdId_Name(HideAndSeekSelectAvatarRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    HideAndSeekSelectAvatarRsp_CmdId_descriptor(), value);
}
inline bool HideAndSeekSelectAvatarRsp_CmdId_Parse(
    const ::std::string& name, HideAndSeekSelectAvatarRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HideAndSeekSelectAvatarRsp_CmdId>(
    HideAndSeekSelectAvatarRsp_CmdId_descriptor(), name, value);
}
enum HideAndSeekSetReadyReq_CmdId {
  HideAndSeekSetReadyReq_CmdId_NONE = 0,
  HideAndSeekSetReadyReq_CmdId_CMD_ID = 5358,
  HideAndSeekSetReadyReq_CmdId_ENET_CHANNEL_ID = 0,
  HideAndSeekSetReadyReq_CmdId_ENET_IS_RELIABLE = 1,
  HideAndSeekSetReadyReq_CmdId_IS_ALLOW_CLIENT = 1,
  HideAndSeekSetReadyReq_CmdId_HideAndSeekSetReadyReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HideAndSeekSetReadyReq_CmdId_HideAndSeekSetReadyReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HideAndSeekSetReadyReq_CmdId_IsValid(int value);
const HideAndSeekSetReadyReq_CmdId HideAndSeekSetReadyReq_CmdId_CmdId_MIN = HideAndSeekSetReadyReq_CmdId_NONE;
const HideAndSeekSetReadyReq_CmdId HideAndSeekSetReadyReq_CmdId_CmdId_MAX = HideAndSeekSetReadyReq_CmdId_CMD_ID;
const int HideAndSeekSetReadyReq_CmdId_CmdId_ARRAYSIZE = HideAndSeekSetReadyReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* HideAndSeekSetReadyReq_CmdId_descriptor();
inline const ::std::string& HideAndSeekSetReadyReq_CmdId_Name(HideAndSeekSetReadyReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    HideAndSeekSetReadyReq_CmdId_descriptor(), value);
}
inline bool HideAndSeekSetReadyReq_CmdId_Parse(
    const ::std::string& name, HideAndSeekSetReadyReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HideAndSeekSetReadyReq_CmdId>(
    HideAndSeekSetReadyReq_CmdId_descriptor(), name, value);
}
enum HideAndSeekSetReadyRsp_CmdId {
  HideAndSeekSetReadyRsp_CmdId_NONE = 0,
  HideAndSeekSetReadyRsp_CmdId_CMD_ID = 5370,
  HideAndSeekSetReadyRsp_CmdId_ENET_CHANNEL_ID = 0,
  HideAndSeekSetReadyRsp_CmdId_ENET_IS_RELIABLE = 1,
  HideAndSeekSetReadyRsp_CmdId_HideAndSeekSetReadyRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HideAndSeekSetReadyRsp_CmdId_HideAndSeekSetReadyRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HideAndSeekSetReadyRsp_CmdId_IsValid(int value);
const HideAndSeekSetReadyRsp_CmdId HideAndSeekSetReadyRsp_CmdId_CmdId_MIN = HideAndSeekSetReadyRsp_CmdId_NONE;
const HideAndSeekSetReadyRsp_CmdId HideAndSeekSetReadyRsp_CmdId_CmdId_MAX = HideAndSeekSetReadyRsp_CmdId_CMD_ID;
const int HideAndSeekSetReadyRsp_CmdId_CmdId_ARRAYSIZE = HideAndSeekSetReadyRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* HideAndSeekSetReadyRsp_CmdId_descriptor();
inline const ::std::string& HideAndSeekSetReadyRsp_CmdId_Name(HideAndSeekSetReadyRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    HideAndSeekSetReadyRsp_CmdId_descriptor(), value);
}
inline bool HideAndSeekSetReadyRsp_CmdId_Parse(
    const ::std::string& name, HideAndSeekSetReadyRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HideAndSeekSetReadyRsp_CmdId>(
    HideAndSeekSetReadyRsp_CmdId_descriptor(), name, value);
}
enum HideAndSeekSettleNotify_CmdId {
  HideAndSeekSettleNotify_CmdId_NONE = 0,
  HideAndSeekSettleNotify_CmdId_CMD_ID = 5317,
  HideAndSeekSettleNotify_CmdId_ENET_CHANNEL_ID = 0,
  HideAndSeekSettleNotify_CmdId_ENET_IS_RELIABLE = 1,
  HideAndSeekSettleNotify_CmdId_HideAndSeekSettleNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HideAndSeekSettleNotify_CmdId_HideAndSeekSettleNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HideAndSeekSettleNotify_CmdId_IsValid(int value);
const HideAndSeekSettleNotify_CmdId HideAndSeekSettleNotify_CmdId_CmdId_MIN = HideAndSeekSettleNotify_CmdId_NONE;
const HideAndSeekSettleNotify_CmdId HideAndSeekSettleNotify_CmdId_CmdId_MAX = HideAndSeekSettleNotify_CmdId_CMD_ID;
const int HideAndSeekSettleNotify_CmdId_CmdId_ARRAYSIZE = HideAndSeekSettleNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* HideAndSeekSettleNotify_CmdId_descriptor();
inline const ::std::string& HideAndSeekSettleNotify_CmdId_Name(HideAndSeekSettleNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    HideAndSeekSettleNotify_CmdId_descriptor(), value);
}
inline bool HideAndSeekSettleNotify_CmdId_Parse(
    const ::std::string& name, HideAndSeekSettleNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HideAndSeekSettleNotify_CmdId>(
    HideAndSeekSettleNotify_CmdId_descriptor(), name, value);
}
enum HideAndSeekSettleNotify_SettleReason {
  HideAndSeekSettleNotify_SettleReason_SETTLE_REASON_TIME_OUT = 0,
  HideAndSeekSettleNotify_SettleReason_SETTLE_PLAY_END = 1,
  HideAndSeekSettleNotify_SettleReason_SETTLE_PLAYER_QUIT = 2,
  HideAndSeekSettleNotify_SettleReason_HideAndSeekSettleNotify_SettleReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HideAndSeekSettleNotify_SettleReason_HideAndSeekSettleNotify_SettleReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HideAndSeekSettleNotify_SettleReason_IsValid(int value);
const HideAndSeekSettleNotify_SettleReason HideAndSeekSettleNotify_SettleReason_SettleReason_MIN = HideAndSeekSettleNotify_SettleReason_SETTLE_REASON_TIME_OUT;
const HideAndSeekSettleNotify_SettleReason HideAndSeekSettleNotify_SettleReason_SettleReason_MAX = HideAndSeekSettleNotify_SettleReason_SETTLE_PLAYER_QUIT;
const int HideAndSeekSettleNotify_SettleReason_SettleReason_ARRAYSIZE = HideAndSeekSettleNotify_SettleReason_SettleReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* HideAndSeekSettleNotify_SettleReason_descriptor();
inline const ::std::string& HideAndSeekSettleNotify_SettleReason_Name(HideAndSeekSettleNotify_SettleReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    HideAndSeekSettleNotify_SettleReason_descriptor(), value);
}
inline bool HideAndSeekSettleNotify_SettleReason_Parse(
    const ::std::string& name, HideAndSeekSettleNotify_SettleReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HideAndSeekSettleNotify_SettleReason>(
    HideAndSeekSettleNotify_SettleReason_descriptor(), name, value);
}
enum HideAndSeekPlayerReadyNotify_CmdId {
  HideAndSeekPlayerReadyNotify_CmdId_NONE = 0,
  HideAndSeekPlayerReadyNotify_CmdId_CMD_ID = 5302,
  HideAndSeekPlayerReadyNotify_CmdId_ENET_CHANNEL_ID = 0,
  HideAndSeekPlayerReadyNotify_CmdId_ENET_IS_RELIABLE = 1,
  HideAndSeekPlayerReadyNotify_CmdId_HideAndSeekPlayerReadyNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HideAndSeekPlayerReadyNotify_CmdId_HideAndSeekPlayerReadyNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HideAndSeekPlayerReadyNotify_CmdId_IsValid(int value);
const HideAndSeekPlayerReadyNotify_CmdId HideAndSeekPlayerReadyNotify_CmdId_CmdId_MIN = HideAndSeekPlayerReadyNotify_CmdId_NONE;
const HideAndSeekPlayerReadyNotify_CmdId HideAndSeekPlayerReadyNotify_CmdId_CmdId_MAX = HideAndSeekPlayerReadyNotify_CmdId_CMD_ID;
const int HideAndSeekPlayerReadyNotify_CmdId_CmdId_ARRAYSIZE = HideAndSeekPlayerReadyNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* HideAndSeekPlayerReadyNotify_CmdId_descriptor();
inline const ::std::string& HideAndSeekPlayerReadyNotify_CmdId_Name(HideAndSeekPlayerReadyNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    HideAndSeekPlayerReadyNotify_CmdId_descriptor(), value);
}
inline bool HideAndSeekPlayerReadyNotify_CmdId_Parse(
    const ::std::string& name, HideAndSeekPlayerReadyNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HideAndSeekPlayerReadyNotify_CmdId>(
    HideAndSeekPlayerReadyNotify_CmdId_descriptor(), name, value);
}
enum HideAndSeekPlayerSetAvatarNotify_CmdId {
  HideAndSeekPlayerSetAvatarNotify_CmdId_NONE = 0,
  HideAndSeekPlayerSetAvatarNotify_CmdId_CMD_ID = 5319,
  HideAndSeekPlayerSetAvatarNotify_CmdId_ENET_CHANNEL_ID = 0,
  HideAndSeekPlayerSetAvatarNotify_CmdId_ENET_IS_RELIABLE = 1,
  HideAndSeekPlayerSetAvatarNotify_CmdId_HideAndSeekPlayerSetAvatarNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HideAndSeekPlayerSetAvatarNotify_CmdId_HideAndSeekPlayerSetAvatarNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HideAndSeekPlayerSetAvatarNotify_CmdId_IsValid(int value);
const HideAndSeekPlayerSetAvatarNotify_CmdId HideAndSeekPlayerSetAvatarNotify_CmdId_CmdId_MIN = HideAndSeekPlayerSetAvatarNotify_CmdId_NONE;
const HideAndSeekPlayerSetAvatarNotify_CmdId HideAndSeekPlayerSetAvatarNotify_CmdId_CmdId_MAX = HideAndSeekPlayerSetAvatarNotify_CmdId_CMD_ID;
const int HideAndSeekPlayerSetAvatarNotify_CmdId_CmdId_ARRAYSIZE = HideAndSeekPlayerSetAvatarNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* HideAndSeekPlayerSetAvatarNotify_CmdId_descriptor();
inline const ::std::string& HideAndSeekPlayerSetAvatarNotify_CmdId_Name(HideAndSeekPlayerSetAvatarNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    HideAndSeekPlayerSetAvatarNotify_CmdId_descriptor(), value);
}
inline bool HideAndSeekPlayerSetAvatarNotify_CmdId_Parse(
    const ::std::string& name, HideAndSeekPlayerSetAvatarNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HideAndSeekPlayerSetAvatarNotify_CmdId>(
    HideAndSeekPlayerSetAvatarNotify_CmdId_descriptor(), name, value);
}
enum ChessPickCardReq_CmdId {
  ChessPickCardReq_CmdId_NONE = 0,
  ChessPickCardReq_CmdId_CMD_ID = 5333,
  ChessPickCardReq_CmdId_ENET_CHANNEL_ID = 0,
  ChessPickCardReq_CmdId_ENET_IS_RELIABLE = 1,
  ChessPickCardReq_CmdId_IS_ALLOW_CLIENT = 1,
  ChessPickCardReq_CmdId_ChessPickCardReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChessPickCardReq_CmdId_ChessPickCardReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChessPickCardReq_CmdId_IsValid(int value);
const ChessPickCardReq_CmdId ChessPickCardReq_CmdId_CmdId_MIN = ChessPickCardReq_CmdId_NONE;
const ChessPickCardReq_CmdId ChessPickCardReq_CmdId_CmdId_MAX = ChessPickCardReq_CmdId_CMD_ID;
const int ChessPickCardReq_CmdId_CmdId_ARRAYSIZE = ChessPickCardReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChessPickCardReq_CmdId_descriptor();
inline const ::std::string& ChessPickCardReq_CmdId_Name(ChessPickCardReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChessPickCardReq_CmdId_descriptor(), value);
}
inline bool ChessPickCardReq_CmdId_Parse(
    const ::std::string& name, ChessPickCardReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChessPickCardReq_CmdId>(
    ChessPickCardReq_CmdId_descriptor(), name, value);
}
enum ChessPickCardRsp_CmdId {
  ChessPickCardRsp_CmdId_NONE = 0,
  ChessPickCardRsp_CmdId_CMD_ID = 5384,
  ChessPickCardRsp_CmdId_ENET_CHANNEL_ID = 0,
  ChessPickCardRsp_CmdId_ENET_IS_RELIABLE = 1,
  ChessPickCardRsp_CmdId_ChessPickCardRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChessPickCardRsp_CmdId_ChessPickCardRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChessPickCardRsp_CmdId_IsValid(int value);
const ChessPickCardRsp_CmdId ChessPickCardRsp_CmdId_CmdId_MIN = ChessPickCardRsp_CmdId_NONE;
const ChessPickCardRsp_CmdId ChessPickCardRsp_CmdId_CmdId_MAX = ChessPickCardRsp_CmdId_CMD_ID;
const int ChessPickCardRsp_CmdId_CmdId_ARRAYSIZE = ChessPickCardRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChessPickCardRsp_CmdId_descriptor();
inline const ::std::string& ChessPickCardRsp_CmdId_Name(ChessPickCardRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChessPickCardRsp_CmdId_descriptor(), value);
}
inline bool ChessPickCardRsp_CmdId_Parse(
    const ::std::string& name, ChessPickCardRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChessPickCardRsp_CmdId>(
    ChessPickCardRsp_CmdId_descriptor(), name, value);
}
enum ChessPickCardNotify_CmdId {
  ChessPickCardNotify_CmdId_NONE = 0,
  ChessPickCardNotify_CmdId_CMD_ID = 5380,
  ChessPickCardNotify_CmdId_ENET_CHANNEL_ID = 0,
  ChessPickCardNotify_CmdId_ENET_IS_RELIABLE = 1,
  ChessPickCardNotify_CmdId_ChessPickCardNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChessPickCardNotify_CmdId_ChessPickCardNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChessPickCardNotify_CmdId_IsValid(int value);
const ChessPickCardNotify_CmdId ChessPickCardNotify_CmdId_CmdId_MIN = ChessPickCardNotify_CmdId_NONE;
const ChessPickCardNotify_CmdId ChessPickCardNotify_CmdId_CmdId_MAX = ChessPickCardNotify_CmdId_CMD_ID;
const int ChessPickCardNotify_CmdId_CmdId_ARRAYSIZE = ChessPickCardNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChessPickCardNotify_CmdId_descriptor();
inline const ::std::string& ChessPickCardNotify_CmdId_Name(ChessPickCardNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChessPickCardNotify_CmdId_descriptor(), value);
}
inline bool ChessPickCardNotify_CmdId_Parse(
    const ::std::string& name, ChessPickCardNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChessPickCardNotify_CmdId>(
    ChessPickCardNotify_CmdId_descriptor(), name, value);
}
enum ChessManualRefreshCardsReq_CmdId {
  ChessManualRefreshCardsReq_CmdId_NONE = 0,
  ChessManualRefreshCardsReq_CmdId_CMD_ID = 5389,
  ChessManualRefreshCardsReq_CmdId_ENET_CHANNEL_ID = 0,
  ChessManualRefreshCardsReq_CmdId_ENET_IS_RELIABLE = 1,
  ChessManualRefreshCardsReq_CmdId_IS_ALLOW_CLIENT = 1,
  ChessManualRefreshCardsReq_CmdId_ChessManualRefreshCardsReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChessManualRefreshCardsReq_CmdId_ChessManualRefreshCardsReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChessManualRefreshCardsReq_CmdId_IsValid(int value);
const ChessManualRefreshCardsReq_CmdId ChessManualRefreshCardsReq_CmdId_CmdId_MIN = ChessManualRefreshCardsReq_CmdId_NONE;
const ChessManualRefreshCardsReq_CmdId ChessManualRefreshCardsReq_CmdId_CmdId_MAX = ChessManualRefreshCardsReq_CmdId_CMD_ID;
const int ChessManualRefreshCardsReq_CmdId_CmdId_ARRAYSIZE = ChessManualRefreshCardsReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChessManualRefreshCardsReq_CmdId_descriptor();
inline const ::std::string& ChessManualRefreshCardsReq_CmdId_Name(ChessManualRefreshCardsReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChessManualRefreshCardsReq_CmdId_descriptor(), value);
}
inline bool ChessManualRefreshCardsReq_CmdId_Parse(
    const ::std::string& name, ChessManualRefreshCardsReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChessManualRefreshCardsReq_CmdId>(
    ChessManualRefreshCardsReq_CmdId_descriptor(), name, value);
}
enum ChessManualRefreshCardsRsp_CmdId {
  ChessManualRefreshCardsRsp_CmdId_NONE = 0,
  ChessManualRefreshCardsRsp_CmdId_CMD_ID = 5359,
  ChessManualRefreshCardsRsp_CmdId_ENET_CHANNEL_ID = 0,
  ChessManualRefreshCardsRsp_CmdId_ENET_IS_RELIABLE = 1,
  ChessManualRefreshCardsRsp_CmdId_ChessManualRefreshCardsRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChessManualRefreshCardsRsp_CmdId_ChessManualRefreshCardsRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChessManualRefreshCardsRsp_CmdId_IsValid(int value);
const ChessManualRefreshCardsRsp_CmdId ChessManualRefreshCardsRsp_CmdId_CmdId_MIN = ChessManualRefreshCardsRsp_CmdId_NONE;
const ChessManualRefreshCardsRsp_CmdId ChessManualRefreshCardsRsp_CmdId_CmdId_MAX = ChessManualRefreshCardsRsp_CmdId_CMD_ID;
const int ChessManualRefreshCardsRsp_CmdId_CmdId_ARRAYSIZE = ChessManualRefreshCardsRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChessManualRefreshCardsRsp_CmdId_descriptor();
inline const ::std::string& ChessManualRefreshCardsRsp_CmdId_Name(ChessManualRefreshCardsRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChessManualRefreshCardsRsp_CmdId_descriptor(), value);
}
inline bool ChessManualRefreshCardsRsp_CmdId_Parse(
    const ::std::string& name, ChessManualRefreshCardsRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChessManualRefreshCardsRsp_CmdId>(
    ChessManualRefreshCardsRsp_CmdId_descriptor(), name, value);
}
enum ChessPlayerInfoNotify_CmdId {
  ChessPlayerInfoNotify_CmdId_NONE = 0,
  ChessPlayerInfoNotify_CmdId_CMD_ID = 5332,
  ChessPlayerInfoNotify_CmdId_ENET_CHANNEL_ID = 0,
  ChessPlayerInfoNotify_CmdId_ENET_IS_RELIABLE = 1,
  ChessPlayerInfoNotify_CmdId_ChessPlayerInfoNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChessPlayerInfoNotify_CmdId_ChessPlayerInfoNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChessPlayerInfoNotify_CmdId_IsValid(int value);
const ChessPlayerInfoNotify_CmdId ChessPlayerInfoNotify_CmdId_CmdId_MIN = ChessPlayerInfoNotify_CmdId_NONE;
const ChessPlayerInfoNotify_CmdId ChessPlayerInfoNotify_CmdId_CmdId_MAX = ChessPlayerInfoNotify_CmdId_CMD_ID;
const int ChessPlayerInfoNotify_CmdId_CmdId_ARRAYSIZE = ChessPlayerInfoNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChessPlayerInfoNotify_CmdId_descriptor();
inline const ::std::string& ChessPlayerInfoNotify_CmdId_Name(ChessPlayerInfoNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChessPlayerInfoNotify_CmdId_descriptor(), value);
}
inline bool ChessPlayerInfoNotify_CmdId_Parse(
    const ::std::string& name, ChessPlayerInfoNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChessPlayerInfoNotify_CmdId>(
    ChessPlayerInfoNotify_CmdId_descriptor(), name, value);
}
enum ChessLeftMonstersNotify_CmdId {
  ChessLeftMonstersNotify_CmdId_NONE = 0,
  ChessLeftMonstersNotify_CmdId_CMD_ID = 5360,
  ChessLeftMonstersNotify_CmdId_ENET_CHANNEL_ID = 0,
  ChessLeftMonstersNotify_CmdId_ENET_IS_RELIABLE = 1,
  ChessLeftMonstersNotify_CmdId_ChessLeftMonstersNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChessLeftMonstersNotify_CmdId_ChessLeftMonstersNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChessLeftMonstersNotify_CmdId_IsValid(int value);
const ChessLeftMonstersNotify_CmdId ChessLeftMonstersNotify_CmdId_CmdId_MIN = ChessLeftMonstersNotify_CmdId_NONE;
const ChessLeftMonstersNotify_CmdId ChessLeftMonstersNotify_CmdId_CmdId_MAX = ChessLeftMonstersNotify_CmdId_CMD_ID;
const int ChessLeftMonstersNotify_CmdId_CmdId_ARRAYSIZE = ChessLeftMonstersNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChessLeftMonstersNotify_CmdId_descriptor();
inline const ::std::string& ChessLeftMonstersNotify_CmdId_Name(ChessLeftMonstersNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChessLeftMonstersNotify_CmdId_descriptor(), value);
}
inline bool ChessLeftMonstersNotify_CmdId_Parse(
    const ::std::string& name, ChessLeftMonstersNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChessLeftMonstersNotify_CmdId>(
    ChessLeftMonstersNotify_CmdId_descriptor(), name, value);
}
enum ChessEscapedMonstersNotify_CmdId {
  ChessEscapedMonstersNotify_CmdId_NONE = 0,
  ChessEscapedMonstersNotify_CmdId_CMD_ID = 5314,
  ChessEscapedMonstersNotify_CmdId_ENET_CHANNEL_ID = 0,
  ChessEscapedMonstersNotify_CmdId_ENET_IS_RELIABLE = 1,
  ChessEscapedMonstersNotify_CmdId_ChessEscapedMonstersNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChessEscapedMonstersNotify_CmdId_ChessEscapedMonstersNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChessEscapedMonstersNotify_CmdId_IsValid(int value);
const ChessEscapedMonstersNotify_CmdId ChessEscapedMonstersNotify_CmdId_CmdId_MIN = ChessEscapedMonstersNotify_CmdId_NONE;
const ChessEscapedMonstersNotify_CmdId ChessEscapedMonstersNotify_CmdId_CmdId_MAX = ChessEscapedMonstersNotify_CmdId_CMD_ID;
const int ChessEscapedMonstersNotify_CmdId_CmdId_ARRAYSIZE = ChessEscapedMonstersNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChessEscapedMonstersNotify_CmdId_descriptor();
inline const ::std::string& ChessEscapedMonstersNotify_CmdId_Name(ChessEscapedMonstersNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChessEscapedMonstersNotify_CmdId_descriptor(), value);
}
inline bool ChessEscapedMonstersNotify_CmdId_Parse(
    const ::std::string& name, ChessEscapedMonstersNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChessEscapedMonstersNotify_CmdId>(
    ChessEscapedMonstersNotify_CmdId_descriptor(), name, value);
}
enum ChessSelectedCardsNotify_CmdId {
  ChessSelectedCardsNotify_CmdId_NONE = 0,
  ChessSelectedCardsNotify_CmdId_CMD_ID = 5392,
  ChessSelectedCardsNotify_CmdId_ENET_CHANNEL_ID = 0,
  ChessSelectedCardsNotify_CmdId_ENET_IS_RELIABLE = 1,
  ChessSelectedCardsNotify_CmdId_ChessSelectedCardsNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChessSelectedCardsNotify_CmdId_ChessSelectedCardsNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChessSelectedCardsNotify_CmdId_IsValid(int value);
const ChessSelectedCardsNotify_CmdId ChessSelectedCardsNotify_CmdId_CmdId_MIN = ChessSelectedCardsNotify_CmdId_NONE;
const ChessSelectedCardsNotify_CmdId ChessSelectedCardsNotify_CmdId_CmdId_MAX = ChessSelectedCardsNotify_CmdId_CMD_ID;
const int ChessSelectedCardsNotify_CmdId_CmdId_ARRAYSIZE = ChessSelectedCardsNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChessSelectedCardsNotify_CmdId_descriptor();
inline const ::std::string& ChessSelectedCardsNotify_CmdId_Name(ChessSelectedCardsNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChessSelectedCardsNotify_CmdId_descriptor(), value);
}
inline bool ChessSelectedCardsNotify_CmdId_Parse(
    const ::std::string& name, ChessSelectedCardsNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChessSelectedCardsNotify_CmdId>(
    ChessSelectedCardsNotify_CmdId_descriptor(), name, value);
}
enum GlobalBuildingInfoNotify_CmdId {
  GlobalBuildingInfoNotify_CmdId_NONE = 0,
  GlobalBuildingInfoNotify_CmdId_CMD_ID = 5320,
  GlobalBuildingInfoNotify_CmdId_ENET_CHANNEL_ID = 0,
  GlobalBuildingInfoNotify_CmdId_ENET_IS_RELIABLE = 1,
  GlobalBuildingInfoNotify_CmdId_GlobalBuildingInfoNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GlobalBuildingInfoNotify_CmdId_GlobalBuildingInfoNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GlobalBuildingInfoNotify_CmdId_IsValid(int value);
const GlobalBuildingInfoNotify_CmdId GlobalBuildingInfoNotify_CmdId_CmdId_MIN = GlobalBuildingInfoNotify_CmdId_NONE;
const GlobalBuildingInfoNotify_CmdId GlobalBuildingInfoNotify_CmdId_CmdId_MAX = GlobalBuildingInfoNotify_CmdId_CMD_ID;
const int GlobalBuildingInfoNotify_CmdId_CmdId_ARRAYSIZE = GlobalBuildingInfoNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GlobalBuildingInfoNotify_CmdId_descriptor();
inline const ::std::string& GlobalBuildingInfoNotify_CmdId_Name(GlobalBuildingInfoNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GlobalBuildingInfoNotify_CmdId_descriptor(), value);
}
inline bool GlobalBuildingInfoNotify_CmdId_Parse(
    const ::std::string& name, GlobalBuildingInfoNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GlobalBuildingInfoNotify_CmdId>(
    GlobalBuildingInfoNotify_CmdId_descriptor(), name, value);
}
enum IrodoriChessPlayerInfoNotify_CmdId {
  IrodoriChessPlayerInfoNotify_CmdId_NONE = 0,
  IrodoriChessPlayerInfoNotify_CmdId_CMD_ID = 5364,
  IrodoriChessPlayerInfoNotify_CmdId_ENET_CHANNEL_ID = 0,
  IrodoriChessPlayerInfoNotify_CmdId_ENET_IS_RELIABLE = 1,
  IrodoriChessPlayerInfoNotify_CmdId_IrodoriChessPlayerInfoNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  IrodoriChessPlayerInfoNotify_CmdId_IrodoriChessPlayerInfoNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool IrodoriChessPlayerInfoNotify_CmdId_IsValid(int value);
const IrodoriChessPlayerInfoNotify_CmdId IrodoriChessPlayerInfoNotify_CmdId_CmdId_MIN = IrodoriChessPlayerInfoNotify_CmdId_NONE;
const IrodoriChessPlayerInfoNotify_CmdId IrodoriChessPlayerInfoNotify_CmdId_CmdId_MAX = IrodoriChessPlayerInfoNotify_CmdId_CMD_ID;
const int IrodoriChessPlayerInfoNotify_CmdId_CmdId_ARRAYSIZE = IrodoriChessPlayerInfoNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* IrodoriChessPlayerInfoNotify_CmdId_descriptor();
inline const ::std::string& IrodoriChessPlayerInfoNotify_CmdId_Name(IrodoriChessPlayerInfoNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    IrodoriChessPlayerInfoNotify_CmdId_descriptor(), value);
}
inline bool IrodoriChessPlayerInfoNotify_CmdId_Parse(
    const ::std::string& name, IrodoriChessPlayerInfoNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IrodoriChessPlayerInfoNotify_CmdId>(
    IrodoriChessPlayerInfoNotify_CmdId_descriptor(), name, value);
}
enum IrodoriChessLeftMonsterNotify_CmdId {
  IrodoriChessLeftMonsterNotify_CmdId_NONE = 0,
  IrodoriChessLeftMonsterNotify_CmdId_CMD_ID = 5338,
  IrodoriChessLeftMonsterNotify_CmdId_ENET_CHANNEL_ID = 0,
  IrodoriChessLeftMonsterNotify_CmdId_ENET_IS_RELIABLE = 1,
  IrodoriChessLeftMonsterNotify_CmdId_IrodoriChessLeftMonsterNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  IrodoriChessLeftMonsterNotify_CmdId_IrodoriChessLeftMonsterNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool IrodoriChessLeftMonsterNotify_CmdId_IsValid(int value);
const IrodoriChessLeftMonsterNotify_CmdId IrodoriChessLeftMonsterNotify_CmdId_CmdId_MIN = IrodoriChessLeftMonsterNotify_CmdId_NONE;
const IrodoriChessLeftMonsterNotify_CmdId IrodoriChessLeftMonsterNotify_CmdId_CmdId_MAX = IrodoriChessLeftMonsterNotify_CmdId_CMD_ID;
const int IrodoriChessLeftMonsterNotify_CmdId_CmdId_ARRAYSIZE = IrodoriChessLeftMonsterNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* IrodoriChessLeftMonsterNotify_CmdId_descriptor();
inline const ::std::string& IrodoriChessLeftMonsterNotify_CmdId_Name(IrodoriChessLeftMonsterNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    IrodoriChessLeftMonsterNotify_CmdId_descriptor(), value);
}
inline bool IrodoriChessLeftMonsterNotify_CmdId_Parse(
    const ::std::string& name, IrodoriChessLeftMonsterNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IrodoriChessLeftMonsterNotify_CmdId>(
    IrodoriChessLeftMonsterNotify_CmdId_descriptor(), name, value);
}
enum BrickBreakerPlayerReadyNotify_CmdId {
  BrickBreakerPlayerReadyNotify_CmdId_NONE = 0,
  BrickBreakerPlayerReadyNotify_CmdId_CMD_ID = 5345,
  BrickBreakerPlayerReadyNotify_CmdId_ENET_CHANNEL_ID = 0,
  BrickBreakerPlayerReadyNotify_CmdId_ENET_IS_RELIABLE = 1,
  BrickBreakerPlayerReadyNotify_CmdId_BrickBreakerPlayerReadyNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BrickBreakerPlayerReadyNotify_CmdId_BrickBreakerPlayerReadyNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BrickBreakerPlayerReadyNotify_CmdId_IsValid(int value);
const BrickBreakerPlayerReadyNotify_CmdId BrickBreakerPlayerReadyNotify_CmdId_CmdId_MIN = BrickBreakerPlayerReadyNotify_CmdId_NONE;
const BrickBreakerPlayerReadyNotify_CmdId BrickBreakerPlayerReadyNotify_CmdId_CmdId_MAX = BrickBreakerPlayerReadyNotify_CmdId_CMD_ID;
const int BrickBreakerPlayerReadyNotify_CmdId_CmdId_ARRAYSIZE = BrickBreakerPlayerReadyNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BrickBreakerPlayerReadyNotify_CmdId_descriptor();
inline const ::std::string& BrickBreakerPlayerReadyNotify_CmdId_Name(BrickBreakerPlayerReadyNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BrickBreakerPlayerReadyNotify_CmdId_descriptor(), value);
}
inline bool BrickBreakerPlayerReadyNotify_CmdId_Parse(
    const ::std::string& name, BrickBreakerPlayerReadyNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BrickBreakerPlayerReadyNotify_CmdId>(
    BrickBreakerPlayerReadyNotify_CmdId_descriptor(), name, value);
}
enum BrickBreakerPlayerSetAvatarNotify_CmdId {
  BrickBreakerPlayerSetAvatarNotify_CmdId_NONE = 0,
  BrickBreakerPlayerSetAvatarNotify_CmdId_CMD_ID = 5308,
  BrickBreakerPlayerSetAvatarNotify_CmdId_ENET_CHANNEL_ID = 0,
  BrickBreakerPlayerSetAvatarNotify_CmdId_ENET_IS_RELIABLE = 1,
  BrickBreakerPlayerSetAvatarNotify_CmdId_BrickBreakerPlayerSetAvatarNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BrickBreakerPlayerSetAvatarNotify_CmdId_BrickBreakerPlayerSetAvatarNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BrickBreakerPlayerSetAvatarNotify_CmdId_IsValid(int value);
const BrickBreakerPlayerSetAvatarNotify_CmdId BrickBreakerPlayerSetAvatarNotify_CmdId_CmdId_MIN = BrickBreakerPlayerSetAvatarNotify_CmdId_NONE;
const BrickBreakerPlayerSetAvatarNotify_CmdId BrickBreakerPlayerSetAvatarNotify_CmdId_CmdId_MAX = BrickBreakerPlayerSetAvatarNotify_CmdId_CMD_ID;
const int BrickBreakerPlayerSetAvatarNotify_CmdId_CmdId_ARRAYSIZE = BrickBreakerPlayerSetAvatarNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BrickBreakerPlayerSetAvatarNotify_CmdId_descriptor();
inline const ::std::string& BrickBreakerPlayerSetAvatarNotify_CmdId_Name(BrickBreakerPlayerSetAvatarNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BrickBreakerPlayerSetAvatarNotify_CmdId_descriptor(), value);
}
inline bool BrickBreakerPlayerSetAvatarNotify_CmdId_Parse(
    const ::std::string& name, BrickBreakerPlayerSetAvatarNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BrickBreakerPlayerSetAvatarNotify_CmdId>(
    BrickBreakerPlayerSetAvatarNotify_CmdId_descriptor(), name, value);
}
enum BrickBreakerPlayerSetSkillNotify_CmdId {
  BrickBreakerPlayerSetSkillNotify_CmdId_NONE = 0,
  BrickBreakerPlayerSetSkillNotify_CmdId_CMD_ID = 5309,
  BrickBreakerPlayerSetSkillNotify_CmdId_ENET_CHANNEL_ID = 0,
  BrickBreakerPlayerSetSkillNotify_CmdId_ENET_IS_RELIABLE = 1,
  BrickBreakerPlayerSetSkillNotify_CmdId_BrickBreakerPlayerSetSkillNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BrickBreakerPlayerSetSkillNotify_CmdId_BrickBreakerPlayerSetSkillNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BrickBreakerPlayerSetSkillNotify_CmdId_IsValid(int value);
const BrickBreakerPlayerSetSkillNotify_CmdId BrickBreakerPlayerSetSkillNotify_CmdId_CmdId_MIN = BrickBreakerPlayerSetSkillNotify_CmdId_NONE;
const BrickBreakerPlayerSetSkillNotify_CmdId BrickBreakerPlayerSetSkillNotify_CmdId_CmdId_MAX = BrickBreakerPlayerSetSkillNotify_CmdId_CMD_ID;
const int BrickBreakerPlayerSetSkillNotify_CmdId_CmdId_ARRAYSIZE = BrickBreakerPlayerSetSkillNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BrickBreakerPlayerSetSkillNotify_CmdId_descriptor();
inline const ::std::string& BrickBreakerPlayerSetSkillNotify_CmdId_Name(BrickBreakerPlayerSetSkillNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BrickBreakerPlayerSetSkillNotify_CmdId_descriptor(), value);
}
inline bool BrickBreakerPlayerSetSkillNotify_CmdId_Parse(
    const ::std::string& name, BrickBreakerPlayerSetSkillNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BrickBreakerPlayerSetSkillNotify_CmdId>(
    BrickBreakerPlayerSetSkillNotify_CmdId_descriptor(), name, value);
}
enum BrickBreakerSetReadyReq_CmdId {
  BrickBreakerSetReadyReq_CmdId_NONE = 0,
  BrickBreakerSetReadyReq_CmdId_CMD_ID = 5352,
  BrickBreakerSetReadyReq_CmdId_ENET_CHANNEL_ID = 0,
  BrickBreakerSetReadyReq_CmdId_ENET_IS_RELIABLE = 1,
  BrickBreakerSetReadyReq_CmdId_IS_ALLOW_CLIENT = 1,
  BrickBreakerSetReadyReq_CmdId_BrickBreakerSetReadyReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BrickBreakerSetReadyReq_CmdId_BrickBreakerSetReadyReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BrickBreakerSetReadyReq_CmdId_IsValid(int value);
const BrickBreakerSetReadyReq_CmdId BrickBreakerSetReadyReq_CmdId_CmdId_MIN = BrickBreakerSetReadyReq_CmdId_NONE;
const BrickBreakerSetReadyReq_CmdId BrickBreakerSetReadyReq_CmdId_CmdId_MAX = BrickBreakerSetReadyReq_CmdId_CMD_ID;
const int BrickBreakerSetReadyReq_CmdId_CmdId_ARRAYSIZE = BrickBreakerSetReadyReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BrickBreakerSetReadyReq_CmdId_descriptor();
inline const ::std::string& BrickBreakerSetReadyReq_CmdId_Name(BrickBreakerSetReadyReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BrickBreakerSetReadyReq_CmdId_descriptor(), value);
}
inline bool BrickBreakerSetReadyReq_CmdId_Parse(
    const ::std::string& name, BrickBreakerSetReadyReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BrickBreakerSetReadyReq_CmdId>(
    BrickBreakerSetReadyReq_CmdId_descriptor(), name, value);
}
enum BrickBreakerSetReadyRsp_CmdId {
  BrickBreakerSetReadyRsp_CmdId_NONE = 0,
  BrickBreakerSetReadyRsp_CmdId_CMD_ID = 5377,
  BrickBreakerSetReadyRsp_CmdId_ENET_CHANNEL_ID = 0,
  BrickBreakerSetReadyRsp_CmdId_ENET_IS_RELIABLE = 1,
  BrickBreakerSetReadyRsp_CmdId_BrickBreakerSetReadyRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BrickBreakerSetReadyRsp_CmdId_BrickBreakerSetReadyRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BrickBreakerSetReadyRsp_CmdId_IsValid(int value);
const BrickBreakerSetReadyRsp_CmdId BrickBreakerSetReadyRsp_CmdId_CmdId_MIN = BrickBreakerSetReadyRsp_CmdId_NONE;
const BrickBreakerSetReadyRsp_CmdId BrickBreakerSetReadyRsp_CmdId_CmdId_MAX = BrickBreakerSetReadyRsp_CmdId_CMD_ID;
const int BrickBreakerSetReadyRsp_CmdId_CmdId_ARRAYSIZE = BrickBreakerSetReadyRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BrickBreakerSetReadyRsp_CmdId_descriptor();
inline const ::std::string& BrickBreakerSetReadyRsp_CmdId_Name(BrickBreakerSetReadyRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BrickBreakerSetReadyRsp_CmdId_descriptor(), value);
}
inline bool BrickBreakerSetReadyRsp_CmdId_Parse(
    const ::std::string& name, BrickBreakerSetReadyRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BrickBreakerSetReadyRsp_CmdId>(
    BrickBreakerSetReadyRsp_CmdId_descriptor(), name, value);
}
enum BrickBreakerSelectAvatarReq_CmdId {
  BrickBreakerSelectAvatarReq_CmdId_NONE = 0,
  BrickBreakerSelectAvatarReq_CmdId_CMD_ID = 5337,
  BrickBreakerSelectAvatarReq_CmdId_ENET_CHANNEL_ID = 0,
  BrickBreakerSelectAvatarReq_CmdId_ENET_IS_RELIABLE = 1,
  BrickBreakerSelectAvatarReq_CmdId_IS_ALLOW_CLIENT = 1,
  BrickBreakerSelectAvatarReq_CmdId_BrickBreakerSelectAvatarReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BrickBreakerSelectAvatarReq_CmdId_BrickBreakerSelectAvatarReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BrickBreakerSelectAvatarReq_CmdId_IsValid(int value);
const BrickBreakerSelectAvatarReq_CmdId BrickBreakerSelectAvatarReq_CmdId_CmdId_MIN = BrickBreakerSelectAvatarReq_CmdId_NONE;
const BrickBreakerSelectAvatarReq_CmdId BrickBreakerSelectAvatarReq_CmdId_CmdId_MAX = BrickBreakerSelectAvatarReq_CmdId_CMD_ID;
const int BrickBreakerSelectAvatarReq_CmdId_CmdId_ARRAYSIZE = BrickBreakerSelectAvatarReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BrickBreakerSelectAvatarReq_CmdId_descriptor();
inline const ::std::string& BrickBreakerSelectAvatarReq_CmdId_Name(BrickBreakerSelectAvatarReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BrickBreakerSelectAvatarReq_CmdId_descriptor(), value);
}
inline bool BrickBreakerSelectAvatarReq_CmdId_Parse(
    const ::std::string& name, BrickBreakerSelectAvatarReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BrickBreakerSelectAvatarReq_CmdId>(
    BrickBreakerSelectAvatarReq_CmdId_descriptor(), name, value);
}
enum BrickBreakerSelectAvatarRsp_CmdId {
  BrickBreakerSelectAvatarRsp_CmdId_NONE = 0,
  BrickBreakerSelectAvatarRsp_CmdId_CMD_ID = 5385,
  BrickBreakerSelectAvatarRsp_CmdId_ENET_CHANNEL_ID = 0,
  BrickBreakerSelectAvatarRsp_CmdId_ENET_IS_RELIABLE = 1,
  BrickBreakerSelectAvatarRsp_CmdId_BrickBreakerSelectAvatarRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BrickBreakerSelectAvatarRsp_CmdId_BrickBreakerSelectAvatarRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BrickBreakerSelectAvatarRsp_CmdId_IsValid(int value);
const BrickBreakerSelectAvatarRsp_CmdId BrickBreakerSelectAvatarRsp_CmdId_CmdId_MIN = BrickBreakerSelectAvatarRsp_CmdId_NONE;
const BrickBreakerSelectAvatarRsp_CmdId BrickBreakerSelectAvatarRsp_CmdId_CmdId_MAX = BrickBreakerSelectAvatarRsp_CmdId_CMD_ID;
const int BrickBreakerSelectAvatarRsp_CmdId_CmdId_ARRAYSIZE = BrickBreakerSelectAvatarRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BrickBreakerSelectAvatarRsp_CmdId_descriptor();
inline const ::std::string& BrickBreakerSelectAvatarRsp_CmdId_Name(BrickBreakerSelectAvatarRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BrickBreakerSelectAvatarRsp_CmdId_descriptor(), value);
}
inline bool BrickBreakerSelectAvatarRsp_CmdId_Parse(
    const ::std::string& name, BrickBreakerSelectAvatarRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BrickBreakerSelectAvatarRsp_CmdId>(
    BrickBreakerSelectAvatarRsp_CmdId_descriptor(), name, value);
}
enum BrickBreakerSelectSkillReq_CmdId {
  BrickBreakerSelectSkillReq_CmdId_NONE = 0,
  BrickBreakerSelectSkillReq_CmdId_CMD_ID = 5325,
  BrickBreakerSelectSkillReq_CmdId_ENET_CHANNEL_ID = 0,
  BrickBreakerSelectSkillReq_CmdId_ENET_IS_RELIABLE = 1,
  BrickBreakerSelectSkillReq_CmdId_IS_ALLOW_CLIENT = 1,
  BrickBreakerSelectSkillReq_CmdId_BrickBreakerSelectSkillReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BrickBreakerSelectSkillReq_CmdId_BrickBreakerSelectSkillReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BrickBreakerSelectSkillReq_CmdId_IsValid(int value);
const BrickBreakerSelectSkillReq_CmdId BrickBreakerSelectSkillReq_CmdId_CmdId_MIN = BrickBreakerSelectSkillReq_CmdId_NONE;
const BrickBreakerSelectSkillReq_CmdId BrickBreakerSelectSkillReq_CmdId_CmdId_MAX = BrickBreakerSelectSkillReq_CmdId_CMD_ID;
const int BrickBreakerSelectSkillReq_CmdId_CmdId_ARRAYSIZE = BrickBreakerSelectSkillReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BrickBreakerSelectSkillReq_CmdId_descriptor();
inline const ::std::string& BrickBreakerSelectSkillReq_CmdId_Name(BrickBreakerSelectSkillReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BrickBreakerSelectSkillReq_CmdId_descriptor(), value);
}
inline bool BrickBreakerSelectSkillReq_CmdId_Parse(
    const ::std::string& name, BrickBreakerSelectSkillReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BrickBreakerSelectSkillReq_CmdId>(
    BrickBreakerSelectSkillReq_CmdId_descriptor(), name, value);
}
enum BrickBreakerSelectSkillRsp_CmdId {
  BrickBreakerSelectSkillRsp_CmdId_NONE = 0,
  BrickBreakerSelectSkillRsp_CmdId_CMD_ID = 5378,
  BrickBreakerSelectSkillRsp_CmdId_ENET_CHANNEL_ID = 0,
  BrickBreakerSelectSkillRsp_CmdId_ENET_IS_RELIABLE = 1,
  BrickBreakerSelectSkillRsp_CmdId_BrickBreakerSelectSkillRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BrickBreakerSelectSkillRsp_CmdId_BrickBreakerSelectSkillRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BrickBreakerSelectSkillRsp_CmdId_IsValid(int value);
const BrickBreakerSelectSkillRsp_CmdId BrickBreakerSelectSkillRsp_CmdId_CmdId_MIN = BrickBreakerSelectSkillRsp_CmdId_NONE;
const BrickBreakerSelectSkillRsp_CmdId BrickBreakerSelectSkillRsp_CmdId_CmdId_MAX = BrickBreakerSelectSkillRsp_CmdId_CMD_ID;
const int BrickBreakerSelectSkillRsp_CmdId_CmdId_ARRAYSIZE = BrickBreakerSelectSkillRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BrickBreakerSelectSkillRsp_CmdId_descriptor();
inline const ::std::string& BrickBreakerSelectSkillRsp_CmdId_Name(BrickBreakerSelectSkillRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BrickBreakerSelectSkillRsp_CmdId_descriptor(), value);
}
inline bool BrickBreakerSelectSkillRsp_CmdId_Parse(
    const ::std::string& name, BrickBreakerSelectSkillRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BrickBreakerSelectSkillRsp_CmdId>(
    BrickBreakerSelectSkillRsp_CmdId_descriptor(), name, value);
}
enum BrickBreakerSetChangingReq_CmdId {
  BrickBreakerSetChangingReq_CmdId_NONE = 0,
  BrickBreakerSetChangingReq_CmdId_CMD_ID = 5336,
  BrickBreakerSetChangingReq_CmdId_ENET_CHANNEL_ID = 0,
  BrickBreakerSetChangingReq_CmdId_ENET_IS_RELIABLE = 1,
  BrickBreakerSetChangingReq_CmdId_IS_ALLOW_CLIENT = 1,
  BrickBreakerSetChangingReq_CmdId_BrickBreakerSetChangingReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BrickBreakerSetChangingReq_CmdId_BrickBreakerSetChangingReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BrickBreakerSetChangingReq_CmdId_IsValid(int value);
const BrickBreakerSetChangingReq_CmdId BrickBreakerSetChangingReq_CmdId_CmdId_MIN = BrickBreakerSetChangingReq_CmdId_NONE;
const BrickBreakerSetChangingReq_CmdId BrickBreakerSetChangingReq_CmdId_CmdId_MAX = BrickBreakerSetChangingReq_CmdId_CMD_ID;
const int BrickBreakerSetChangingReq_CmdId_CmdId_ARRAYSIZE = BrickBreakerSetChangingReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BrickBreakerSetChangingReq_CmdId_descriptor();
inline const ::std::string& BrickBreakerSetChangingReq_CmdId_Name(BrickBreakerSetChangingReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BrickBreakerSetChangingReq_CmdId_descriptor(), value);
}
inline bool BrickBreakerSetChangingReq_CmdId_Parse(
    const ::std::string& name, BrickBreakerSetChangingReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BrickBreakerSetChangingReq_CmdId>(
    BrickBreakerSetChangingReq_CmdId_descriptor(), name, value);
}
enum BrickBreakerSetChangingRsp_CmdId {
  BrickBreakerSetChangingRsp_CmdId_NONE = 0,
  BrickBreakerSetChangingRsp_CmdId_CMD_ID = 5354,
  BrickBreakerSetChangingRsp_CmdId_ENET_CHANNEL_ID = 0,
  BrickBreakerSetChangingRsp_CmdId_ENET_IS_RELIABLE = 1,
  BrickBreakerSetChangingRsp_CmdId_BrickBreakerSetChangingRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BrickBreakerSetChangingRsp_CmdId_BrickBreakerSetChangingRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BrickBreakerSetChangingRsp_CmdId_IsValid(int value);
const BrickBreakerSetChangingRsp_CmdId BrickBreakerSetChangingRsp_CmdId_CmdId_MIN = BrickBreakerSetChangingRsp_CmdId_NONE;
const BrickBreakerSetChangingRsp_CmdId BrickBreakerSetChangingRsp_CmdId_CmdId_MAX = BrickBreakerSetChangingRsp_CmdId_CMD_ID;
const int BrickBreakerSetChangingRsp_CmdId_CmdId_ARRAYSIZE = BrickBreakerSetChangingRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BrickBreakerSetChangingRsp_CmdId_descriptor();
inline const ::std::string& BrickBreakerSetChangingRsp_CmdId_Name(BrickBreakerSetChangingRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BrickBreakerSetChangingRsp_CmdId_descriptor(), value);
}
inline bool BrickBreakerSetChangingRsp_CmdId_Parse(
    const ::std::string& name, BrickBreakerSetChangingRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BrickBreakerSetChangingRsp_CmdId>(
    BrickBreakerSetChangingRsp_CmdId_descriptor(), name, value);
}
enum BrickBreakerPlayerSetChangingNotify_CmdId {
  BrickBreakerPlayerSetChangingNotify_CmdId_NONE = 0,
  BrickBreakerPlayerSetChangingNotify_CmdId_CMD_ID = 5383,
  BrickBreakerPlayerSetChangingNotify_CmdId_ENET_CHANNEL_ID = 0,
  BrickBreakerPlayerSetChangingNotify_CmdId_ENET_IS_RELIABLE = 1,
  BrickBreakerPlayerSetChangingNotify_CmdId_BrickBreakerPlayerSetChangingNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BrickBreakerPlayerSetChangingNotify_CmdId_BrickBreakerPlayerSetChangingNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BrickBreakerPlayerSetChangingNotify_CmdId_IsValid(int value);
const BrickBreakerPlayerSetChangingNotify_CmdId BrickBreakerPlayerSetChangingNotify_CmdId_CmdId_MIN = BrickBreakerPlayerSetChangingNotify_CmdId_NONE;
const BrickBreakerPlayerSetChangingNotify_CmdId BrickBreakerPlayerSetChangingNotify_CmdId_CmdId_MAX = BrickBreakerPlayerSetChangingNotify_CmdId_CMD_ID;
const int BrickBreakerPlayerSetChangingNotify_CmdId_CmdId_ARRAYSIZE = BrickBreakerPlayerSetChangingNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BrickBreakerPlayerSetChangingNotify_CmdId_descriptor();
inline const ::std::string& BrickBreakerPlayerSetChangingNotify_CmdId_Name(BrickBreakerPlayerSetChangingNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BrickBreakerPlayerSetChangingNotify_CmdId_descriptor(), value);
}
inline bool BrickBreakerPlayerSetChangingNotify_CmdId_Parse(
    const ::std::string& name, BrickBreakerPlayerSetChangingNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BrickBreakerPlayerSetChangingNotify_CmdId>(
    BrickBreakerPlayerSetChangingNotify_CmdId_descriptor(), name, value);
}
enum CoinCollectPrepareStageNotify_CmdId {
  CoinCollectPrepareStageNotify_CmdId_NONE = 0,
  CoinCollectPrepareStageNotify_CmdId_CMD_ID = 6536,
  CoinCollectPrepareStageNotify_CmdId_ENET_CHANNEL_ID = 0,
  CoinCollectPrepareStageNotify_CmdId_ENET_IS_RELIABLE = 1,
  CoinCollectPrepareStageNotify_CmdId_CoinCollectPrepareStageNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CoinCollectPrepareStageNotify_CmdId_CoinCollectPrepareStageNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CoinCollectPrepareStageNotify_CmdId_IsValid(int value);
const CoinCollectPrepareStageNotify_CmdId CoinCollectPrepareStageNotify_CmdId_CmdId_MIN = CoinCollectPrepareStageNotify_CmdId_NONE;
const CoinCollectPrepareStageNotify_CmdId CoinCollectPrepareStageNotify_CmdId_CmdId_MAX = CoinCollectPrepareStageNotify_CmdId_CMD_ID;
const int CoinCollectPrepareStageNotify_CmdId_CmdId_ARRAYSIZE = CoinCollectPrepareStageNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CoinCollectPrepareStageNotify_CmdId_descriptor();
inline const ::std::string& CoinCollectPrepareStageNotify_CmdId_Name(CoinCollectPrepareStageNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CoinCollectPrepareStageNotify_CmdId_descriptor(), value);
}
inline bool CoinCollectPrepareStageNotify_CmdId_Parse(
    const ::std::string& name, CoinCollectPrepareStageNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CoinCollectPrepareStageNotify_CmdId>(
    CoinCollectPrepareStageNotify_CmdId_descriptor(), name, value);
}
enum LanV3BoatSettleNotify_CmdId {
  LanV3BoatSettleNotify_CmdId_NONE = 0,
  LanV3BoatSettleNotify_CmdId_CMD_ID = 6539,
  LanV3BoatSettleNotify_CmdId_ENET_CHANNEL_ID = 0,
  LanV3BoatSettleNotify_CmdId_ENET_IS_RELIABLE = 1,
  LanV3BoatSettleNotify_CmdId_LanV3BoatSettleNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LanV3BoatSettleNotify_CmdId_LanV3BoatSettleNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LanV3BoatSettleNotify_CmdId_IsValid(int value);
const LanV3BoatSettleNotify_CmdId LanV3BoatSettleNotify_CmdId_CmdId_MIN = LanV3BoatSettleNotify_CmdId_NONE;
const LanV3BoatSettleNotify_CmdId LanV3BoatSettleNotify_CmdId_CmdId_MAX = LanV3BoatSettleNotify_CmdId_CMD_ID;
const int LanV3BoatSettleNotify_CmdId_CmdId_ARRAYSIZE = LanV3BoatSettleNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* LanV3BoatSettleNotify_CmdId_descriptor();
inline const ::std::string& LanV3BoatSettleNotify_CmdId_Name(LanV3BoatSettleNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    LanV3BoatSettleNotify_CmdId_descriptor(), value);
}
inline bool LanV3BoatSettleNotify_CmdId_Parse(
    const ::std::string& name, LanV3BoatSettleNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LanV3BoatSettleNotify_CmdId>(
    LanV3BoatSettleNotify_CmdId_descriptor(), name, value);
}
enum MultistagePlayType {
  MULTISTAGE_PLAY_TYPE_NON = 0,
  MULTISTAGE_PLAY_TYPE_MECHANICUS = 1,
  MULTISTAGE_PLAY_TYPE_FLEUR_FAIR = 2,
  MULTISTAGE_PLAY_TYPE_HIDE_AND_SEEK = 3,
  MULTISTAGE_PLAY_TYPE_BOUNCE_CONJURING = 4,
  MULTISTAGE_PLAY_TYPE_CHESS = 5,
  MULTISTAGE_PLAY_TYPE_IRODORI_CHESS = 6,
  MULTISTAGE_PLAY_TYPE_CHAR_AMUSEMENT = 7,
  MULTISTAGE_PLAY_TYPE_BRICK_BREAKER = 8,
  MULTISTAGE_PLAY_TYPE_COIN_COLLECT = 9,
  MULTISTAGE_PLAY_TYPE_LAN_V3_BOAT = 10,
  MultistagePlayType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MultistagePlayType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MultistagePlayType_IsValid(int value);
const MultistagePlayType MultistagePlayType_MIN = MULTISTAGE_PLAY_TYPE_NON;
const MultistagePlayType MultistagePlayType_MAX = MULTISTAGE_PLAY_TYPE_LAN_V3_BOAT;
const int MultistagePlayType_ARRAYSIZE = MultistagePlayType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MultistagePlayType_descriptor();
inline const ::std::string& MultistagePlayType_Name(MultistagePlayType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MultistagePlayType_descriptor(), value);
}
inline bool MultistagePlayType_Parse(
    const ::std::string& name, MultistagePlayType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MultistagePlayType>(
    MultistagePlayType_descriptor(), name, value);
}
enum InBattleMechanicusStageType {
  IN_BATTLE_MECHANICUS_STAGE_NONE = 0,
  IN_BATTLE_MECHANICUS_STAGE_BUILD = 1,
  IN_BATTLE_MECHANICUS_STAGE_CARD_FLIP = 2,
  IN_BATTLE_MECHANICUS_STAGE_KILL = 3,
  InBattleMechanicusStageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InBattleMechanicusStageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InBattleMechanicusStageType_IsValid(int value);
const InBattleMechanicusStageType InBattleMechanicusStageType_MIN = IN_BATTLE_MECHANICUS_STAGE_NONE;
const InBattleMechanicusStageType InBattleMechanicusStageType_MAX = IN_BATTLE_MECHANICUS_STAGE_KILL;
const int InBattleMechanicusStageType_ARRAYSIZE = InBattleMechanicusStageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* InBattleMechanicusStageType_descriptor();
inline const ::std::string& InBattleMechanicusStageType_Name(InBattleMechanicusStageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    InBattleMechanicusStageType_descriptor(), value);
}
inline bool InBattleMechanicusStageType_Parse(
    const ::std::string& name, InBattleMechanicusStageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InBattleMechanicusStageType>(
    InBattleMechanicusStageType_descriptor(), name, value);
}
enum InBattleMechanicusCardChallengeState {
  IN_BATTLE_MECHANICUS_CARD_CHALLENGE_NONE = 0,
  IN_BATTLE_MECHANICUS_CARD_CHALLENGE_ON_GOING = 1,
  IN_BATTLE_MECHANICUS_CARD_CHALLENGE_FAIL = 2,
  IN_BATTLE_MECHANICUS_CARD_CHALLENGE_SUCCESS = 3,
  InBattleMechanicusCardChallengeState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InBattleMechanicusCardChallengeState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InBattleMechanicusCardChallengeState_IsValid(int value);
const InBattleMechanicusCardChallengeState InBattleMechanicusCardChallengeState_MIN = IN_BATTLE_MECHANICUS_CARD_CHALLENGE_NONE;
const InBattleMechanicusCardChallengeState InBattleMechanicusCardChallengeState_MAX = IN_BATTLE_MECHANICUS_CARD_CHALLENGE_SUCCESS;
const int InBattleMechanicusCardChallengeState_ARRAYSIZE = InBattleMechanicusCardChallengeState_MAX + 1;

const ::google::protobuf::EnumDescriptor* InBattleMechanicusCardChallengeState_descriptor();
inline const ::std::string& InBattleMechanicusCardChallengeState_Name(InBattleMechanicusCardChallengeState value) {
  return ::google::protobuf::internal::NameOfEnum(
    InBattleMechanicusCardChallengeState_descriptor(), value);
}
inline bool InBattleMechanicusCardChallengeState_Parse(
    const ::std::string& name, InBattleMechanicusCardChallengeState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InBattleMechanicusCardChallengeState>(
    InBattleMechanicusCardChallengeState_descriptor(), name, value);
}
enum HideAndSeekStageType {
  HIDE_AND_SEEK_STAGE_PREPARE = 0,
  HIDE_AND_SEEK_STAGE_PICK = 1,
  HIDE_AND_SEEK_STAGE_GAME = 2,
  HIDE_AND_SEEK_STAGE_HIDE = 3,
  HIDE_AND_SEEK_STAGE_SEEK = 4,
  HIDE_AND_SEEK_STAGE_SETTLE = 5,
  HideAndSeekStageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HideAndSeekStageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HideAndSeekStageType_IsValid(int value);
const HideAndSeekStageType HideAndSeekStageType_MIN = HIDE_AND_SEEK_STAGE_PREPARE;
const HideAndSeekStageType HideAndSeekStageType_MAX = HIDE_AND_SEEK_STAGE_SETTLE;
const int HideAndSeekStageType_ARRAYSIZE = HideAndSeekStageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* HideAndSeekStageType_descriptor();
inline const ::std::string& HideAndSeekStageType_Name(HideAndSeekStageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    HideAndSeekStageType_descriptor(), value);
}
inline bool HideAndSeekStageType_Parse(
    const ::std::string& name, HideAndSeekStageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HideAndSeekStageType>(
    HideAndSeekStageType_descriptor(), name, value);
}
enum BrickBreakerStageType {
  BRICK_BREAKER_STAGE_PREPARE = 0,
  BRICK_BREAKER_STAGE_PICK = 1,
  BRICK_BREAKER_STAGE_GAME = 2,
  BRICK_BREAKER_STAGE_PLAY = 3,
  BRICK_BREAKER_STAGE_SETTLE = 4,
  BrickBreakerStageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BrickBreakerStageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BrickBreakerStageType_IsValid(int value);
const BrickBreakerStageType BrickBreakerStageType_MIN = BRICK_BREAKER_STAGE_PREPARE;
const BrickBreakerStageType BrickBreakerStageType_MAX = BRICK_BREAKER_STAGE_SETTLE;
const int BrickBreakerStageType_ARRAYSIZE = BrickBreakerStageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BrickBreakerStageType_descriptor();
inline const ::std::string& BrickBreakerStageType_Name(BrickBreakerStageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BrickBreakerStageType_descriptor(), value);
}
inline bool BrickBreakerStageType_Parse(
    const ::std::string& name, BrickBreakerStageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BrickBreakerStageType>(
    BrickBreakerStageType_descriptor(), name, value);
}
enum LanV3BoatKickReason {
  LAN_V3_KICK_REASON_NONE = 0,
  LAN_V3_KICK_REASON_EXIT_VEHICLE = 1,
  LAN_V3_KICK_REASON_AVATAR_DIE = 2,
  LAN_V3_KICK_REASON_SLOW_ENTER = 3,
  LanV3BoatKickReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LanV3BoatKickReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LanV3BoatKickReason_IsValid(int value);
const LanV3BoatKickReason LanV3BoatKickReason_MIN = LAN_V3_KICK_REASON_NONE;
const LanV3BoatKickReason LanV3BoatKickReason_MAX = LAN_V3_KICK_REASON_SLOW_ENTER;
const int LanV3BoatKickReason_ARRAYSIZE = LanV3BoatKickReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* LanV3BoatKickReason_descriptor();
inline const ::std::string& LanV3BoatKickReason_Name(LanV3BoatKickReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    LanV3BoatKickReason_descriptor(), value);
}
inline bool LanV3BoatKickReason_Parse(
    const ::std::string& name, LanV3BoatKickReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LanV3BoatKickReason>(
    LanV3BoatKickReason_descriptor(), name, value);
}
// ===================================================================

class InBattleMechanicusBuildingInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleMechanicusBuildingInfo) */ {
 public:
  InBattleMechanicusBuildingInfo();
  virtual ~InBattleMechanicusBuildingInfo();

  InBattleMechanicusBuildingInfo(const InBattleMechanicusBuildingInfo& from);

  inline InBattleMechanicusBuildingInfo& operator=(const InBattleMechanicusBuildingInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleMechanicusBuildingInfo(InBattleMechanicusBuildingInfo&& from) noexcept
    : InBattleMechanicusBuildingInfo() {
    *this = ::std::move(from);
  }

  inline InBattleMechanicusBuildingInfo& operator=(InBattleMechanicusBuildingInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleMechanicusBuildingInfo& default_instance();

  static inline const InBattleMechanicusBuildingInfo* internal_default_instance() {
    return reinterpret_cast<const InBattleMechanicusBuildingInfo*>(
               &_InBattleMechanicusBuildingInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(InBattleMechanicusBuildingInfo* other);
  friend void swap(InBattleMechanicusBuildingInfo& a, InBattleMechanicusBuildingInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleMechanicusBuildingInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleMechanicusBuildingInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleMechanicusBuildingInfo& from);
  void MergeFrom(const InBattleMechanicusBuildingInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleMechanicusBuildingInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 cost_points = 2;
  void clear_cost_points();
  static const int kCostPointsFieldNumber = 2;
  ::google::protobuf::uint32 cost_points() const;
  void set_cost_points(::google::protobuf::uint32 value);

  // uint32 level = 7;
  void clear_level();
  static const int kLevelFieldNumber = 7;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 building_id = 8;
  void clear_building_id();
  static const int kBuildingIdFieldNumber = 8;
  ::google::protobuf::uint32 building_id() const;
  void set_building_id(::google::protobuf::uint32 value);

  // uint32 refund_points = 11;
  void clear_refund_points();
  static const int kRefundPointsFieldNumber = 11;
  ::google::protobuf::uint32 refund_points() const;
  void set_refund_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InBattleMechanicusBuildingInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cost_points_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 building_id_;
  ::google::protobuf::uint32 refund_points_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InBattleMechanicusPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleMechanicusPlayerInfo) */ {
 public:
  InBattleMechanicusPlayerInfo();
  virtual ~InBattleMechanicusPlayerInfo();

  InBattleMechanicusPlayerInfo(const InBattleMechanicusPlayerInfo& from);

  inline InBattleMechanicusPlayerInfo& operator=(const InBattleMechanicusPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleMechanicusPlayerInfo(InBattleMechanicusPlayerInfo&& from) noexcept
    : InBattleMechanicusPlayerInfo() {
    *this = ::std::move(from);
  }

  inline InBattleMechanicusPlayerInfo& operator=(InBattleMechanicusPlayerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleMechanicusPlayerInfo& default_instance();

  static inline const InBattleMechanicusPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const InBattleMechanicusPlayerInfo*>(
               &_InBattleMechanicusPlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(InBattleMechanicusPlayerInfo* other);
  friend void swap(InBattleMechanicusPlayerInfo& a, InBattleMechanicusPlayerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleMechanicusPlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleMechanicusPlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleMechanicusPlayerInfo& from);
  void MergeFrom(const InBattleMechanicusPlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleMechanicusPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.InBattleMechanicusBuildingInfo building_list = 4;
  int building_list_size() const;
  void clear_building_list();
  static const int kBuildingListFieldNumber = 4;
  const ::proto::InBattleMechanicusBuildingInfo& building_list(int index) const;
  ::proto::InBattleMechanicusBuildingInfo* mutable_building_list(int index);
  ::proto::InBattleMechanicusBuildingInfo* add_building_list();
  ::google::protobuf::RepeatedPtrField< ::proto::InBattleMechanicusBuildingInfo >*
      mutable_building_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::InBattleMechanicusBuildingInfo >&
      building_list() const;

  // uint32 building_points = 3;
  void clear_building_points();
  static const int kBuildingPointsFieldNumber = 3;
  ::google::protobuf::uint32 building_points() const;
  void set_building_points(::google::protobuf::uint32 value);

  // uint32 pick_card_id = 5;
  void clear_pick_card_id();
  static const int kPickCardIdFieldNumber = 5;
  ::google::protobuf::uint32 pick_card_id() const;
  void set_pick_card_id(::google::protobuf::uint32 value);

  // bool is_card_confirmed = 13;
  void clear_is_card_confirmed();
  static const int kIsCardConfirmedFieldNumber = 13;
  bool is_card_confirmed() const;
  void set_is_card_confirmed(bool value);

  // uint32 uid = 14;
  void clear_uid();
  static const int kUidFieldNumber = 14;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InBattleMechanicusPlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::InBattleMechanicusBuildingInfo > building_list_;
  ::google::protobuf::uint32 building_points_;
  ::google::protobuf::uint32 pick_card_id_;
  bool is_card_confirmed_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InBattleMechanicusMonsterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleMechanicusMonsterInfo) */ {
 public:
  InBattleMechanicusMonsterInfo();
  virtual ~InBattleMechanicusMonsterInfo();

  InBattleMechanicusMonsterInfo(const InBattleMechanicusMonsterInfo& from);

  inline InBattleMechanicusMonsterInfo& operator=(const InBattleMechanicusMonsterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleMechanicusMonsterInfo(InBattleMechanicusMonsterInfo&& from) noexcept
    : InBattleMechanicusMonsterInfo() {
    *this = ::std::move(from);
  }

  inline InBattleMechanicusMonsterInfo& operator=(InBattleMechanicusMonsterInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleMechanicusMonsterInfo& default_instance();

  static inline const InBattleMechanicusMonsterInfo* internal_default_instance() {
    return reinterpret_cast<const InBattleMechanicusMonsterInfo*>(
               &_InBattleMechanicusMonsterInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(InBattleMechanicusMonsterInfo* other);
  friend void swap(InBattleMechanicusMonsterInfo& a, InBattleMechanicusMonsterInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleMechanicusMonsterInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleMechanicusMonsterInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleMechanicusMonsterInfo& from);
  void MergeFrom(const InBattleMechanicusMonsterInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleMechanicusMonsterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 level = 14;
  void clear_level();
  static const int kLevelFieldNumber = 14;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 monster_id = 1;
  void clear_monster_id();
  static const int kMonsterIdFieldNumber = 1;
  ::google::protobuf::uint32 monster_id() const;
  void set_monster_id(::google::protobuf::uint32 value);

  // uint32 count = 13;
  void clear_count();
  static const int kCountFieldNumber = 13;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InBattleMechanicusMonsterInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 monster_id_;
  ::google::protobuf::uint32 count_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InBattleMechanicusCardInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleMechanicusCardInfo) */ {
 public:
  InBattleMechanicusCardInfo();
  virtual ~InBattleMechanicusCardInfo();

  InBattleMechanicusCardInfo(const InBattleMechanicusCardInfo& from);

  inline InBattleMechanicusCardInfo& operator=(const InBattleMechanicusCardInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleMechanicusCardInfo(InBattleMechanicusCardInfo&& from) noexcept
    : InBattleMechanicusCardInfo() {
    *this = ::std::move(from);
  }

  inline InBattleMechanicusCardInfo& operator=(InBattleMechanicusCardInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleMechanicusCardInfo& default_instance();

  static inline const InBattleMechanicusCardInfo* internal_default_instance() {
    return reinterpret_cast<const InBattleMechanicusCardInfo*>(
               &_InBattleMechanicusCardInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(InBattleMechanicusCardInfo* other);
  friend void swap(InBattleMechanicusCardInfo& a, InBattleMechanicusCardInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleMechanicusCardInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleMechanicusCardInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleMechanicusCardInfo& from);
  void MergeFrom(const InBattleMechanicusCardInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleMechanicusCardInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 cost_points = 1;
  void clear_cost_points();
  static const int kCostPointsFieldNumber = 1;
  ::google::protobuf::uint32 cost_points() const;
  void set_cost_points(::google::protobuf::uint32 value);

  // uint32 end_round = 3;
  void clear_end_round();
  static const int kEndRoundFieldNumber = 3;
  ::google::protobuf::uint32 end_round() const;
  void set_end_round(::google::protobuf::uint32 value);

  // .proto.InBattleMechanicusCardChallengeState challenge_state = 5;
  void clear_challenge_state();
  static const int kChallengeStateFieldNumber = 5;
  ::proto::InBattleMechanicusCardChallengeState challenge_state() const;
  void set_challenge_state(::proto::InBattleMechanicusCardChallengeState value);

  // uint32 begin_round = 8;
  void clear_begin_round();
  static const int kBeginRoundFieldNumber = 8;
  ::google::protobuf::uint32 begin_round() const;
  void set_begin_round(::google::protobuf::uint32 value);

  // uint32 card_id = 11;
  void clear_card_id();
  static const int kCardIdFieldNumber = 11;
  ::google::protobuf::uint32 card_id() const;
  void set_card_id(::google::protobuf::uint32 value);

  // uint32 rand_effect_id = 12;
  void clear_rand_effect_id();
  static const int kRandEffectIdFieldNumber = 12;
  ::google::protobuf::uint32 rand_effect_id() const;
  void set_rand_effect_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InBattleMechanicusCardInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cost_points_;
  ::google::protobuf::uint32 end_round_;
  int challenge_state_;
  ::google::protobuf::uint32 begin_round_;
  ::google::protobuf::uint32 card_id_;
  ::google::protobuf::uint32 rand_effect_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InBattleMechanicusInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleMechanicusInfo) */ {
 public:
  InBattleMechanicusInfo();
  virtual ~InBattleMechanicusInfo();

  InBattleMechanicusInfo(const InBattleMechanicusInfo& from);

  inline InBattleMechanicusInfo& operator=(const InBattleMechanicusInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleMechanicusInfo(InBattleMechanicusInfo&& from) noexcept
    : InBattleMechanicusInfo() {
    *this = ::std::move(from);
  }

  inline InBattleMechanicusInfo& operator=(InBattleMechanicusInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleMechanicusInfo& default_instance();

  static inline const InBattleMechanicusInfo* internal_default_instance() {
    return reinterpret_cast<const InBattleMechanicusInfo*>(
               &_InBattleMechanicusInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(InBattleMechanicusInfo* other);
  friend void swap(InBattleMechanicusInfo& a, InBattleMechanicusInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleMechanicusInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleMechanicusInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleMechanicusInfo& from);
  void MergeFrom(const InBattleMechanicusInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleMechanicusInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.InBattleMechanicusPlayerInfo player_list = 7;
  int player_list_size() const;
  void clear_player_list();
  static const int kPlayerListFieldNumber = 7;
  const ::proto::InBattleMechanicusPlayerInfo& player_list(int index) const;
  ::proto::InBattleMechanicusPlayerInfo* mutable_player_list(int index);
  ::proto::InBattleMechanicusPlayerInfo* add_player_list();
  ::google::protobuf::RepeatedPtrField< ::proto::InBattleMechanicusPlayerInfo >*
      mutable_player_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::InBattleMechanicusPlayerInfo >&
      player_list() const;

  // repeated .proto.InBattleMechanicusCardInfo history_card_list = 11;
  int history_card_list_size() const;
  void clear_history_card_list();
  static const int kHistoryCardListFieldNumber = 11;
  const ::proto::InBattleMechanicusCardInfo& history_card_list(int index) const;
  ::proto::InBattleMechanicusCardInfo* mutable_history_card_list(int index);
  ::proto::InBattleMechanicusCardInfo* add_history_card_list();
  ::google::protobuf::RepeatedPtrField< ::proto::InBattleMechanicusCardInfo >*
      mutable_history_card_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::InBattleMechanicusCardInfo >&
      history_card_list() const;

  // repeated .proto.InBattleMechanicusMonsterInfo monster_list = 14;
  int monster_list_size() const;
  void clear_monster_list();
  static const int kMonsterListFieldNumber = 14;
  const ::proto::InBattleMechanicusMonsterInfo& monster_list(int index) const;
  ::proto::InBattleMechanicusMonsterInfo* mutable_monster_list(int index);
  ::proto::InBattleMechanicusMonsterInfo* add_monster_list();
  ::google::protobuf::RepeatedPtrField< ::proto::InBattleMechanicusMonsterInfo >*
      mutable_monster_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::InBattleMechanicusMonsterInfo >&
      monster_list() const;

  // repeated .proto.InBattleMechanicusCardInfo pick_card_list = 15;
  int pick_card_list_size() const;
  void clear_pick_card_list();
  static const int kPickCardListFieldNumber = 15;
  const ::proto::InBattleMechanicusCardInfo& pick_card_list(int index) const;
  ::proto::InBattleMechanicusCardInfo* mutable_pick_card_list(int index);
  ::proto::InBattleMechanicusCardInfo* add_pick_card_list();
  ::google::protobuf::RepeatedPtrField< ::proto::InBattleMechanicusCardInfo >*
      mutable_pick_card_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::InBattleMechanicusCardInfo >&
      pick_card_list() const;

  // repeated uint32 exit_list = 115;
  int exit_list_size() const;
  void clear_exit_list();
  static const int kExitListFieldNumber = 115;
  ::google::protobuf::uint32 exit_list(int index) const;
  void set_exit_list(int index, ::google::protobuf::uint32 value);
  void add_exit_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      exit_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_exit_list();

  // repeated uint32 entrance_list = 410;
  int entrance_list_size() const;
  void clear_entrance_list();
  static const int kEntranceListFieldNumber = 410;
  ::google::protobuf::uint32 entrance_list(int index) const;
  void set_entrance_list(int index, ::google::protobuf::uint32 value);
  void add_entrance_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      entrance_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_entrance_list();

  // uint64 wait_begin_time_us = 1;
  void clear_wait_begin_time_us();
  static const int kWaitBeginTimeUsFieldNumber = 1;
  ::google::protobuf::uint64 wait_begin_time_us() const;
  void set_wait_begin_time_us(::google::protobuf::uint64 value);

  // uint64 begin_time_ms = 2;
  void clear_begin_time_ms();
  static const int kBeginTimeMsFieldNumber = 2;
  ::google::protobuf::uint64 begin_time_ms() const;
  void set_begin_time_ms(::google::protobuf::uint64 value);

  // uint32 round = 3;
  void clear_round();
  static const int kRoundFieldNumber = 3;
  ::google::protobuf::uint32 round() const;
  void set_round(::google::protobuf::uint32 value);

  // uint32 building_stage_duration = 4;
  void clear_building_stage_duration();
  static const int kBuildingStageDurationFieldNumber = 4;
  ::google::protobuf::uint32 building_stage_duration() const;
  void set_building_stage_duration(::google::protobuf::uint32 value);

  // uint32 left_monster = 5;
  void clear_left_monster();
  static const int kLeftMonsterFieldNumber = 5;
  ::google::protobuf::uint32 left_monster() const;
  void set_left_monster(::google::protobuf::uint32 value);

  // uint32 excaped_monster_num = 6;
  void clear_excaped_monster_num();
  static const int kExcapedMonsterNumFieldNumber = 6;
  ::google::protobuf::uint32 excaped_monster_num() const;
  void set_excaped_monster_num(::google::protobuf::uint32 value);

  // uint64 duration_ms = 8;
  void clear_duration_ms();
  static const int kDurationMsFieldNumber = 8;
  ::google::protobuf::uint64 duration_ms() const;
  void set_duration_ms(::google::protobuf::uint64 value);

  // .proto.InBattleMechanicusStageType stage = 9;
  void clear_stage();
  static const int kStageFieldNumber = 9;
  ::proto::InBattleMechanicusStageType stage() const;
  void set_stage(::proto::InBattleMechanicusStageType value);

  // uint32 max_excape_monster_num = 10;
  void clear_max_excape_monster_num();
  static const int kMaxExcapeMonsterNumFieldNumber = 10;
  ::google::protobuf::uint32 max_excape_monster_num() const;
  void set_max_excape_monster_num(::google::protobuf::uint32 value);

  // uint32 total_round = 12;
  void clear_total_round();
  static const int kTotalRoundFieldNumber = 12;
  ::google::protobuf::uint32 total_round() const;
  void set_total_round(::google::protobuf::uint32 value);

  // uint32 wait_seconds = 13;
  void clear_wait_seconds();
  static const int kWaitSecondsFieldNumber = 13;
  ::google::protobuf::uint32 wait_seconds() const;
  void set_wait_seconds(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InBattleMechanicusInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::InBattleMechanicusPlayerInfo > player_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::InBattleMechanicusCardInfo > history_card_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::InBattleMechanicusMonsterInfo > monster_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::InBattleMechanicusCardInfo > pick_card_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > exit_list_;
  mutable int _exit_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > entrance_list_;
  mutable int _entrance_list_cached_byte_size_;
  ::google::protobuf::uint64 wait_begin_time_us_;
  ::google::protobuf::uint64 begin_time_ms_;
  ::google::protobuf::uint32 round_;
  ::google::protobuf::uint32 building_stage_duration_;
  ::google::protobuf::uint32 left_monster_;
  ::google::protobuf::uint32 excaped_monster_num_;
  ::google::protobuf::uint64 duration_ms_;
  int stage_;
  ::google::protobuf::uint32 max_excape_monster_num_;
  ::google::protobuf::uint32 total_round_;
  ::google::protobuf::uint32 wait_seconds_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InBattleFleurFairInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleFleurFairInfo) */ {
 public:
  InBattleFleurFairInfo();
  virtual ~InBattleFleurFairInfo();

  InBattleFleurFairInfo(const InBattleFleurFairInfo& from);

  inline InBattleFleurFairInfo& operator=(const InBattleFleurFairInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleFleurFairInfo(InBattleFleurFairInfo&& from) noexcept
    : InBattleFleurFairInfo() {
    *this = ::std::move(from);
  }

  inline InBattleFleurFairInfo& operator=(InBattleFleurFairInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleFleurFairInfo& default_instance();

  static inline const InBattleFleurFairInfo* internal_default_instance() {
    return reinterpret_cast<const InBattleFleurFairInfo*>(
               &_InBattleFleurFairInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(InBattleFleurFairInfo* other);
  friend void swap(InBattleFleurFairInfo& a, InBattleFleurFairInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleFleurFairInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleFleurFairInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleFleurFairInfo& from);
  void MergeFrom(const InBattleFleurFairInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleFleurFairInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ability_group_id_list = 2;
  int ability_group_id_list_size() const;
  void clear_ability_group_id_list();
  static const int kAbilityGroupIdListFieldNumber = 2;
  ::google::protobuf::uint32 ability_group_id_list(int index) const;
  void set_ability_group_id_list(int index, ::google::protobuf::uint32 value);
  void add_ability_group_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ability_group_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ability_group_id_list();

  // repeated uint32 gallery_id_list = 5;
  int gallery_id_list_size() const;
  void clear_gallery_id_list();
  static const int kGalleryIdListFieldNumber = 5;
  ::google::protobuf::uint32 gallery_id_list(int index) const;
  void set_gallery_id_list(int index, ::google::protobuf::uint32 value);
  void add_gallery_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      gallery_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_gallery_id_list();

  // uint32 preview_display_duration = 12;
  void clear_preview_display_duration();
  static const int kPreviewDisplayDurationFieldNumber = 12;
  ::google::protobuf::uint32 preview_display_duration() const;
  void set_preview_display_duration(::google::protobuf::uint32 value);

  // uint32 gallery_stage_index = 6;
  void clear_gallery_stage_index();
  static const int kGalleryStageIndexFieldNumber = 6;
  ::google::protobuf::uint32 gallery_stage_index() const;
  void set_gallery_stage_index(::google::protobuf::uint32 value);

  // uint32 preview_stage_index = 8;
  void clear_preview_stage_index();
  static const int kPreviewStageIndexFieldNumber = 8;
  ::google::protobuf::uint32 preview_stage_index() const;
  void set_preview_stage_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InBattleFleurFairInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ability_group_id_list_;
  mutable int _ability_group_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > gallery_id_list_;
  mutable int _gallery_id_list_cached_byte_size_;
  ::google::protobuf::uint32 preview_display_duration_;
  ::google::protobuf::uint32 gallery_stage_index_;
  ::google::protobuf::uint32 preview_stage_index_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CharAmusementAvatarInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CharAmusementAvatarInfo) */ {
 public:
  CharAmusementAvatarInfo();
  virtual ~CharAmusementAvatarInfo();

  CharAmusementAvatarInfo(const CharAmusementAvatarInfo& from);

  inline CharAmusementAvatarInfo& operator=(const CharAmusementAvatarInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CharAmusementAvatarInfo(CharAmusementAvatarInfo&& from) noexcept
    : CharAmusementAvatarInfo() {
    *this = ::std::move(from);
  }

  inline CharAmusementAvatarInfo& operator=(CharAmusementAvatarInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CharAmusementAvatarInfo& default_instance();

  static inline const CharAmusementAvatarInfo* internal_default_instance() {
    return reinterpret_cast<const CharAmusementAvatarInfo*>(
               &_CharAmusementAvatarInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CharAmusementAvatarInfo* other);
  friend void swap(CharAmusementAvatarInfo& a, CharAmusementAvatarInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CharAmusementAvatarInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CharAmusementAvatarInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CharAmusementAvatarInfo& from);
  void MergeFrom(const CharAmusementAvatarInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CharAmusementAvatarInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 avatar_id_list = 10;
  int avatar_id_list_size() const;
  void clear_avatar_id_list();
  static const int kAvatarIdListFieldNumber = 10;
  ::google::protobuf::uint32 avatar_id_list(int index) const;
  void set_avatar_id_list(int index, ::google::protobuf::uint32 value);
  void add_avatar_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      avatar_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_avatar_id_list();

  // uint32 punish_time = 7;
  void clear_punish_time();
  static const int kPunishTimeFieldNumber = 7;
  ::google::protobuf::uint32 punish_time() const;
  void set_punish_time(::google::protobuf::uint32 value);

  // uint32 uid = 11;
  void clear_uid();
  static const int kUidFieldNumber = 11;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CharAmusementAvatarInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > avatar_id_list_;
  mutable int _avatar_id_list_cached_byte_size_;
  ::google::protobuf::uint32 punish_time_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CharAmusementInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CharAmusementInfo) */ {
 public:
  CharAmusementInfo();
  virtual ~CharAmusementInfo();

  CharAmusementInfo(const CharAmusementInfo& from);

  inline CharAmusementInfo& operator=(const CharAmusementInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CharAmusementInfo(CharAmusementInfo&& from) noexcept
    : CharAmusementInfo() {
    *this = ::std::move(from);
  }

  inline CharAmusementInfo& operator=(CharAmusementInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CharAmusementInfo& default_instance();

  static inline const CharAmusementInfo* internal_default_instance() {
    return reinterpret_cast<const CharAmusementInfo*>(
               &_CharAmusementInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(CharAmusementInfo* other);
  friend void swap(CharAmusementInfo& a, CharAmusementInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CharAmusementInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CharAmusementInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CharAmusementInfo& from);
  void MergeFrom(const CharAmusementInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CharAmusementInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.CharAmusementAvatarInfo avatar_info_list = 5;
  int avatar_info_list_size() const;
  void clear_avatar_info_list();
  static const int kAvatarInfoListFieldNumber = 5;
  const ::proto::CharAmusementAvatarInfo& avatar_info_list(int index) const;
  ::proto::CharAmusementAvatarInfo* mutable_avatar_info_list(int index);
  ::proto::CharAmusementAvatarInfo* add_avatar_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CharAmusementAvatarInfo >*
      mutable_avatar_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CharAmusementAvatarInfo >&
      avatar_info_list() const;

  // uint32 stage_id = 2;
  void clear_stage_id();
  static const int kStageIdFieldNumber = 2;
  ::google::protobuf::uint32 stage_id() const;
  void set_stage_id(::google::protobuf::uint32 value);

  // uint32 preview_stage_index = 4;
  void clear_preview_stage_index();
  static const int kPreviewStageIndexFieldNumber = 4;
  ::google::protobuf::uint32 preview_stage_index() const;
  void set_preview_stage_index(::google::protobuf::uint32 value);

  // uint32 level_id = 10;
  void clear_level_id();
  static const int kLevelIdFieldNumber = 10;
  ::google::protobuf::uint32 level_id() const;
  void set_level_id(::google::protobuf::uint32 value);

  // uint32 total_cost_time = 11;
  void clear_total_cost_time();
  static const int kTotalCostTimeFieldNumber = 11;
  ::google::protobuf::uint32 total_cost_time() const;
  void set_total_cost_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CharAmusementInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::CharAmusementAvatarInfo > avatar_info_list_;
  ::google::protobuf::uint32 stage_id_;
  ::google::protobuf::uint32 preview_stage_index_;
  ::google::protobuf::uint32 level_id_;
  ::google::protobuf::uint32 total_cost_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BrickBreakerStageInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BrickBreakerStageInfo) */ {
 public:
  BrickBreakerStageInfo();
  virtual ~BrickBreakerStageInfo();

  BrickBreakerStageInfo(const BrickBreakerStageInfo& from);

  inline BrickBreakerStageInfo& operator=(const BrickBreakerStageInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BrickBreakerStageInfo(BrickBreakerStageInfo&& from) noexcept
    : BrickBreakerStageInfo() {
    *this = ::std::move(from);
  }

  inline BrickBreakerStageInfo& operator=(BrickBreakerStageInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BrickBreakerStageInfo& default_instance();

  static inline const BrickBreakerStageInfo* internal_default_instance() {
    return reinterpret_cast<const BrickBreakerStageInfo*>(
               &_BrickBreakerStageInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(BrickBreakerStageInfo* other);
  friend void swap(BrickBreakerStageInfo& a, BrickBreakerStageInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BrickBreakerStageInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BrickBreakerStageInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BrickBreakerStageInfo& from);
  void MergeFrom(const BrickBreakerStageInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BrickBreakerStageInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.BrickBreakerPlayerBattleInfo battle_info_list = 2;
  int battle_info_list_size() const;
  void clear_battle_info_list();
  static const int kBattleInfoListFieldNumber = 2;
  const ::proto::BrickBreakerPlayerBattleInfo& battle_info_list(int index) const;
  ::proto::BrickBreakerPlayerBattleInfo* mutable_battle_info_list(int index);
  ::proto::BrickBreakerPlayerBattleInfo* add_battle_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::BrickBreakerPlayerBattleInfo >*
      mutable_battle_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::BrickBreakerPlayerBattleInfo >&
      battle_info_list() const;

  // .proto.BrickBreakerStageType stage_type = 1;
  void clear_stage_type();
  static const int kStageTypeFieldNumber = 1;
  ::proto::BrickBreakerStageType stage_type() const;
  void set_stage_type(::proto::BrickBreakerStageType value);

  // uint32 level_id = 15;
  void clear_level_id();
  static const int kLevelIdFieldNumber = 15;
  ::google::protobuf::uint32 level_id() const;
  void set_level_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BrickBreakerStageInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::BrickBreakerPlayerBattleInfo > battle_info_list_;
  int stage_type_;
  ::google::protobuf::uint32 level_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoinCollectStageInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CoinCollectStageInfo) */ {
 public:
  CoinCollectStageInfo();
  virtual ~CoinCollectStageInfo();

  CoinCollectStageInfo(const CoinCollectStageInfo& from);

  inline CoinCollectStageInfo& operator=(const CoinCollectStageInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoinCollectStageInfo(CoinCollectStageInfo&& from) noexcept
    : CoinCollectStageInfo() {
    *this = ::std::move(from);
  }

  inline CoinCollectStageInfo& operator=(CoinCollectStageInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoinCollectStageInfo& default_instance();

  static inline const CoinCollectStageInfo* internal_default_instance() {
    return reinterpret_cast<const CoinCollectStageInfo*>(
               &_CoinCollectStageInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(CoinCollectStageInfo* other);
  friend void swap(CoinCollectStageInfo& a, CoinCollectStageInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoinCollectStageInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CoinCollectStageInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CoinCollectStageInfo& from);
  void MergeFrom(const CoinCollectStageInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CoinCollectStageInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.CoinCollectPlayerInfo player_info_list = 9;
  int player_info_list_size() const;
  void clear_player_info_list();
  static const int kPlayerInfoListFieldNumber = 9;
  const ::proto::CoinCollectPlayerInfo& player_info_list(int index) const;
  ::proto::CoinCollectPlayerInfo* mutable_player_info_list(int index);
  ::proto::CoinCollectPlayerInfo* add_player_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CoinCollectPlayerInfo >*
      mutable_player_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CoinCollectPlayerInfo >&
      player_info_list() const;

  // uint32 level_id = 3;
  void clear_level_id();
  static const int kLevelIdFieldNumber = 3;
  ::google::protobuf::uint32 level_id() const;
  void set_level_id(::google::protobuf::uint32 value);

  // uint32 play_index = 15;
  void clear_play_index();
  static const int kPlayIndexFieldNumber = 15;
  ::google::protobuf::uint32 play_index() const;
  void set_play_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CoinCollectStageInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::CoinCollectPlayerInfo > player_info_list_;
  ::google::protobuf::uint32 level_id_;
  ::google::protobuf::uint32 play_index_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LanV3BoatStageInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LanV3BoatStageInfo) */ {
 public:
  LanV3BoatStageInfo();
  virtual ~LanV3BoatStageInfo();

  LanV3BoatStageInfo(const LanV3BoatStageInfo& from);

  inline LanV3BoatStageInfo& operator=(const LanV3BoatStageInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LanV3BoatStageInfo(LanV3BoatStageInfo&& from) noexcept
    : LanV3BoatStageInfo() {
    *this = ::std::move(from);
  }

  inline LanV3BoatStageInfo& operator=(LanV3BoatStageInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LanV3BoatStageInfo& default_instance();

  static inline const LanV3BoatStageInfo* internal_default_instance() {
    return reinterpret_cast<const LanV3BoatStageInfo*>(
               &_LanV3BoatStageInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(LanV3BoatStageInfo* other);
  friend void swap(LanV3BoatStageInfo& a, LanV3BoatStageInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LanV3BoatStageInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  LanV3BoatStageInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LanV3BoatStageInfo& from);
  void MergeFrom(const LanV3BoatStageInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LanV3BoatStageInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 player_uid_list = 2;
  int player_uid_list_size() const;
  void clear_player_uid_list();
  static const int kPlayerUidListFieldNumber = 2;
  ::google::protobuf::uint32 player_uid_list(int index) const;
  void set_player_uid_list(int index, ::google::protobuf::uint32 value);
  void add_player_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      player_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_player_uid_list();

  // uint32 map_id = 10;
  void clear_map_id();
  static const int kMapIdFieldNumber = 10;
  ::google::protobuf::uint32 map_id() const;
  void set_map_id(::google::protobuf::uint32 value);

  // bool is_single = 13;
  void clear_is_single();
  static const int kIsSingleFieldNumber = 13;
  bool is_single() const;
  void set_is_single(bool value);

  // @@protoc_insertion_point(class_scope:proto.LanV3BoatStageInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > player_uid_list_;
  mutable int _player_uid_list_cached_byte_size_;
  ::google::protobuf::uint32 map_id_;
  bool is_single_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MultistagePlayInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MultistagePlayInfo) */ {
 public:
  MultistagePlayInfo();
  virtual ~MultistagePlayInfo();

  MultistagePlayInfo(const MultistagePlayInfo& from);

  inline MultistagePlayInfo& operator=(const MultistagePlayInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MultistagePlayInfo(MultistagePlayInfo&& from) noexcept
    : MultistagePlayInfo() {
    *this = ::std::move(from);
  }

  inline MultistagePlayInfo& operator=(MultistagePlayInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MultistagePlayInfo& default_instance();

  enum DetailCase {
    kMechanicusInfo = 1334,
    kFleurFairInfo = 1064,
    kHideAndSeekInfo = 108,
    kChessInfo = 1758,
    kIrodoriChessInfo = 531,
    kCharAmusementInfo = 324,
    kBrickBreakerInfo = 1964,
    kCoinCollectInfo = 1067,
    kLanV3BoatInfo = 1801,
    DETAIL_NOT_SET = 0,
  };

  static inline const MultistagePlayInfo* internal_default_instance() {
    return reinterpret_cast<const MultistagePlayInfo*>(
               &_MultistagePlayInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(MultistagePlayInfo* other);
  friend void swap(MultistagePlayInfo& a, MultistagePlayInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MultistagePlayInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MultistagePlayInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MultistagePlayInfo& from);
  void MergeFrom(const MultistagePlayInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MultistagePlayInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 stage_index = 1;
  void clear_stage_index();
  static const int kStageIndexFieldNumber = 1;
  ::google::protobuf::uint32 stage_index() const;
  void set_stage_index(::google::protobuf::uint32 value);

  // uint32 duration = 8;
  void clear_duration();
  static const int kDurationFieldNumber = 8;
  ::google::protobuf::uint32 duration() const;
  void set_duration(::google::protobuf::uint32 value);

  // uint32 play_index = 13;
  void clear_play_index();
  static const int kPlayIndexFieldNumber = 13;
  ::google::protobuf::uint32 play_index() const;
  void set_play_index(::google::protobuf::uint32 value);

  // uint32 begin_time = 9;
  void clear_begin_time();
  static const int kBeginTimeFieldNumber = 9;
  ::google::protobuf::uint32 begin_time() const;
  void set_begin_time(::google::protobuf::uint32 value);

  // uint32 stage_type = 10;
  void clear_stage_type();
  static const int kStageTypeFieldNumber = 10;
  ::google::protobuf::uint32 stage_type() const;
  void set_stage_type(::google::protobuf::uint32 value);

  // uint32 play_type = 11;
  void clear_play_type();
  static const int kPlayTypeFieldNumber = 11;
  ::google::protobuf::uint32 play_type() const;
  void set_play_type(::google::protobuf::uint32 value);

  // uint32 group_id = 12;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 12;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // .proto.InBattleMechanicusInfo mechanicus_info = 1334;
  bool has_mechanicus_info() const;
  void clear_mechanicus_info();
  static const int kMechanicusInfoFieldNumber = 1334;
  const ::proto::InBattleMechanicusInfo& mechanicus_info() const;
  ::proto::InBattleMechanicusInfo* mutable_mechanicus_info();
  ::proto::InBattleMechanicusInfo* release_mechanicus_info();
  void set_allocated_mechanicus_info(::proto::InBattleMechanicusInfo* mechanicus_info);

  // .proto.InBattleFleurFairInfo fleur_fair_info = 1064;
  bool has_fleur_fair_info() const;
  void clear_fleur_fair_info();
  static const int kFleurFairInfoFieldNumber = 1064;
  const ::proto::InBattleFleurFairInfo& fleur_fair_info() const;
  ::proto::InBattleFleurFairInfo* mutable_fleur_fair_info();
  ::proto::InBattleFleurFairInfo* release_fleur_fair_info();
  void set_allocated_fleur_fair_info(::proto::InBattleFleurFairInfo* fleur_fair_info);

  // .proto.HideAndSeekStageInfo hide_and_seek_info = 108;
  bool has_hide_and_seek_info() const;
  void clear_hide_and_seek_info();
  static const int kHideAndSeekInfoFieldNumber = 108;
  const ::proto::HideAndSeekStageInfo& hide_and_seek_info() const;
  ::proto::HideAndSeekStageInfo* mutable_hide_and_seek_info();
  ::proto::HideAndSeekStageInfo* release_hide_and_seek_info();
  void set_allocated_hide_and_seek_info(::proto::HideAndSeekStageInfo* hide_and_seek_info);

  // .proto.InBattleChessInfo chess_info = 1758;
  bool has_chess_info() const;
  void clear_chess_info();
  static const int kChessInfoFieldNumber = 1758;
  const ::proto::InBattleChessInfo& chess_info() const;
  ::proto::InBattleChessInfo* mutable_chess_info();
  ::proto::InBattleChessInfo* release_chess_info();
  void set_allocated_chess_info(::proto::InBattleChessInfo* chess_info);

  // .proto.InBattleIrodoriChessInfo irodori_chess_info = 531;
  bool has_irodori_chess_info() const;
  void clear_irodori_chess_info();
  static const int kIrodoriChessInfoFieldNumber = 531;
  const ::proto::InBattleIrodoriChessInfo& irodori_chess_info() const;
  ::proto::InBattleIrodoriChessInfo* mutable_irodori_chess_info();
  ::proto::InBattleIrodoriChessInfo* release_irodori_chess_info();
  void set_allocated_irodori_chess_info(::proto::InBattleIrodoriChessInfo* irodori_chess_info);

  // .proto.CharAmusementInfo char_amusement_info = 324;
  bool has_char_amusement_info() const;
  void clear_char_amusement_info();
  static const int kCharAmusementInfoFieldNumber = 324;
  const ::proto::CharAmusementInfo& char_amusement_info() const;
  ::proto::CharAmusementInfo* mutable_char_amusement_info();
  ::proto::CharAmusementInfo* release_char_amusement_info();
  void set_allocated_char_amusement_info(::proto::CharAmusementInfo* char_amusement_info);

  // .proto.BrickBreakerStageInfo brick_breaker_info = 1964;
  bool has_brick_breaker_info() const;
  void clear_brick_breaker_info();
  static const int kBrickBreakerInfoFieldNumber = 1964;
  const ::proto::BrickBreakerStageInfo& brick_breaker_info() const;
  ::proto::BrickBreakerStageInfo* mutable_brick_breaker_info();
  ::proto::BrickBreakerStageInfo* release_brick_breaker_info();
  void set_allocated_brick_breaker_info(::proto::BrickBreakerStageInfo* brick_breaker_info);

  // .proto.CoinCollectStageInfo coin_collect_info = 1067;
  bool has_coin_collect_info() const;
  void clear_coin_collect_info();
  static const int kCoinCollectInfoFieldNumber = 1067;
  const ::proto::CoinCollectStageInfo& coin_collect_info() const;
  ::proto::CoinCollectStageInfo* mutable_coin_collect_info();
  ::proto::CoinCollectStageInfo* release_coin_collect_info();
  void set_allocated_coin_collect_info(::proto::CoinCollectStageInfo* coin_collect_info);

  // .proto.LanV3BoatStageInfo lan_v3_boat_info = 1801;
  bool has_lan_v3_boat_info() const;
  void clear_lan_v3_boat_info();
  static const int kLanV3BoatInfoFieldNumber = 1801;
  const ::proto::LanV3BoatStageInfo& lan_v3_boat_info() const;
  ::proto::LanV3BoatStageInfo* mutable_lan_v3_boat_info();
  ::proto::LanV3BoatStageInfo* release_lan_v3_boat_info();
  void set_allocated_lan_v3_boat_info(::proto::LanV3BoatStageInfo* lan_v3_boat_info);

  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:proto.MultistagePlayInfo)
 private:
  void set_has_mechanicus_info();
  void set_has_fleur_fair_info();
  void set_has_hide_and_seek_info();
  void set_has_chess_info();
  void set_has_irodori_chess_info();
  void set_has_char_amusement_info();
  void set_has_brick_breaker_info();
  void set_has_coin_collect_info();
  void set_has_lan_v3_boat_info();

  inline bool has_detail() const;
  void clear_detail();
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 stage_index_;
  ::google::protobuf::uint32 duration_;
  ::google::protobuf::uint32 play_index_;
  ::google::protobuf::uint32 begin_time_;
  ::google::protobuf::uint32 stage_type_;
  ::google::protobuf::uint32 play_type_;
  ::google::protobuf::uint32 group_id_;
  union DetailUnion {
    DetailUnion() {}
    ::proto::InBattleMechanicusInfo* mechanicus_info_;
    ::proto::InBattleFleurFairInfo* fleur_fair_info_;
    ::proto::HideAndSeekStageInfo* hide_and_seek_info_;
    ::proto::InBattleChessInfo* chess_info_;
    ::proto::InBattleIrodoriChessInfo* irodori_chess_info_;
    ::proto::CharAmusementInfo* char_amusement_info_;
    ::proto::BrickBreakerStageInfo* brick_breaker_info_;
    ::proto::CoinCollectStageInfo* coin_collect_info_;
    ::proto::LanV3BoatStageInfo* lan_v3_boat_info_;
  } detail_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MultistagePlayInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MultistagePlayInfoNotify) */ {
 public:
  MultistagePlayInfoNotify();
  virtual ~MultistagePlayInfoNotify();

  MultistagePlayInfoNotify(const MultistagePlayInfoNotify& from);

  inline MultistagePlayInfoNotify& operator=(const MultistagePlayInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MultistagePlayInfoNotify(MultistagePlayInfoNotify&& from) noexcept
    : MultistagePlayInfoNotify() {
    *this = ::std::move(from);
  }

  inline MultistagePlayInfoNotify& operator=(MultistagePlayInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MultistagePlayInfoNotify& default_instance();

  static inline const MultistagePlayInfoNotify* internal_default_instance() {
    return reinterpret_cast<const MultistagePlayInfoNotify*>(
               &_MultistagePlayInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(MultistagePlayInfoNotify* other);
  friend void swap(MultistagePlayInfoNotify& a, MultistagePlayInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MultistagePlayInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MultistagePlayInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MultistagePlayInfoNotify& from);
  void MergeFrom(const MultistagePlayInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MultistagePlayInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MultistagePlayInfoNotify_CmdId CmdId;
  static const CmdId NONE =
    MultistagePlayInfoNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    MultistagePlayInfoNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    MultistagePlayInfoNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    MultistagePlayInfoNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return MultistagePlayInfoNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    MultistagePlayInfoNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    MultistagePlayInfoNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    MultistagePlayInfoNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return MultistagePlayInfoNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return MultistagePlayInfoNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return MultistagePlayInfoNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.MultistagePlayInfo info = 13;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 13;
  const ::proto::MultistagePlayInfo& info() const;
  ::proto::MultistagePlayInfo* mutable_info();
  ::proto::MultistagePlayInfo* release_info();
  void set_allocated_info(::proto::MultistagePlayInfo* info);

  // @@protoc_insertion_point(class_scope:proto.MultistagePlayInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MultistagePlayInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MultistagePlayFinishStageReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MultistagePlayFinishStageReq) */ {
 public:
  MultistagePlayFinishStageReq();
  virtual ~MultistagePlayFinishStageReq();

  MultistagePlayFinishStageReq(const MultistagePlayFinishStageReq& from);

  inline MultistagePlayFinishStageReq& operator=(const MultistagePlayFinishStageReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MultistagePlayFinishStageReq(MultistagePlayFinishStageReq&& from) noexcept
    : MultistagePlayFinishStageReq() {
    *this = ::std::move(from);
  }

  inline MultistagePlayFinishStageReq& operator=(MultistagePlayFinishStageReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MultistagePlayFinishStageReq& default_instance();

  static inline const MultistagePlayFinishStageReq* internal_default_instance() {
    return reinterpret_cast<const MultistagePlayFinishStageReq*>(
               &_MultistagePlayFinishStageReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(MultistagePlayFinishStageReq* other);
  friend void swap(MultistagePlayFinishStageReq& a, MultistagePlayFinishStageReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MultistagePlayFinishStageReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MultistagePlayFinishStageReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MultistagePlayFinishStageReq& from);
  void MergeFrom(const MultistagePlayFinishStageReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MultistagePlayFinishStageReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MultistagePlayFinishStageReq_CmdId CmdId;
  static const CmdId NONE =
    MultistagePlayFinishStageReq_CmdId_NONE;
  static const CmdId CMD_ID =
    MultistagePlayFinishStageReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    MultistagePlayFinishStageReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    MultistagePlayFinishStageReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    MultistagePlayFinishStageReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return MultistagePlayFinishStageReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    MultistagePlayFinishStageReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    MultistagePlayFinishStageReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    MultistagePlayFinishStageReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return MultistagePlayFinishStageReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return MultistagePlayFinishStageReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return MultistagePlayFinishStageReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 group_id = 12;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 12;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint32 play_index = 15;
  void clear_play_index();
  static const int kPlayIndexFieldNumber = 15;
  ::google::protobuf::uint32 play_index() const;
  void set_play_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MultistagePlayFinishStageReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 play_index_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InBattleMechanicusExcapeMonsterNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleMechanicusExcapeMonsterNotify) */ {
 public:
  InBattleMechanicusExcapeMonsterNotify();
  virtual ~InBattleMechanicusExcapeMonsterNotify();

  InBattleMechanicusExcapeMonsterNotify(const InBattleMechanicusExcapeMonsterNotify& from);

  inline InBattleMechanicusExcapeMonsterNotify& operator=(const InBattleMechanicusExcapeMonsterNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleMechanicusExcapeMonsterNotify(InBattleMechanicusExcapeMonsterNotify&& from) noexcept
    : InBattleMechanicusExcapeMonsterNotify() {
    *this = ::std::move(from);
  }

  inline InBattleMechanicusExcapeMonsterNotify& operator=(InBattleMechanicusExcapeMonsterNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleMechanicusExcapeMonsterNotify& default_instance();

  static inline const InBattleMechanicusExcapeMonsterNotify* internal_default_instance() {
    return reinterpret_cast<const InBattleMechanicusExcapeMonsterNotify*>(
               &_InBattleMechanicusExcapeMonsterNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(InBattleMechanicusExcapeMonsterNotify* other);
  friend void swap(InBattleMechanicusExcapeMonsterNotify& a, InBattleMechanicusExcapeMonsterNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleMechanicusExcapeMonsterNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleMechanicusExcapeMonsterNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleMechanicusExcapeMonsterNotify& from);
  void MergeFrom(const InBattleMechanicusExcapeMonsterNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleMechanicusExcapeMonsterNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef InBattleMechanicusExcapeMonsterNotify_CmdId CmdId;
  static const CmdId NONE =
    InBattleMechanicusExcapeMonsterNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    InBattleMechanicusExcapeMonsterNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    InBattleMechanicusExcapeMonsterNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    InBattleMechanicusExcapeMonsterNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return InBattleMechanicusExcapeMonsterNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    InBattleMechanicusExcapeMonsterNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    InBattleMechanicusExcapeMonsterNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    InBattleMechanicusExcapeMonsterNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return InBattleMechanicusExcapeMonsterNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return InBattleMechanicusExcapeMonsterNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return InBattleMechanicusExcapeMonsterNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 excaped_monster_num = 4;
  void clear_excaped_monster_num();
  static const int kExcapedMonsterNumFieldNumber = 4;
  ::google::protobuf::uint32 excaped_monster_num() const;
  void set_excaped_monster_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InBattleMechanicusExcapeMonsterNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 excaped_monster_num_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InBattleMechanicusLeftMonsterNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleMechanicusLeftMonsterNotify) */ {
 public:
  InBattleMechanicusLeftMonsterNotify();
  virtual ~InBattleMechanicusLeftMonsterNotify();

  InBattleMechanicusLeftMonsterNotify(const InBattleMechanicusLeftMonsterNotify& from);

  inline InBattleMechanicusLeftMonsterNotify& operator=(const InBattleMechanicusLeftMonsterNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleMechanicusLeftMonsterNotify(InBattleMechanicusLeftMonsterNotify&& from) noexcept
    : InBattleMechanicusLeftMonsterNotify() {
    *this = ::std::move(from);
  }

  inline InBattleMechanicusLeftMonsterNotify& operator=(InBattleMechanicusLeftMonsterNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleMechanicusLeftMonsterNotify& default_instance();

  static inline const InBattleMechanicusLeftMonsterNotify* internal_default_instance() {
    return reinterpret_cast<const InBattleMechanicusLeftMonsterNotify*>(
               &_InBattleMechanicusLeftMonsterNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(InBattleMechanicusLeftMonsterNotify* other);
  friend void swap(InBattleMechanicusLeftMonsterNotify& a, InBattleMechanicusLeftMonsterNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleMechanicusLeftMonsterNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleMechanicusLeftMonsterNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleMechanicusLeftMonsterNotify& from);
  void MergeFrom(const InBattleMechanicusLeftMonsterNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleMechanicusLeftMonsterNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef InBattleMechanicusLeftMonsterNotify_CmdId CmdId;
  static const CmdId NONE =
    InBattleMechanicusLeftMonsterNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    InBattleMechanicusLeftMonsterNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    InBattleMechanicusLeftMonsterNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    InBattleMechanicusLeftMonsterNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return InBattleMechanicusLeftMonsterNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    InBattleMechanicusLeftMonsterNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    InBattleMechanicusLeftMonsterNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    InBattleMechanicusLeftMonsterNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return InBattleMechanicusLeftMonsterNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return InBattleMechanicusLeftMonsterNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return InBattleMechanicusLeftMonsterNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 left_monster = 14;
  void clear_left_monster();
  static const int kLeftMonsterFieldNumber = 14;
  ::google::protobuf::uint32 left_monster() const;
  void set_left_monster(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InBattleMechanicusLeftMonsterNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 left_monster_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class InBattleMechanicusBuildingPointsNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleMechanicusBuildingPointsNotify) */ {
 public:
  InBattleMechanicusBuildingPointsNotify();
  virtual ~InBattleMechanicusBuildingPointsNotify();

  InBattleMechanicusBuildingPointsNotify(const InBattleMechanicusBuildingPointsNotify& from);

  inline InBattleMechanicusBuildingPointsNotify& operator=(const InBattleMechanicusBuildingPointsNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleMechanicusBuildingPointsNotify(InBattleMechanicusBuildingPointsNotify&& from) noexcept
    : InBattleMechanicusBuildingPointsNotify() {
    *this = ::std::move(from);
  }

  inline InBattleMechanicusBuildingPointsNotify& operator=(InBattleMechanicusBuildingPointsNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleMechanicusBuildingPointsNotify& default_instance();

  static inline const InBattleMechanicusBuildingPointsNotify* internal_default_instance() {
    return reinterpret_cast<const InBattleMechanicusBuildingPointsNotify*>(
               &_InBattleMechanicusBuildingPointsNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(InBattleMechanicusBuildingPointsNotify* other);
  friend void swap(InBattleMechanicusBuildingPointsNotify& a, InBattleMechanicusBuildingPointsNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleMechanicusBuildingPointsNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleMechanicusBuildingPointsNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleMechanicusBuildingPointsNotify& from);
  void MergeFrom(const InBattleMechanicusBuildingPointsNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleMechanicusBuildingPointsNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef InBattleMechanicusBuildingPointsNotify_CmdId CmdId;
  static const CmdId NONE =
    InBattleMechanicusBuildingPointsNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    InBattleMechanicusBuildingPointsNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    InBattleMechanicusBuildingPointsNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    InBattleMechanicusBuildingPointsNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return InBattleMechanicusBuildingPointsNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    InBattleMechanicusBuildingPointsNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    InBattleMechanicusBuildingPointsNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    InBattleMechanicusBuildingPointsNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return InBattleMechanicusBuildingPointsNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return InBattleMechanicusBuildingPointsNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return InBattleMechanicusBuildingPointsNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint32, uint32> player_building_points_map = 4;
  int player_building_points_map_size() const;
  void clear_player_building_points_map();
  static const int kPlayerBuildingPointsMapFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      player_building_points_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_player_building_points_map();

  // @@protoc_insertion_point(class_scope:proto.InBattleMechanicusBuildingPointsNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class InBattleMechanicusBuildingPointsNotify_PlayerBuildingPointsMapEntry : public ::google::protobuf::internal::MapEntry<InBattleMechanicusBuildingPointsNotify_PlayerBuildingPointsMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<InBattleMechanicusBuildingPointsNotify_PlayerBuildingPointsMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    InBattleMechanicusBuildingPointsNotify_PlayerBuildingPointsMapEntry();
    InBattleMechanicusBuildingPointsNotify_PlayerBuildingPointsMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const InBattleMechanicusBuildingPointsNotify_PlayerBuildingPointsMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_InBattleMechanicusBuildingPointsNotify_PlayerBuildingPointsMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      InBattleMechanicusBuildingPointsNotify_PlayerBuildingPointsMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > player_building_points_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InBattleMechanicusPickCardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleMechanicusPickCardReq) */ {
 public:
  InBattleMechanicusPickCardReq();
  virtual ~InBattleMechanicusPickCardReq();

  InBattleMechanicusPickCardReq(const InBattleMechanicusPickCardReq& from);

  inline InBattleMechanicusPickCardReq& operator=(const InBattleMechanicusPickCardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleMechanicusPickCardReq(InBattleMechanicusPickCardReq&& from) noexcept
    : InBattleMechanicusPickCardReq() {
    *this = ::std::move(from);
  }

  inline InBattleMechanicusPickCardReq& operator=(InBattleMechanicusPickCardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleMechanicusPickCardReq& default_instance();

  static inline const InBattleMechanicusPickCardReq* internal_default_instance() {
    return reinterpret_cast<const InBattleMechanicusPickCardReq*>(
               &_InBattleMechanicusPickCardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(InBattleMechanicusPickCardReq* other);
  friend void swap(InBattleMechanicusPickCardReq& a, InBattleMechanicusPickCardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleMechanicusPickCardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleMechanicusPickCardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleMechanicusPickCardReq& from);
  void MergeFrom(const InBattleMechanicusPickCardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleMechanicusPickCardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef InBattleMechanicusPickCardReq_CmdId CmdId;
  static const CmdId NONE =
    InBattleMechanicusPickCardReq_CmdId_NONE;
  static const CmdId CMD_ID =
    InBattleMechanicusPickCardReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    InBattleMechanicusPickCardReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    InBattleMechanicusPickCardReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    InBattleMechanicusPickCardReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return InBattleMechanicusPickCardReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    InBattleMechanicusPickCardReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    InBattleMechanicusPickCardReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    InBattleMechanicusPickCardReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return InBattleMechanicusPickCardReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return InBattleMechanicusPickCardReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return InBattleMechanicusPickCardReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 card_id = 1;
  void clear_card_id();
  static const int kCardIdFieldNumber = 1;
  ::google::protobuf::uint32 card_id() const;
  void set_card_id(::google::protobuf::uint32 value);

  // uint32 play_index = 7;
  void clear_play_index();
  static const int kPlayIndexFieldNumber = 7;
  ::google::protobuf::uint32 play_index() const;
  void set_play_index(::google::protobuf::uint32 value);

  // uint32 group_id = 11;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 11;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InBattleMechanicusPickCardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 card_id_;
  ::google::protobuf::uint32 play_index_;
  ::google::protobuf::uint32 group_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InBattleMechanicusPickCardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleMechanicusPickCardRsp) */ {
 public:
  InBattleMechanicusPickCardRsp();
  virtual ~InBattleMechanicusPickCardRsp();

  InBattleMechanicusPickCardRsp(const InBattleMechanicusPickCardRsp& from);

  inline InBattleMechanicusPickCardRsp& operator=(const InBattleMechanicusPickCardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleMechanicusPickCardRsp(InBattleMechanicusPickCardRsp&& from) noexcept
    : InBattleMechanicusPickCardRsp() {
    *this = ::std::move(from);
  }

  inline InBattleMechanicusPickCardRsp& operator=(InBattleMechanicusPickCardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleMechanicusPickCardRsp& default_instance();

  static inline const InBattleMechanicusPickCardRsp* internal_default_instance() {
    return reinterpret_cast<const InBattleMechanicusPickCardRsp*>(
               &_InBattleMechanicusPickCardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(InBattleMechanicusPickCardRsp* other);
  friend void swap(InBattleMechanicusPickCardRsp& a, InBattleMechanicusPickCardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleMechanicusPickCardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleMechanicusPickCardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleMechanicusPickCardRsp& from);
  void MergeFrom(const InBattleMechanicusPickCardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleMechanicusPickCardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef InBattleMechanicusPickCardRsp_CmdId CmdId;
  static const CmdId NONE =
    InBattleMechanicusPickCardRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    InBattleMechanicusPickCardRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    InBattleMechanicusPickCardRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    InBattleMechanicusPickCardRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return InBattleMechanicusPickCardRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    InBattleMechanicusPickCardRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    InBattleMechanicusPickCardRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    InBattleMechanicusPickCardRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return InBattleMechanicusPickCardRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return InBattleMechanicusPickCardRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return InBattleMechanicusPickCardRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 card_id = 2;
  void clear_card_id();
  static const int kCardIdFieldNumber = 2;
  ::google::protobuf::uint32 card_id() const;
  void set_card_id(::google::protobuf::uint32 value);

  // uint32 play_index = 4;
  void clear_play_index();
  static const int kPlayIndexFieldNumber = 4;
  ::google::protobuf::uint32 play_index() const;
  void set_play_index(::google::protobuf::uint32 value);

  // uint32 group_id = 9;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 9;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // int32 retcode = 11;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 11;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.InBattleMechanicusPickCardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 card_id_;
  ::google::protobuf::uint32 play_index_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InBattleMechanicusPickCardNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleMechanicusPickCardNotify) */ {
 public:
  InBattleMechanicusPickCardNotify();
  virtual ~InBattleMechanicusPickCardNotify();

  InBattleMechanicusPickCardNotify(const InBattleMechanicusPickCardNotify& from);

  inline InBattleMechanicusPickCardNotify& operator=(const InBattleMechanicusPickCardNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleMechanicusPickCardNotify(InBattleMechanicusPickCardNotify&& from) noexcept
    : InBattleMechanicusPickCardNotify() {
    *this = ::std::move(from);
  }

  inline InBattleMechanicusPickCardNotify& operator=(InBattleMechanicusPickCardNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleMechanicusPickCardNotify& default_instance();

  static inline const InBattleMechanicusPickCardNotify* internal_default_instance() {
    return reinterpret_cast<const InBattleMechanicusPickCardNotify*>(
               &_InBattleMechanicusPickCardNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(InBattleMechanicusPickCardNotify* other);
  friend void swap(InBattleMechanicusPickCardNotify& a, InBattleMechanicusPickCardNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleMechanicusPickCardNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleMechanicusPickCardNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleMechanicusPickCardNotify& from);
  void MergeFrom(const InBattleMechanicusPickCardNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleMechanicusPickCardNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef InBattleMechanicusPickCardNotify_CmdId CmdId;
  static const CmdId NONE =
    InBattleMechanicusPickCardNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    InBattleMechanicusPickCardNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    InBattleMechanicusPickCardNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    InBattleMechanicusPickCardNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return InBattleMechanicusPickCardNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    InBattleMechanicusPickCardNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    InBattleMechanicusPickCardNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    InBattleMechanicusPickCardNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return InBattleMechanicusPickCardNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return InBattleMechanicusPickCardNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return InBattleMechanicusPickCardNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 player_uid = 6;
  void clear_player_uid();
  static const int kPlayerUidFieldNumber = 6;
  ::google::protobuf::uint32 player_uid() const;
  void set_player_uid(::google::protobuf::uint32 value);

  // uint32 group_id = 7;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 7;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint32 play_index = 8;
  void clear_play_index();
  static const int kPlayIndexFieldNumber = 8;
  ::google::protobuf::uint32 play_index() const;
  void set_play_index(::google::protobuf::uint32 value);

  // uint32 card_id = 10;
  void clear_card_id();
  static const int kCardIdFieldNumber = 10;
  ::google::protobuf::uint32 card_id() const;
  void set_card_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InBattleMechanicusPickCardNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 player_uid_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 play_index_;
  ::google::protobuf::uint32 card_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InBattleMechanicusConfirmCardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleMechanicusConfirmCardReq) */ {
 public:
  InBattleMechanicusConfirmCardReq();
  virtual ~InBattleMechanicusConfirmCardReq();

  InBattleMechanicusConfirmCardReq(const InBattleMechanicusConfirmCardReq& from);

  inline InBattleMechanicusConfirmCardReq& operator=(const InBattleMechanicusConfirmCardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleMechanicusConfirmCardReq(InBattleMechanicusConfirmCardReq&& from) noexcept
    : InBattleMechanicusConfirmCardReq() {
    *this = ::std::move(from);
  }

  inline InBattleMechanicusConfirmCardReq& operator=(InBattleMechanicusConfirmCardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleMechanicusConfirmCardReq& default_instance();

  static inline const InBattleMechanicusConfirmCardReq* internal_default_instance() {
    return reinterpret_cast<const InBattleMechanicusConfirmCardReq*>(
               &_InBattleMechanicusConfirmCardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(InBattleMechanicusConfirmCardReq* other);
  friend void swap(InBattleMechanicusConfirmCardReq& a, InBattleMechanicusConfirmCardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleMechanicusConfirmCardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleMechanicusConfirmCardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleMechanicusConfirmCardReq& from);
  void MergeFrom(const InBattleMechanicusConfirmCardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleMechanicusConfirmCardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef InBattleMechanicusConfirmCardReq_CmdId CmdId;
  static const CmdId NONE =
    InBattleMechanicusConfirmCardReq_CmdId_NONE;
  static const CmdId CMD_ID =
    InBattleMechanicusConfirmCardReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    InBattleMechanicusConfirmCardReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    InBattleMechanicusConfirmCardReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    InBattleMechanicusConfirmCardReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return InBattleMechanicusConfirmCardReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    InBattleMechanicusConfirmCardReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    InBattleMechanicusConfirmCardReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    InBattleMechanicusConfirmCardReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return InBattleMechanicusConfirmCardReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return InBattleMechanicusConfirmCardReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return InBattleMechanicusConfirmCardReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 card_id = 1;
  void clear_card_id();
  static const int kCardIdFieldNumber = 1;
  ::google::protobuf::uint32 card_id() const;
  void set_card_id(::google::protobuf::uint32 value);

  // uint32 group_id = 3;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 3;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint32 play_index = 6;
  void clear_play_index();
  static const int kPlayIndexFieldNumber = 6;
  ::google::protobuf::uint32 play_index() const;
  void set_play_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InBattleMechanicusConfirmCardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 card_id_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 play_index_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InBattleMechanicusConfirmCardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleMechanicusConfirmCardRsp) */ {
 public:
  InBattleMechanicusConfirmCardRsp();
  virtual ~InBattleMechanicusConfirmCardRsp();

  InBattleMechanicusConfirmCardRsp(const InBattleMechanicusConfirmCardRsp& from);

  inline InBattleMechanicusConfirmCardRsp& operator=(const InBattleMechanicusConfirmCardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleMechanicusConfirmCardRsp(InBattleMechanicusConfirmCardRsp&& from) noexcept
    : InBattleMechanicusConfirmCardRsp() {
    *this = ::std::move(from);
  }

  inline InBattleMechanicusConfirmCardRsp& operator=(InBattleMechanicusConfirmCardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleMechanicusConfirmCardRsp& default_instance();

  static inline const InBattleMechanicusConfirmCardRsp* internal_default_instance() {
    return reinterpret_cast<const InBattleMechanicusConfirmCardRsp*>(
               &_InBattleMechanicusConfirmCardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(InBattleMechanicusConfirmCardRsp* other);
  friend void swap(InBattleMechanicusConfirmCardRsp& a, InBattleMechanicusConfirmCardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleMechanicusConfirmCardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleMechanicusConfirmCardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleMechanicusConfirmCardRsp& from);
  void MergeFrom(const InBattleMechanicusConfirmCardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleMechanicusConfirmCardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef InBattleMechanicusConfirmCardRsp_CmdId CmdId;
  static const CmdId NONE =
    InBattleMechanicusConfirmCardRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    InBattleMechanicusConfirmCardRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    InBattleMechanicusConfirmCardRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    InBattleMechanicusConfirmCardRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return InBattleMechanicusConfirmCardRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    InBattleMechanicusConfirmCardRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    InBattleMechanicusConfirmCardRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    InBattleMechanicusConfirmCardRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return InBattleMechanicusConfirmCardRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return InBattleMechanicusConfirmCardRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return InBattleMechanicusConfirmCardRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 play_index = 2;
  void clear_play_index();
  static const int kPlayIndexFieldNumber = 2;
  ::google::protobuf::uint32 play_index() const;
  void set_play_index(::google::protobuf::uint32 value);

  // uint32 group_id = 6;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 6;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // int32 retcode = 11;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 11;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 card_id = 14;
  void clear_card_id();
  static const int kCardIdFieldNumber = 14;
  ::google::protobuf::uint32 card_id() const;
  void set_card_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InBattleMechanicusConfirmCardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 play_index_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 card_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InBattleMechanicusConfirmCardNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleMechanicusConfirmCardNotify) */ {
 public:
  InBattleMechanicusConfirmCardNotify();
  virtual ~InBattleMechanicusConfirmCardNotify();

  InBattleMechanicusConfirmCardNotify(const InBattleMechanicusConfirmCardNotify& from);

  inline InBattleMechanicusConfirmCardNotify& operator=(const InBattleMechanicusConfirmCardNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleMechanicusConfirmCardNotify(InBattleMechanicusConfirmCardNotify&& from) noexcept
    : InBattleMechanicusConfirmCardNotify() {
    *this = ::std::move(from);
  }

  inline InBattleMechanicusConfirmCardNotify& operator=(InBattleMechanicusConfirmCardNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleMechanicusConfirmCardNotify& default_instance();

  static inline const InBattleMechanicusConfirmCardNotify* internal_default_instance() {
    return reinterpret_cast<const InBattleMechanicusConfirmCardNotify*>(
               &_InBattleMechanicusConfirmCardNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(InBattleMechanicusConfirmCardNotify* other);
  friend void swap(InBattleMechanicusConfirmCardNotify& a, InBattleMechanicusConfirmCardNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleMechanicusConfirmCardNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleMechanicusConfirmCardNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleMechanicusConfirmCardNotify& from);
  void MergeFrom(const InBattleMechanicusConfirmCardNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleMechanicusConfirmCardNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef InBattleMechanicusConfirmCardNotify_CmdId CmdId;
  static const CmdId NONE =
    InBattleMechanicusConfirmCardNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    InBattleMechanicusConfirmCardNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    InBattleMechanicusConfirmCardNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    InBattleMechanicusConfirmCardNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return InBattleMechanicusConfirmCardNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    InBattleMechanicusConfirmCardNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    InBattleMechanicusConfirmCardNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    InBattleMechanicusConfirmCardNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return InBattleMechanicusConfirmCardNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return InBattleMechanicusConfirmCardNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return InBattleMechanicusConfirmCardNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 player_uid = 2;
  void clear_player_uid();
  static const int kPlayerUidFieldNumber = 2;
  ::google::protobuf::uint32 player_uid() const;
  void set_player_uid(::google::protobuf::uint32 value);

  // uint32 group_id = 10;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 10;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint32 play_index = 11;
  void clear_play_index();
  static const int kPlayIndexFieldNumber = 11;
  ::google::protobuf::uint32 play_index() const;
  void set_play_index(::google::protobuf::uint32 value);

  // uint32 card_id = 13;
  void clear_card_id();
  static const int kCardIdFieldNumber = 13;
  ::google::protobuf::uint32 card_id() const;
  void set_card_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InBattleMechanicusConfirmCardNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 player_uid_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 play_index_;
  ::google::protobuf::uint32 card_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class InBattleMechanicusCardResultNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleMechanicusCardResultNotify) */ {
 public:
  InBattleMechanicusCardResultNotify();
  virtual ~InBattleMechanicusCardResultNotify();

  InBattleMechanicusCardResultNotify(const InBattleMechanicusCardResultNotify& from);

  inline InBattleMechanicusCardResultNotify& operator=(const InBattleMechanicusCardResultNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleMechanicusCardResultNotify(InBattleMechanicusCardResultNotify&& from) noexcept
    : InBattleMechanicusCardResultNotify() {
    *this = ::std::move(from);
  }

  inline InBattleMechanicusCardResultNotify& operator=(InBattleMechanicusCardResultNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleMechanicusCardResultNotify& default_instance();

  static inline const InBattleMechanicusCardResultNotify* internal_default_instance() {
    return reinterpret_cast<const InBattleMechanicusCardResultNotify*>(
               &_InBattleMechanicusCardResultNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(InBattleMechanicusCardResultNotify* other);
  friend void swap(InBattleMechanicusCardResultNotify& a, InBattleMechanicusCardResultNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleMechanicusCardResultNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleMechanicusCardResultNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleMechanicusCardResultNotify& from);
  void MergeFrom(const InBattleMechanicusCardResultNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleMechanicusCardResultNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef InBattleMechanicusCardResultNotify_CmdId CmdId;
  static const CmdId NONE =
    InBattleMechanicusCardResultNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    InBattleMechanicusCardResultNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    InBattleMechanicusCardResultNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    InBattleMechanicusCardResultNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return InBattleMechanicusCardResultNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    InBattleMechanicusCardResultNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    InBattleMechanicusCardResultNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    InBattleMechanicusCardResultNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return InBattleMechanicusCardResultNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return InBattleMechanicusCardResultNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return InBattleMechanicusCardResultNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.InBattleMechanicusCardInfo card_list = 9;
  int card_list_size() const;
  void clear_card_list();
  static const int kCardListFieldNumber = 9;
  const ::proto::InBattleMechanicusCardInfo& card_list(int index) const;
  ::proto::InBattleMechanicusCardInfo* mutable_card_list(int index);
  ::proto::InBattleMechanicusCardInfo* add_card_list();
  ::google::protobuf::RepeatedPtrField< ::proto::InBattleMechanicusCardInfo >*
      mutable_card_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::InBattleMechanicusCardInfo >&
      card_list() const;

  // map<uint32, uint32> player_confirmed_card_map = 12;
  int player_confirmed_card_map_size() const;
  void clear_player_confirmed_card_map();
  static const int kPlayerConfirmedCardMapFieldNumber = 12;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      player_confirmed_card_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_player_confirmed_card_map();

  // uint32 group_id = 2;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint32 wait_seconds = 6;
  void clear_wait_seconds();
  static const int kWaitSecondsFieldNumber = 6;
  ::google::protobuf::uint32 wait_seconds() const;
  void set_wait_seconds(::google::protobuf::uint32 value);

  // uint64 wait_begin_time_us = 7;
  void clear_wait_begin_time_us();
  static const int kWaitBeginTimeUsFieldNumber = 7;
  ::google::protobuf::uint64 wait_begin_time_us() const;
  void set_wait_begin_time_us(::google::protobuf::uint64 value);

  // uint32 play_index = 8;
  void clear_play_index();
  static const int kPlayIndexFieldNumber = 8;
  ::google::protobuf::uint32 play_index() const;
  void set_play_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InBattleMechanicusCardResultNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::InBattleMechanicusCardInfo > card_list_;
  public:
  class InBattleMechanicusCardResultNotify_PlayerConfirmedCardMapEntry : public ::google::protobuf::internal::MapEntry<InBattleMechanicusCardResultNotify_PlayerConfirmedCardMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<InBattleMechanicusCardResultNotify_PlayerConfirmedCardMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    InBattleMechanicusCardResultNotify_PlayerConfirmedCardMapEntry();
    InBattleMechanicusCardResultNotify_PlayerConfirmedCardMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const InBattleMechanicusCardResultNotify_PlayerConfirmedCardMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_InBattleMechanicusCardResultNotify_PlayerConfirmedCardMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      InBattleMechanicusCardResultNotify_PlayerConfirmedCardMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > player_confirmed_card_map_;
  private:
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 wait_seconds_;
  ::google::protobuf::uint64 wait_begin_time_us_;
  ::google::protobuf::uint32 play_index_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MultistagePlayFinishStageRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MultistagePlayFinishStageRsp) */ {
 public:
  MultistagePlayFinishStageRsp();
  virtual ~MultistagePlayFinishStageRsp();

  MultistagePlayFinishStageRsp(const MultistagePlayFinishStageRsp& from);

  inline MultistagePlayFinishStageRsp& operator=(const MultistagePlayFinishStageRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MultistagePlayFinishStageRsp(MultistagePlayFinishStageRsp&& from) noexcept
    : MultistagePlayFinishStageRsp() {
    *this = ::std::move(from);
  }

  inline MultistagePlayFinishStageRsp& operator=(MultistagePlayFinishStageRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MultistagePlayFinishStageRsp& default_instance();

  static inline const MultistagePlayFinishStageRsp* internal_default_instance() {
    return reinterpret_cast<const MultistagePlayFinishStageRsp*>(
               &_MultistagePlayFinishStageRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(MultistagePlayFinishStageRsp* other);
  friend void swap(MultistagePlayFinishStageRsp& a, MultistagePlayFinishStageRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MultistagePlayFinishStageRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  MultistagePlayFinishStageRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MultistagePlayFinishStageRsp& from);
  void MergeFrom(const MultistagePlayFinishStageRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MultistagePlayFinishStageRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MultistagePlayFinishStageRsp_CmdId CmdId;
  static const CmdId NONE =
    MultistagePlayFinishStageRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    MultistagePlayFinishStageRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    MultistagePlayFinishStageRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    MultistagePlayFinishStageRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return MultistagePlayFinishStageRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    MultistagePlayFinishStageRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    MultistagePlayFinishStageRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    MultistagePlayFinishStageRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return MultistagePlayFinishStageRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return MultistagePlayFinishStageRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return MultistagePlayFinishStageRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 group_id = 12;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 12;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint32 play_index = 6;
  void clear_play_index();
  static const int kPlayIndexFieldNumber = 6;
  ::google::protobuf::uint32 play_index() const;
  void set_play_index(::google::protobuf::uint32 value);

  // int32 retcode = 11;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 11;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.MultistagePlayFinishStageRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 play_index_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MultistageSettleWatcherInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MultistageSettleWatcherInfo) */ {
 public:
  MultistageSettleWatcherInfo();
  virtual ~MultistageSettleWatcherInfo();

  MultistageSettleWatcherInfo(const MultistageSettleWatcherInfo& from);

  inline MultistageSettleWatcherInfo& operator=(const MultistageSettleWatcherInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MultistageSettleWatcherInfo(MultistageSettleWatcherInfo&& from) noexcept
    : MultistageSettleWatcherInfo() {
    *this = ::std::move(from);
  }

  inline MultistageSettleWatcherInfo& operator=(MultistageSettleWatcherInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MultistageSettleWatcherInfo& default_instance();

  static inline const MultistageSettleWatcherInfo* internal_default_instance() {
    return reinterpret_cast<const MultistageSettleWatcherInfo*>(
               &_MultistageSettleWatcherInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(MultistageSettleWatcherInfo* other);
  friend void swap(MultistageSettleWatcherInfo& a, MultistageSettleWatcherInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MultistageSettleWatcherInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MultistageSettleWatcherInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MultistageSettleWatcherInfo& from);
  void MergeFrom(const MultistageSettleWatcherInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MultistageSettleWatcherInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 cur_progress = 5;
  void clear_cur_progress();
  static const int kCurProgressFieldNumber = 5;
  ::google::protobuf::uint32 cur_progress() const;
  void set_cur_progress(::google::protobuf::uint32 value);

  // uint32 watcher_id = 7;
  void clear_watcher_id();
  static const int kWatcherIdFieldNumber = 7;
  ::google::protobuf::uint32 watcher_id() const;
  void set_watcher_id(::google::protobuf::uint32 value);

  // bool is_inverse = 12;
  void clear_is_inverse();
  static const int kIsInverseFieldNumber = 12;
  bool is_inverse() const;
  void set_is_inverse(bool value);

  // uint32 total_progress = 13;
  void clear_total_progress();
  static const int kTotalProgressFieldNumber = 13;
  ::google::protobuf::uint32 total_progress() const;
  void set_total_progress(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MultistageSettleWatcherInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cur_progress_;
  ::google::protobuf::uint32 watcher_id_;
  bool is_inverse_;
  ::google::protobuf::uint32 total_progress_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InBattleMechanicusSettleNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleMechanicusSettleNotify) */ {
 public:
  InBattleMechanicusSettleNotify();
  virtual ~InBattleMechanicusSettleNotify();

  InBattleMechanicusSettleNotify(const InBattleMechanicusSettleNotify& from);

  inline InBattleMechanicusSettleNotify& operator=(const InBattleMechanicusSettleNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleMechanicusSettleNotify(InBattleMechanicusSettleNotify&& from) noexcept
    : InBattleMechanicusSettleNotify() {
    *this = ::std::move(from);
  }

  inline InBattleMechanicusSettleNotify& operator=(InBattleMechanicusSettleNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleMechanicusSettleNotify& default_instance();

  static inline const InBattleMechanicusSettleNotify* internal_default_instance() {
    return reinterpret_cast<const InBattleMechanicusSettleNotify*>(
               &_InBattleMechanicusSettleNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(InBattleMechanicusSettleNotify* other);
  friend void swap(InBattleMechanicusSettleNotify& a, InBattleMechanicusSettleNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleMechanicusSettleNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleMechanicusSettleNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleMechanicusSettleNotify& from);
  void MergeFrom(const InBattleMechanicusSettleNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleMechanicusSettleNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef InBattleMechanicusSettleNotify_CmdId CmdId;
  static const CmdId NONE =
    InBattleMechanicusSettleNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    InBattleMechanicusSettleNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    InBattleMechanicusSettleNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    InBattleMechanicusSettleNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return InBattleMechanicusSettleNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    InBattleMechanicusSettleNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    InBattleMechanicusSettleNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    InBattleMechanicusSettleNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return InBattleMechanicusSettleNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return InBattleMechanicusSettleNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return InBattleMechanicusSettleNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.MultistageSettleWatcherInfo watcher_list = 3;
  int watcher_list_size() const;
  void clear_watcher_list();
  static const int kWatcherListFieldNumber = 3;
  const ::proto::MultistageSettleWatcherInfo& watcher_list(int index) const;
  ::proto::MultistageSettleWatcherInfo* mutable_watcher_list(int index);
  ::proto::MultistageSettleWatcherInfo* add_watcher_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MultistageSettleWatcherInfo >*
      mutable_watcher_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MultistageSettleWatcherInfo >&
      watcher_list() const;

  // bool is_success = 2;
  void clear_is_success();
  static const int kIsSuccessFieldNumber = 2;
  bool is_success() const;
  void set_is_success(bool value);

  // uint32 difficulty_percentage = 6;
  void clear_difficulty_percentage();
  static const int kDifficultyPercentageFieldNumber = 6;
  ::google::protobuf::uint32 difficulty_percentage() const;
  void set_difficulty_percentage(::google::protobuf::uint32 value);

  // uint32 total_token = 7;
  void clear_total_token();
  static const int kTotalTokenFieldNumber = 7;
  ::google::protobuf::uint32 total_token() const;
  void set_total_token(::google::protobuf::uint32 value);

  // uint32 real_token = 13;
  void clear_real_token();
  static const int kRealTokenFieldNumber = 13;
  ::google::protobuf::uint32 real_token() const;
  void set_real_token(::google::protobuf::uint32 value);

  // uint64 scene_time_ms = 11;
  void clear_scene_time_ms();
  static const int kSceneTimeMsFieldNumber = 11;
  ::google::protobuf::uint64 scene_time_ms() const;
  void set_scene_time_ms(::google::protobuf::uint64 value);

  // uint32 play_index = 14;
  void clear_play_index();
  static const int kPlayIndexFieldNumber = 14;
  ::google::protobuf::uint32 play_index() const;
  void set_play_index(::google::protobuf::uint32 value);

  // uint32 group_id = 15;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 15;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InBattleMechanicusSettleNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::MultistageSettleWatcherInfo > watcher_list_;
  bool is_success_;
  ::google::protobuf::uint32 difficulty_percentage_;
  ::google::protobuf::uint32 total_token_;
  ::google::protobuf::uint32 real_token_;
  ::google::protobuf::uint64 scene_time_ms_;
  ::google::protobuf::uint32 play_index_;
  ::google::protobuf::uint32 group_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InBattleMechanicusSettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleMechanicusSettleInfo) */ {
 public:
  InBattleMechanicusSettleInfo();
  virtual ~InBattleMechanicusSettleInfo();

  InBattleMechanicusSettleInfo(const InBattleMechanicusSettleInfo& from);

  inline InBattleMechanicusSettleInfo& operator=(const InBattleMechanicusSettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleMechanicusSettleInfo(InBattleMechanicusSettleInfo&& from) noexcept
    : InBattleMechanicusSettleInfo() {
    *this = ::std::move(from);
  }

  inline InBattleMechanicusSettleInfo& operator=(InBattleMechanicusSettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleMechanicusSettleInfo& default_instance();

  static inline const InBattleMechanicusSettleInfo* internal_default_instance() {
    return reinterpret_cast<const InBattleMechanicusSettleInfo*>(
               &_InBattleMechanicusSettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(InBattleMechanicusSettleInfo* other);
  friend void swap(InBattleMechanicusSettleInfo& a, InBattleMechanicusSettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleMechanicusSettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleMechanicusSettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleMechanicusSettleInfo& from);
  void MergeFrom(const InBattleMechanicusSettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleMechanicusSettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.MultistageSettleWatcherInfo watcher_list = 7;
  int watcher_list_size() const;
  void clear_watcher_list();
  static const int kWatcherListFieldNumber = 7;
  const ::proto::MultistageSettleWatcherInfo& watcher_list(int index) const;
  ::proto::MultistageSettleWatcherInfo* mutable_watcher_list(int index);
  ::proto::MultistageSettleWatcherInfo* add_watcher_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MultistageSettleWatcherInfo >*
      mutable_watcher_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MultistageSettleWatcherInfo >&
      watcher_list() const;

  // uint32 play_index = 3;
  void clear_play_index();
  static const int kPlayIndexFieldNumber = 3;
  ::google::protobuf::uint32 play_index() const;
  void set_play_index(::google::protobuf::uint32 value);

  // uint32 total_token = 4;
  void clear_total_token();
  static const int kTotalTokenFieldNumber = 4;
  ::google::protobuf::uint32 total_token() const;
  void set_total_token(::google::protobuf::uint32 value);

  // bool is_success = 6;
  void clear_is_success();
  static const int kIsSuccessFieldNumber = 6;
  bool is_success() const;
  void set_is_success(bool value);

  // uint32 real_token = 8;
  void clear_real_token();
  static const int kRealTokenFieldNumber = 8;
  ::google::protobuf::uint32 real_token() const;
  void set_real_token(::google::protobuf::uint32 value);

  // uint32 difficulty_percentage = 10;
  void clear_difficulty_percentage();
  static const int kDifficultyPercentageFieldNumber = 10;
  ::google::protobuf::uint32 difficulty_percentage() const;
  void set_difficulty_percentage(::google::protobuf::uint32 value);

  // uint32 group_id = 13;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 13;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint64 scene_time_ms = 15;
  void clear_scene_time_ms();
  static const int kSceneTimeMsFieldNumber = 15;
  ::google::protobuf::uint64 scene_time_ms() const;
  void set_scene_time_ms(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.InBattleMechanicusSettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::MultistageSettleWatcherInfo > watcher_list_;
  ::google::protobuf::uint32 play_index_;
  ::google::protobuf::uint32 total_token_;
  bool is_success_;
  ::google::protobuf::uint32 real_token_;
  ::google::protobuf::uint32 difficulty_percentage_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint64 scene_time_ms_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MultistagePlaySettleNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MultistagePlaySettleNotify) */ {
 public:
  MultistagePlaySettleNotify();
  virtual ~MultistagePlaySettleNotify();

  MultistagePlaySettleNotify(const MultistagePlaySettleNotify& from);

  inline MultistagePlaySettleNotify& operator=(const MultistagePlaySettleNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MultistagePlaySettleNotify(MultistagePlaySettleNotify&& from) noexcept
    : MultistagePlaySettleNotify() {
    *this = ::std::move(from);
  }

  inline MultistagePlaySettleNotify& operator=(MultistagePlaySettleNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MultistagePlaySettleNotify& default_instance();

  enum DetailCase {
    kMechanicusSettleInfo = 1402,
    kChessSettleInfo = 1283,
    kIrodoriChessSettleInfo = 612,
    DETAIL_NOT_SET = 0,
  };

  static inline const MultistagePlaySettleNotify* internal_default_instance() {
    return reinterpret_cast<const MultistagePlaySettleNotify*>(
               &_MultistagePlaySettleNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(MultistagePlaySettleNotify* other);
  friend void swap(MultistagePlaySettleNotify& a, MultistagePlaySettleNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MultistagePlaySettleNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MultistagePlaySettleNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MultistagePlaySettleNotify& from);
  void MergeFrom(const MultistagePlaySettleNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MultistagePlaySettleNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MultistagePlaySettleNotify_CmdId CmdId;
  static const CmdId NONE =
    MultistagePlaySettleNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    MultistagePlaySettleNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    MultistagePlaySettleNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    MultistagePlaySettleNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return MultistagePlaySettleNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    MultistagePlaySettleNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    MultistagePlaySettleNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    MultistagePlaySettleNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return MultistagePlaySettleNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return MultistagePlaySettleNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return MultistagePlaySettleNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 group_id = 4;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 4;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint32 play_index = 14;
  void clear_play_index();
  static const int kPlayIndexFieldNumber = 14;
  ::google::protobuf::uint32 play_index() const;
  void set_play_index(::google::protobuf::uint32 value);

  // .proto.InBattleMechanicusSettleInfo mechanicus_settle_info = 1402;
  bool has_mechanicus_settle_info() const;
  void clear_mechanicus_settle_info();
  static const int kMechanicusSettleInfoFieldNumber = 1402;
  const ::proto::InBattleMechanicusSettleInfo& mechanicus_settle_info() const;
  ::proto::InBattleMechanicusSettleInfo* mutable_mechanicus_settle_info();
  ::proto::InBattleMechanicusSettleInfo* release_mechanicus_settle_info();
  void set_allocated_mechanicus_settle_info(::proto::InBattleMechanicusSettleInfo* mechanicus_settle_info);

  // .proto.InBattleChessSettleInfo chess_settle_info = 1283;
  bool has_chess_settle_info() const;
  void clear_chess_settle_info();
  static const int kChessSettleInfoFieldNumber = 1283;
  const ::proto::InBattleChessSettleInfo& chess_settle_info() const;
  ::proto::InBattleChessSettleInfo* mutable_chess_settle_info();
  ::proto::InBattleChessSettleInfo* release_chess_settle_info();
  void set_allocated_chess_settle_info(::proto::InBattleChessSettleInfo* chess_settle_info);

  // .proto.InBattleIrodoriChessSettleInfo irodori_chess_settle_info = 612;
  bool has_irodori_chess_settle_info() const;
  void clear_irodori_chess_settle_info();
  static const int kIrodoriChessSettleInfoFieldNumber = 612;
  const ::proto::InBattleIrodoriChessSettleInfo& irodori_chess_settle_info() const;
  ::proto::InBattleIrodoriChessSettleInfo* mutable_irodori_chess_settle_info();
  ::proto::InBattleIrodoriChessSettleInfo* release_irodori_chess_settle_info();
  void set_allocated_irodori_chess_settle_info(::proto::InBattleIrodoriChessSettleInfo* irodori_chess_settle_info);

  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:proto.MultistagePlaySettleNotify)
 private:
  void set_has_mechanicus_settle_info();
  void set_has_chess_settle_info();
  void set_has_irodori_chess_settle_info();

  inline bool has_detail() const;
  void clear_detail();
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 play_index_;
  union DetailUnion {
    DetailUnion() {}
    ::proto::InBattleMechanicusSettleInfo* mechanicus_settle_info_;
    ::proto::InBattleChessSettleInfo* chess_settle_info_;
    ::proto::InBattleIrodoriChessSettleInfo* irodori_chess_settle_info_;
  } detail_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MultistagePlayStageEndNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MultistagePlayStageEndNotify) */ {
 public:
  MultistagePlayStageEndNotify();
  virtual ~MultistagePlayStageEndNotify();

  MultistagePlayStageEndNotify(const MultistagePlayStageEndNotify& from);

  inline MultistagePlayStageEndNotify& operator=(const MultistagePlayStageEndNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MultistagePlayStageEndNotify(MultistagePlayStageEndNotify&& from) noexcept
    : MultistagePlayStageEndNotify() {
    *this = ::std::move(from);
  }

  inline MultistagePlayStageEndNotify& operator=(MultistagePlayStageEndNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MultistagePlayStageEndNotify& default_instance();

  static inline const MultistagePlayStageEndNotify* internal_default_instance() {
    return reinterpret_cast<const MultistagePlayStageEndNotify*>(
               &_MultistagePlayStageEndNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(MultistagePlayStageEndNotify* other);
  friend void swap(MultistagePlayStageEndNotify& a, MultistagePlayStageEndNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MultistagePlayStageEndNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MultistagePlayStageEndNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MultistagePlayStageEndNotify& from);
  void MergeFrom(const MultistagePlayStageEndNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MultistagePlayStageEndNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MultistagePlayStageEndNotify_CmdId CmdId;
  static const CmdId NONE =
    MultistagePlayStageEndNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    MultistagePlayStageEndNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    MultistagePlayStageEndNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    MultistagePlayStageEndNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return MultistagePlayStageEndNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    MultistagePlayStageEndNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    MultistagePlayStageEndNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    MultistagePlayStageEndNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return MultistagePlayStageEndNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return MultistagePlayStageEndNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return MultistagePlayStageEndNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 play_index = 9;
  void clear_play_index();
  static const int kPlayIndexFieldNumber = 9;
  ::google::protobuf::uint32 play_index() const;
  void set_play_index(::google::protobuf::uint32 value);

  // uint32 group_id = 15;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 15;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MultistagePlayStageEndNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 play_index_;
  ::google::protobuf::uint32 group_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MultistagePlayEndNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MultistagePlayEndNotify) */ {
 public:
  MultistagePlayEndNotify();
  virtual ~MultistagePlayEndNotify();

  MultistagePlayEndNotify(const MultistagePlayEndNotify& from);

  inline MultistagePlayEndNotify& operator=(const MultistagePlayEndNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MultistagePlayEndNotify(MultistagePlayEndNotify&& from) noexcept
    : MultistagePlayEndNotify() {
    *this = ::std::move(from);
  }

  inline MultistagePlayEndNotify& operator=(MultistagePlayEndNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MultistagePlayEndNotify& default_instance();

  static inline const MultistagePlayEndNotify* internal_default_instance() {
    return reinterpret_cast<const MultistagePlayEndNotify*>(
               &_MultistagePlayEndNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(MultistagePlayEndNotify* other);
  friend void swap(MultistagePlayEndNotify& a, MultistagePlayEndNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MultistagePlayEndNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MultistagePlayEndNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MultistagePlayEndNotify& from);
  void MergeFrom(const MultistagePlayEndNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MultistagePlayEndNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MultistagePlayEndNotify_CmdId CmdId;
  static const CmdId NONE =
    MultistagePlayEndNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    MultistagePlayEndNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    MultistagePlayEndNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    MultistagePlayEndNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return MultistagePlayEndNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    MultistagePlayEndNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    MultistagePlayEndNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    MultistagePlayEndNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return MultistagePlayEndNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return MultistagePlayEndNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return MultistagePlayEndNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 group_id = 5;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 5;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint32 play_index = 13;
  void clear_play_index();
  static const int kPlayIndexFieldNumber = 13;
  ::google::protobuf::uint32 play_index() const;
  void set_play_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MultistagePlayEndNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 play_index_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FleurFairBuffEnergyNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FleurFairBuffEnergyNotify) */ {
 public:
  FleurFairBuffEnergyNotify();
  virtual ~FleurFairBuffEnergyNotify();

  FleurFairBuffEnergyNotify(const FleurFairBuffEnergyNotify& from);

  inline FleurFairBuffEnergyNotify& operator=(const FleurFairBuffEnergyNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FleurFairBuffEnergyNotify(FleurFairBuffEnergyNotify&& from) noexcept
    : FleurFairBuffEnergyNotify() {
    *this = ::std::move(from);
  }

  inline FleurFairBuffEnergyNotify& operator=(FleurFairBuffEnergyNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FleurFairBuffEnergyNotify& default_instance();

  static inline const FleurFairBuffEnergyNotify* internal_default_instance() {
    return reinterpret_cast<const FleurFairBuffEnergyNotify*>(
               &_FleurFairBuffEnergyNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(FleurFairBuffEnergyNotify* other);
  friend void swap(FleurFairBuffEnergyNotify& a, FleurFairBuffEnergyNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FleurFairBuffEnergyNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  FleurFairBuffEnergyNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FleurFairBuffEnergyNotify& from);
  void MergeFrom(const FleurFairBuffEnergyNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FleurFairBuffEnergyNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FleurFairBuffEnergyNotify_CmdId CmdId;
  static const CmdId NONE =
    FleurFairBuffEnergyNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    FleurFairBuffEnergyNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    FleurFairBuffEnergyNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    FleurFairBuffEnergyNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return FleurFairBuffEnergyNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    FleurFairBuffEnergyNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    FleurFairBuffEnergyNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    FleurFairBuffEnergyNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return FleurFairBuffEnergyNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return FleurFairBuffEnergyNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return FleurFairBuffEnergyNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 energy = 4;
  void clear_energy();
  static const int kEnergyFieldNumber = 4;
  ::google::protobuf::uint32 energy() const;
  void set_energy(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FleurFairBuffEnergyNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 energy_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class FleurFairGallerySettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FleurFairGallerySettleInfo) */ {
 public:
  FleurFairGallerySettleInfo();
  virtual ~FleurFairGallerySettleInfo();

  FleurFairGallerySettleInfo(const FleurFairGallerySettleInfo& from);

  inline FleurFairGallerySettleInfo& operator=(const FleurFairGallerySettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FleurFairGallerySettleInfo(FleurFairGallerySettleInfo&& from) noexcept
    : FleurFairGallerySettleInfo() {
    *this = ::std::move(from);
  }

  inline FleurFairGallerySettleInfo& operator=(FleurFairGallerySettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FleurFairGallerySettleInfo& default_instance();

  static inline const FleurFairGallerySettleInfo* internal_default_instance() {
    return reinterpret_cast<const FleurFairGallerySettleInfo*>(
               &_FleurFairGallerySettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(FleurFairGallerySettleInfo* other);
  friend void swap(FleurFairGallerySettleInfo& a, FleurFairGallerySettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FleurFairGallerySettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FleurFairGallerySettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FleurFairGallerySettleInfo& from);
  void MergeFrom(const FleurFairGallerySettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FleurFairGallerySettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, int32> energy_stat_map = 6;
  int energy_stat_map_size() const;
  void clear_energy_stat_map();
  static const int kEnergyStatMapFieldNumber = 6;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >&
      energy_stat_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >*
      mutable_energy_stat_map();

  // bool is_success = 1;
  void clear_is_success();
  static const int kIsSuccessFieldNumber = 1;
  bool is_success() const;
  void set_is_success(bool value);

  // uint32 energy = 2;
  void clear_energy();
  static const int kEnergyFieldNumber = 2;
  ::google::protobuf::uint32 energy() const;
  void set_energy(::google::protobuf::uint32 value);

  // uint32 gallery_stage_count = 9;
  void clear_gallery_stage_count();
  static const int kGalleryStageCountFieldNumber = 9;
  ::google::protobuf::uint32 gallery_stage_count() const;
  void set_gallery_stage_count(::google::protobuf::uint32 value);

  // uint32 gallery_stage_index = 11;
  void clear_gallery_stage_index();
  static const int kGalleryStageIndexFieldNumber = 11;
  ::google::protobuf::uint32 gallery_stage_index() const;
  void set_gallery_stage_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FleurFairGallerySettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class FleurFairGallerySettleInfo_EnergyStatMapEntry : public ::google::protobuf::internal::MapEntry<FleurFairGallerySettleInfo_EnergyStatMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<FleurFairGallerySettleInfo_EnergyStatMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > SuperType;
    FleurFairGallerySettleInfo_EnergyStatMapEntry();
    FleurFairGallerySettleInfo_EnergyStatMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const FleurFairGallerySettleInfo_EnergyStatMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_FleurFairGallerySettleInfo_EnergyStatMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      FleurFairGallerySettleInfo_EnergyStatMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > energy_stat_map_;
  private:
  bool is_success_;
  ::google::protobuf::uint32 energy_;
  ::google::protobuf::uint32 gallery_stage_count_;
  ::google::protobuf::uint32 gallery_stage_index_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FleurFairPlayerStatInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FleurFairPlayerStatInfo) */ {
 public:
  FleurFairPlayerStatInfo();
  virtual ~FleurFairPlayerStatInfo();

  FleurFairPlayerStatInfo(const FleurFairPlayerStatInfo& from);

  inline FleurFairPlayerStatInfo& operator=(const FleurFairPlayerStatInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FleurFairPlayerStatInfo(FleurFairPlayerStatInfo&& from) noexcept
    : FleurFairPlayerStatInfo() {
    *this = ::std::move(from);
  }

  inline FleurFairPlayerStatInfo& operator=(FleurFairPlayerStatInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FleurFairPlayerStatInfo& default_instance();

  static inline const FleurFairPlayerStatInfo* internal_default_instance() {
    return reinterpret_cast<const FleurFairPlayerStatInfo*>(
               &_FleurFairPlayerStatInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(FleurFairPlayerStatInfo* other);
  friend void swap(FleurFairPlayerStatInfo& a, FleurFairPlayerStatInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FleurFairPlayerStatInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FleurFairPlayerStatInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FleurFairPlayerStatInfo& from);
  void MergeFrom(const FleurFairPlayerStatInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FleurFairPlayerStatInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string online_id = 11;
  void clear_online_id();
  static const int kOnlineIdFieldNumber = 11;
  const ::std::string& online_id() const;
  void set_online_id(const ::std::string& value);
  #if LANG_CXX11
  void set_online_id(::std::string&& value);
  #endif
  void set_online_id(const char* value);
  void set_online_id(const char* value, size_t size);
  ::std::string* mutable_online_id();
  ::std::string* release_online_id();
  void set_allocated_online_id(::std::string* online_id);

  // string nick_name = 15;
  void clear_nick_name();
  static const int kNickNameFieldNumber = 15;
  const ::std::string& nick_name() const;
  void set_nick_name(const ::std::string& value);
  #if LANG_CXX11
  void set_nick_name(::std::string&& value);
  #endif
  void set_nick_name(const char* value);
  void set_nick_name(const char* value, size_t size);
  ::std::string* mutable_nick_name();
  ::std::string* release_nick_name();
  void set_allocated_nick_name(::std::string* nick_name);

  // .proto.ProfilePicture profile_picture = 1;
  bool has_profile_picture() const;
  void clear_profile_picture();
  static const int kProfilePictureFieldNumber = 1;
  const ::proto::ProfilePicture& profile_picture() const;
  ::proto::ProfilePicture* mutable_profile_picture();
  ::proto::ProfilePicture* release_profile_picture();
  void set_allocated_profile_picture(::proto::ProfilePicture* profile_picture);

  // uint32 stat_id = 3;
  void clear_stat_id();
  static const int kStatIdFieldNumber = 3;
  ::google::protobuf::uint32 stat_id() const;
  void set_stat_id(::google::protobuf::uint32 value);

  // int32 param = 5;
  void clear_param();
  static const int kParamFieldNumber = 5;
  ::google::protobuf::int32 param() const;
  void set_param(::google::protobuf::int32 value);

  // uint32 head_image = 6;
  void clear_head_image();
  static const int kHeadImageFieldNumber = 6;
  ::google::protobuf::uint32 head_image() const;
  void set_head_image(::google::protobuf::uint32 value);

  // uint32 uid = 8;
  void clear_uid();
  static const int kUidFieldNumber = 8;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FleurFairPlayerStatInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr online_id_;
  ::google::protobuf::internal::ArenaStringPtr nick_name_;
  ::proto::ProfilePicture* profile_picture_;
  ::google::protobuf::uint32 stat_id_;
  ::google::protobuf::int32 param_;
  ::google::protobuf::uint32 head_image_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FleurFairBossSettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FleurFairBossSettleInfo) */ {
 public:
  FleurFairBossSettleInfo();
  virtual ~FleurFairBossSettleInfo();

  FleurFairBossSettleInfo(const FleurFairBossSettleInfo& from);

  inline FleurFairBossSettleInfo& operator=(const FleurFairBossSettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FleurFairBossSettleInfo(FleurFairBossSettleInfo&& from) noexcept
    : FleurFairBossSettleInfo() {
    *this = ::std::move(from);
  }

  inline FleurFairBossSettleInfo& operator=(FleurFairBossSettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FleurFairBossSettleInfo& default_instance();

  static inline const FleurFairBossSettleInfo* internal_default_instance() {
    return reinterpret_cast<const FleurFairBossSettleInfo*>(
               &_FleurFairBossSettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(FleurFairBossSettleInfo* other);
  friend void swap(FleurFairBossSettleInfo& a, FleurFairBossSettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FleurFairBossSettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FleurFairBossSettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FleurFairBossSettleInfo& from);
  void MergeFrom(const FleurFairBossSettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FleurFairBossSettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.FleurFairPlayerStatInfo stat_info_list = 1;
  int stat_info_list_size() const;
  void clear_stat_info_list();
  static const int kStatInfoListFieldNumber = 1;
  const ::proto::FleurFairPlayerStatInfo& stat_info_list(int index) const;
  ::proto::FleurFairPlayerStatInfo* mutable_stat_info_list(int index);
  ::proto::FleurFairPlayerStatInfo* add_stat_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::FleurFairPlayerStatInfo >*
      mutable_stat_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::FleurFairPlayerStatInfo >&
      stat_info_list() const;

  // uint32 cost_time = 8;
  void clear_cost_time();
  static const int kCostTimeFieldNumber = 8;
  ::google::protobuf::uint32 cost_time() const;
  void set_cost_time(::google::protobuf::uint32 value);

  // bool is_success = 10;
  void clear_is_success();
  static const int kIsSuccessFieldNumber = 10;
  bool is_success() const;
  void set_is_success(bool value);

  // uint32 energy = 12;
  void clear_energy();
  static const int kEnergyFieldNumber = 12;
  ::google::protobuf::uint32 energy() const;
  void set_energy(::google::protobuf::uint32 value);

  // uint32 reward_token_num = 15;
  void clear_reward_token_num();
  static const int kRewardTokenNumFieldNumber = 15;
  ::google::protobuf::uint32 reward_token_num() const;
  void set_reward_token_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FleurFairBossSettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::FleurFairPlayerStatInfo > stat_info_list_;
  ::google::protobuf::uint32 cost_time_;
  bool is_success_;
  ::google::protobuf::uint32 energy_;
  ::google::protobuf::uint32 reward_token_num_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FleurFairStageSettleNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FleurFairStageSettleNotify) */ {
 public:
  FleurFairStageSettleNotify();
  virtual ~FleurFairStageSettleNotify();

  FleurFairStageSettleNotify(const FleurFairStageSettleNotify& from);

  inline FleurFairStageSettleNotify& operator=(const FleurFairStageSettleNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FleurFairStageSettleNotify(FleurFairStageSettleNotify&& from) noexcept
    : FleurFairStageSettleNotify() {
    *this = ::std::move(from);
  }

  inline FleurFairStageSettleNotify& operator=(FleurFairStageSettleNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FleurFairStageSettleNotify& default_instance();

  enum DetailCase {
    kGallerySettleInfo = 13,
    kBossSettleInfo = 14,
    DETAIL_NOT_SET = 0,
  };

  static inline const FleurFairStageSettleNotify* internal_default_instance() {
    return reinterpret_cast<const FleurFairStageSettleNotify*>(
               &_FleurFairStageSettleNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(FleurFairStageSettleNotify* other);
  friend void swap(FleurFairStageSettleNotify& a, FleurFairStageSettleNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FleurFairStageSettleNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  FleurFairStageSettleNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FleurFairStageSettleNotify& from);
  void MergeFrom(const FleurFairStageSettleNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FleurFairStageSettleNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FleurFairStageSettleNotify_CmdId CmdId;
  static const CmdId NONE =
    FleurFairStageSettleNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    FleurFairStageSettleNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    FleurFairStageSettleNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    FleurFairStageSettleNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return FleurFairStageSettleNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    FleurFairStageSettleNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    FleurFairStageSettleNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    FleurFairStageSettleNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return FleurFairStageSettleNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return FleurFairStageSettleNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return FleurFairStageSettleNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 stage_type = 10;
  void clear_stage_type();
  static const int kStageTypeFieldNumber = 10;
  ::google::protobuf::uint32 stage_type() const;
  void set_stage_type(::google::protobuf::uint32 value);

  // .proto.FleurFairGallerySettleInfo gallery_settle_info = 13;
  bool has_gallery_settle_info() const;
  void clear_gallery_settle_info();
  static const int kGallerySettleInfoFieldNumber = 13;
  const ::proto::FleurFairGallerySettleInfo& gallery_settle_info() const;
  ::proto::FleurFairGallerySettleInfo* mutable_gallery_settle_info();
  ::proto::FleurFairGallerySettleInfo* release_gallery_settle_info();
  void set_allocated_gallery_settle_info(::proto::FleurFairGallerySettleInfo* gallery_settle_info);

  // .proto.FleurFairBossSettleInfo boss_settle_info = 14;
  bool has_boss_settle_info() const;
  void clear_boss_settle_info();
  static const int kBossSettleInfoFieldNumber = 14;
  const ::proto::FleurFairBossSettleInfo& boss_settle_info() const;
  ::proto::FleurFairBossSettleInfo* mutable_boss_settle_info();
  ::proto::FleurFairBossSettleInfo* release_boss_settle_info();
  void set_allocated_boss_settle_info(::proto::FleurFairBossSettleInfo* boss_settle_info);

  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:proto.FleurFairStageSettleNotify)
 private:
  void set_has_gallery_settle_info();
  void set_has_boss_settle_info();

  inline bool has_detail() const;
  void clear_detail();
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 stage_type_;
  union DetailUnion {
    DetailUnion() {}
    ::proto::FleurFairGallerySettleInfo* gallery_settle_info_;
    ::proto::FleurFairBossSettleInfo* boss_settle_info_;
  } detail_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FleurFairFinishGalleryStageNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FleurFairFinishGalleryStageNotify) */ {
 public:
  FleurFairFinishGalleryStageNotify();
  virtual ~FleurFairFinishGalleryStageNotify();

  FleurFairFinishGalleryStageNotify(const FleurFairFinishGalleryStageNotify& from);

  inline FleurFairFinishGalleryStageNotify& operator=(const FleurFairFinishGalleryStageNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FleurFairFinishGalleryStageNotify(FleurFairFinishGalleryStageNotify&& from) noexcept
    : FleurFairFinishGalleryStageNotify() {
    *this = ::std::move(from);
  }

  inline FleurFairFinishGalleryStageNotify& operator=(FleurFairFinishGalleryStageNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FleurFairFinishGalleryStageNotify& default_instance();

  static inline const FleurFairFinishGalleryStageNotify* internal_default_instance() {
    return reinterpret_cast<const FleurFairFinishGalleryStageNotify*>(
               &_FleurFairFinishGalleryStageNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(FleurFairFinishGalleryStageNotify* other);
  friend void swap(FleurFairFinishGalleryStageNotify& a, FleurFairFinishGalleryStageNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FleurFairFinishGalleryStageNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  FleurFairFinishGalleryStageNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FleurFairFinishGalleryStageNotify& from);
  void MergeFrom(const FleurFairFinishGalleryStageNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FleurFairFinishGalleryStageNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FleurFairFinishGalleryStageNotify_CmdId CmdId;
  static const CmdId NONE =
    FleurFairFinishGalleryStageNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    FleurFairFinishGalleryStageNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    FleurFairFinishGalleryStageNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    FleurFairFinishGalleryStageNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return FleurFairFinishGalleryStageNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    FleurFairFinishGalleryStageNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    FleurFairFinishGalleryStageNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    FleurFairFinishGalleryStageNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return FleurFairFinishGalleryStageNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return FleurFairFinishGalleryStageNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return FleurFairFinishGalleryStageNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.FleurFairFinishGalleryStageNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideAndSeekPlayerBattleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HideAndSeekPlayerBattleInfo) */ {
 public:
  HideAndSeekPlayerBattleInfo();
  virtual ~HideAndSeekPlayerBattleInfo();

  HideAndSeekPlayerBattleInfo(const HideAndSeekPlayerBattleInfo& from);

  inline HideAndSeekPlayerBattleInfo& operator=(const HideAndSeekPlayerBattleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideAndSeekPlayerBattleInfo(HideAndSeekPlayerBattleInfo&& from) noexcept
    : HideAndSeekPlayerBattleInfo() {
    *this = ::std::move(from);
  }

  inline HideAndSeekPlayerBattleInfo& operator=(HideAndSeekPlayerBattleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HideAndSeekPlayerBattleInfo& default_instance();

  static inline const HideAndSeekPlayerBattleInfo* internal_default_instance() {
    return reinterpret_cast<const HideAndSeekPlayerBattleInfo*>(
               &_HideAndSeekPlayerBattleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(HideAndSeekPlayerBattleInfo* other);
  friend void swap(HideAndSeekPlayerBattleInfo& a, HideAndSeekPlayerBattleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideAndSeekPlayerBattleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  HideAndSeekPlayerBattleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HideAndSeekPlayerBattleInfo& from);
  void MergeFrom(const HideAndSeekPlayerBattleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HideAndSeekPlayerBattleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 skill_list = 15;
  int skill_list_size() const;
  void clear_skill_list();
  static const int kSkillListFieldNumber = 15;
  ::google::protobuf::uint32 skill_list(int index) const;
  void set_skill_list(int index, ::google::protobuf::uint32 value);
  void add_skill_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skill_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skill_list();

  // uint32 costume_id = 3;
  void clear_costume_id();
  static const int kCostumeIdFieldNumber = 3;
  ::google::protobuf::uint32 costume_id() const;
  void set_costume_id(::google::protobuf::uint32 value);

  // uint32 avatar_id = 6;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 6;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // bool is_ready = 12;
  void clear_is_ready();
  static const int kIsReadyFieldNumber = 12;
  bool is_ready() const;
  void set_is_ready(bool value);

  // @@protoc_insertion_point(class_scope:proto.HideAndSeekPlayerBattleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skill_list_;
  mutable int _skill_list_cached_byte_size_;
  ::google::protobuf::uint32 costume_id_;
  ::google::protobuf::uint32 avatar_id_;
  bool is_ready_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class HideAndSeekStageInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HideAndSeekStageInfo) */ {
 public:
  HideAndSeekStageInfo();
  virtual ~HideAndSeekStageInfo();

  HideAndSeekStageInfo(const HideAndSeekStageInfo& from);

  inline HideAndSeekStageInfo& operator=(const HideAndSeekStageInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideAndSeekStageInfo(HideAndSeekStageInfo&& from) noexcept
    : HideAndSeekStageInfo() {
    *this = ::std::move(from);
  }

  inline HideAndSeekStageInfo& operator=(HideAndSeekStageInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HideAndSeekStageInfo& default_instance();

  static inline const HideAndSeekStageInfo* internal_default_instance() {
    return reinterpret_cast<const HideAndSeekStageInfo*>(
               &_HideAndSeekStageInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(HideAndSeekStageInfo* other);
  friend void swap(HideAndSeekStageInfo& a, HideAndSeekStageInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideAndSeekStageInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  HideAndSeekStageInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HideAndSeekStageInfo& from);
  void MergeFrom(const HideAndSeekStageInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HideAndSeekStageInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated uint32 hider_uid_list = 1;
  int hider_uid_list_size() const;
  void clear_hider_uid_list();
  static const int kHiderUidListFieldNumber = 1;
  ::google::protobuf::uint32 hider_uid_list(int index) const;
  void set_hider_uid_list(int index, ::google::protobuf::uint32 value);
  void add_hider_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hider_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hider_uid_list();

  // map<uint32, .proto.HideAndSeekPlayerBattleInfo> battle_info_map = 2;
  int battle_info_map_size() const;
  void clear_battle_info_map();
  static const int kBattleInfoMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::HideAndSeekPlayerBattleInfo >&
      battle_info_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::HideAndSeekPlayerBattleInfo >*
      mutable_battle_info_map();

  // bool is_record_score = 3;
  void clear_is_record_score();
  static const int kIsRecordScoreFieldNumber = 3;
  bool is_record_score() const;
  void set_is_record_score(bool value);

  // .proto.HideAndSeekStageType stage_type = 7;
  void clear_stage_type();
  static const int kStageTypeFieldNumber = 7;
  ::proto::HideAndSeekStageType stage_type() const;
  void set_stage_type(::proto::HideAndSeekStageType value);

  // uint32 map_id = 8;
  void clear_map_id();
  static const int kMapIdFieldNumber = 8;
  ::google::protobuf::uint32 map_id() const;
  void set_map_id(::google::protobuf::uint32 value);

  // uint32 hunter_uid = 10;
  void clear_hunter_uid();
  static const int kHunterUidFieldNumber = 10;
  ::google::protobuf::uint32 hunter_uid() const;
  void set_hunter_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HideAndSeekStageInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hider_uid_list_;
  mutable int _hider_uid_list_cached_byte_size_;
  public:
  class HideAndSeekStageInfo_BattleInfoMapEntry : public ::google::protobuf::internal::MapEntry<HideAndSeekStageInfo_BattleInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::HideAndSeekPlayerBattleInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<HideAndSeekStageInfo_BattleInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::HideAndSeekPlayerBattleInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    HideAndSeekStageInfo_BattleInfoMapEntry();
    HideAndSeekStageInfo_BattleInfoMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const HideAndSeekStageInfo_BattleInfoMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_HideAndSeekStageInfo_BattleInfoMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      HideAndSeekStageInfo_BattleInfoMapEntry,
      ::google::protobuf::uint32, ::proto::HideAndSeekPlayerBattleInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > battle_info_map_;
  private:
  bool is_record_score_;
  int stage_type_;
  ::google::protobuf::uint32 map_id_;
  ::google::protobuf::uint32 hunter_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideAndSeekSelectAvatarReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HideAndSeekSelectAvatarReq) */ {
 public:
  HideAndSeekSelectAvatarReq();
  virtual ~HideAndSeekSelectAvatarReq();

  HideAndSeekSelectAvatarReq(const HideAndSeekSelectAvatarReq& from);

  inline HideAndSeekSelectAvatarReq& operator=(const HideAndSeekSelectAvatarReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideAndSeekSelectAvatarReq(HideAndSeekSelectAvatarReq&& from) noexcept
    : HideAndSeekSelectAvatarReq() {
    *this = ::std::move(from);
  }

  inline HideAndSeekSelectAvatarReq& operator=(HideAndSeekSelectAvatarReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HideAndSeekSelectAvatarReq& default_instance();

  static inline const HideAndSeekSelectAvatarReq* internal_default_instance() {
    return reinterpret_cast<const HideAndSeekSelectAvatarReq*>(
               &_HideAndSeekSelectAvatarReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(HideAndSeekSelectAvatarReq* other);
  friend void swap(HideAndSeekSelectAvatarReq& a, HideAndSeekSelectAvatarReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideAndSeekSelectAvatarReq* New() const PROTOBUF_FINAL { return New(NULL); }

  HideAndSeekSelectAvatarReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HideAndSeekSelectAvatarReq& from);
  void MergeFrom(const HideAndSeekSelectAvatarReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HideAndSeekSelectAvatarReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef HideAndSeekSelectAvatarReq_CmdId CmdId;
  static const CmdId NONE =
    HideAndSeekSelectAvatarReq_CmdId_NONE;
  static const CmdId CMD_ID =
    HideAndSeekSelectAvatarReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    HideAndSeekSelectAvatarReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    HideAndSeekSelectAvatarReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    HideAndSeekSelectAvatarReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return HideAndSeekSelectAvatarReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    HideAndSeekSelectAvatarReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    HideAndSeekSelectAvatarReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    HideAndSeekSelectAvatarReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return HideAndSeekSelectAvatarReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return HideAndSeekSelectAvatarReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return HideAndSeekSelectAvatarReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 avatar_id = 8;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 8;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HideAndSeekSelectAvatarReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 avatar_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideAndSeekSelectAvatarRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HideAndSeekSelectAvatarRsp) */ {
 public:
  HideAndSeekSelectAvatarRsp();
  virtual ~HideAndSeekSelectAvatarRsp();

  HideAndSeekSelectAvatarRsp(const HideAndSeekSelectAvatarRsp& from);

  inline HideAndSeekSelectAvatarRsp& operator=(const HideAndSeekSelectAvatarRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideAndSeekSelectAvatarRsp(HideAndSeekSelectAvatarRsp&& from) noexcept
    : HideAndSeekSelectAvatarRsp() {
    *this = ::std::move(from);
  }

  inline HideAndSeekSelectAvatarRsp& operator=(HideAndSeekSelectAvatarRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HideAndSeekSelectAvatarRsp& default_instance();

  static inline const HideAndSeekSelectAvatarRsp* internal_default_instance() {
    return reinterpret_cast<const HideAndSeekSelectAvatarRsp*>(
               &_HideAndSeekSelectAvatarRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(HideAndSeekSelectAvatarRsp* other);
  friend void swap(HideAndSeekSelectAvatarRsp& a, HideAndSeekSelectAvatarRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideAndSeekSelectAvatarRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  HideAndSeekSelectAvatarRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HideAndSeekSelectAvatarRsp& from);
  void MergeFrom(const HideAndSeekSelectAvatarRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HideAndSeekSelectAvatarRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef HideAndSeekSelectAvatarRsp_CmdId CmdId;
  static const CmdId NONE =
    HideAndSeekSelectAvatarRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    HideAndSeekSelectAvatarRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    HideAndSeekSelectAvatarRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    HideAndSeekSelectAvatarRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return HideAndSeekSelectAvatarRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    HideAndSeekSelectAvatarRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    HideAndSeekSelectAvatarRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    HideAndSeekSelectAvatarRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return HideAndSeekSelectAvatarRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return HideAndSeekSelectAvatarRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return HideAndSeekSelectAvatarRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 2;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 2;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 avatar_id = 3;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 3;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HideAndSeekSelectAvatarRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 avatar_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideAndSeekSetReadyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HideAndSeekSetReadyReq) */ {
 public:
  HideAndSeekSetReadyReq();
  virtual ~HideAndSeekSetReadyReq();

  HideAndSeekSetReadyReq(const HideAndSeekSetReadyReq& from);

  inline HideAndSeekSetReadyReq& operator=(const HideAndSeekSetReadyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideAndSeekSetReadyReq(HideAndSeekSetReadyReq&& from) noexcept
    : HideAndSeekSetReadyReq() {
    *this = ::std::move(from);
  }

  inline HideAndSeekSetReadyReq& operator=(HideAndSeekSetReadyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HideAndSeekSetReadyReq& default_instance();

  static inline const HideAndSeekSetReadyReq* internal_default_instance() {
    return reinterpret_cast<const HideAndSeekSetReadyReq*>(
               &_HideAndSeekSetReadyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(HideAndSeekSetReadyReq* other);
  friend void swap(HideAndSeekSetReadyReq& a, HideAndSeekSetReadyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideAndSeekSetReadyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  HideAndSeekSetReadyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HideAndSeekSetReadyReq& from);
  void MergeFrom(const HideAndSeekSetReadyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HideAndSeekSetReadyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef HideAndSeekSetReadyReq_CmdId CmdId;
  static const CmdId NONE =
    HideAndSeekSetReadyReq_CmdId_NONE;
  static const CmdId CMD_ID =
    HideAndSeekSetReadyReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    HideAndSeekSetReadyReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    HideAndSeekSetReadyReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    HideAndSeekSetReadyReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return HideAndSeekSetReadyReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    HideAndSeekSetReadyReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    HideAndSeekSetReadyReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    HideAndSeekSetReadyReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return HideAndSeekSetReadyReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return HideAndSeekSetReadyReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return HideAndSeekSetReadyReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.HideAndSeekSetReadyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideAndSeekSetReadyRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HideAndSeekSetReadyRsp) */ {
 public:
  HideAndSeekSetReadyRsp();
  virtual ~HideAndSeekSetReadyRsp();

  HideAndSeekSetReadyRsp(const HideAndSeekSetReadyRsp& from);

  inline HideAndSeekSetReadyRsp& operator=(const HideAndSeekSetReadyRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideAndSeekSetReadyRsp(HideAndSeekSetReadyRsp&& from) noexcept
    : HideAndSeekSetReadyRsp() {
    *this = ::std::move(from);
  }

  inline HideAndSeekSetReadyRsp& operator=(HideAndSeekSetReadyRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HideAndSeekSetReadyRsp& default_instance();

  static inline const HideAndSeekSetReadyRsp* internal_default_instance() {
    return reinterpret_cast<const HideAndSeekSetReadyRsp*>(
               &_HideAndSeekSetReadyRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(HideAndSeekSetReadyRsp* other);
  friend void swap(HideAndSeekSetReadyRsp& a, HideAndSeekSetReadyRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideAndSeekSetReadyRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  HideAndSeekSetReadyRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HideAndSeekSetReadyRsp& from);
  void MergeFrom(const HideAndSeekSetReadyRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HideAndSeekSetReadyRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef HideAndSeekSetReadyRsp_CmdId CmdId;
  static const CmdId NONE =
    HideAndSeekSetReadyRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    HideAndSeekSetReadyRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    HideAndSeekSetReadyRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    HideAndSeekSetReadyRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return HideAndSeekSetReadyRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    HideAndSeekSetReadyRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    HideAndSeekSetReadyRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    HideAndSeekSetReadyRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return HideAndSeekSetReadyRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return HideAndSeekSetReadyRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return HideAndSeekSetReadyRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 11;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 11;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.HideAndSeekSetReadyRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideAndSeekSettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HideAndSeekSettleInfo) */ {
 public:
  HideAndSeekSettleInfo();
  virtual ~HideAndSeekSettleInfo();

  HideAndSeekSettleInfo(const HideAndSeekSettleInfo& from);

  inline HideAndSeekSettleInfo& operator=(const HideAndSeekSettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideAndSeekSettleInfo(HideAndSeekSettleInfo&& from) noexcept
    : HideAndSeekSettleInfo() {
    *this = ::std::move(from);
  }

  inline HideAndSeekSettleInfo& operator=(HideAndSeekSettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HideAndSeekSettleInfo& default_instance();

  static inline const HideAndSeekSettleInfo* internal_default_instance() {
    return reinterpret_cast<const HideAndSeekSettleInfo*>(
               &_HideAndSeekSettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(HideAndSeekSettleInfo* other);
  friend void swap(HideAndSeekSettleInfo& a, HideAndSeekSettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideAndSeekSettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  HideAndSeekSettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HideAndSeekSettleInfo& from);
  void MergeFrom(const HideAndSeekSettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HideAndSeekSettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ExhibitionDisplayInfo card_list = 8;
  int card_list_size() const;
  void clear_card_list();
  static const int kCardListFieldNumber = 8;
  const ::proto::ExhibitionDisplayInfo& card_list(int index) const;
  ::proto::ExhibitionDisplayInfo* mutable_card_list(int index);
  ::proto::ExhibitionDisplayInfo* add_card_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo >*
      mutable_card_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo >&
      card_list() const;

  // string nickname = 3;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // string online_id = 10;
  void clear_online_id();
  static const int kOnlineIdFieldNumber = 10;
  const ::std::string& online_id() const;
  void set_online_id(const ::std::string& value);
  #if LANG_CXX11
  void set_online_id(::std::string&& value);
  #endif
  void set_online_id(const char* value);
  void set_online_id(const char* value, size_t size);
  ::std::string* mutable_online_id();
  ::std::string* release_online_id();
  void set_allocated_online_id(::std::string* online_id);

  // .proto.ProfilePicture profile_picture = 1;
  bool has_profile_picture() const;
  void clear_profile_picture();
  static const int kProfilePictureFieldNumber = 1;
  const ::proto::ProfilePicture& profile_picture() const;
  ::proto::ProfilePicture* mutable_profile_picture();
  ::proto::ProfilePicture* release_profile_picture();
  void set_allocated_profile_picture(::proto::ProfilePicture* profile_picture);

  // uint32 uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 head_image = 4;
  void clear_head_image();
  static const int kHeadImageFieldNumber = 4;
  ::google::protobuf::uint32 head_image() const;
  void set_head_image(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HideAndSeekSettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo > card_list_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr online_id_;
  ::proto::ProfilePicture* profile_picture_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 head_image_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideAndSeekSettleNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HideAndSeekSettleNotify) */ {
 public:
  HideAndSeekSettleNotify();
  virtual ~HideAndSeekSettleNotify();

  HideAndSeekSettleNotify(const HideAndSeekSettleNotify& from);

  inline HideAndSeekSettleNotify& operator=(const HideAndSeekSettleNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideAndSeekSettleNotify(HideAndSeekSettleNotify&& from) noexcept
    : HideAndSeekSettleNotify() {
    *this = ::std::move(from);
  }

  inline HideAndSeekSettleNotify& operator=(HideAndSeekSettleNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HideAndSeekSettleNotify& default_instance();

  static inline const HideAndSeekSettleNotify* internal_default_instance() {
    return reinterpret_cast<const HideAndSeekSettleNotify*>(
               &_HideAndSeekSettleNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(HideAndSeekSettleNotify* other);
  friend void swap(HideAndSeekSettleNotify& a, HideAndSeekSettleNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideAndSeekSettleNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  HideAndSeekSettleNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HideAndSeekSettleNotify& from);
  void MergeFrom(const HideAndSeekSettleNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HideAndSeekSettleNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef HideAndSeekSettleNotify_CmdId CmdId;
  static const CmdId NONE =
    HideAndSeekSettleNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    HideAndSeekSettleNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    HideAndSeekSettleNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    HideAndSeekSettleNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return HideAndSeekSettleNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    HideAndSeekSettleNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    HideAndSeekSettleNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    HideAndSeekSettleNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return HideAndSeekSettleNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return HideAndSeekSettleNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return HideAndSeekSettleNotify_CmdId_Parse(name, value);
  }

  typedef HideAndSeekSettleNotify_SettleReason SettleReason;
  static const SettleReason SETTLE_REASON_TIME_OUT =
    HideAndSeekSettleNotify_SettleReason_SETTLE_REASON_TIME_OUT;
  static const SettleReason SETTLE_PLAY_END =
    HideAndSeekSettleNotify_SettleReason_SETTLE_PLAY_END;
  static const SettleReason SETTLE_PLAYER_QUIT =
    HideAndSeekSettleNotify_SettleReason_SETTLE_PLAYER_QUIT;
  static inline bool SettleReason_IsValid(int value) {
    return HideAndSeekSettleNotify_SettleReason_IsValid(value);
  }
  static const SettleReason SettleReason_MIN =
    HideAndSeekSettleNotify_SettleReason_SettleReason_MIN;
  static const SettleReason SettleReason_MAX =
    HideAndSeekSettleNotify_SettleReason_SettleReason_MAX;
  static const int SettleReason_ARRAYSIZE =
    HideAndSeekSettleNotify_SettleReason_SettleReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SettleReason_descriptor() {
    return HideAndSeekSettleNotify_SettleReason_descriptor();
  }
  static inline const ::std::string& SettleReason_Name(SettleReason value) {
    return HideAndSeekSettleNotify_SettleReason_Name(value);
  }
  static inline bool SettleReason_Parse(const ::std::string& name,
      SettleReason* value) {
    return HideAndSeekSettleNotify_SettleReason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.HideAndSeekSettleInfo settle_info_list = 8;
  int settle_info_list_size() const;
  void clear_settle_info_list();
  static const int kSettleInfoListFieldNumber = 8;
  const ::proto::HideAndSeekSettleInfo& settle_info_list(int index) const;
  ::proto::HideAndSeekSettleInfo* mutable_settle_info_list(int index);
  ::proto::HideAndSeekSettleInfo* add_settle_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HideAndSeekSettleInfo >*
      mutable_settle_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HideAndSeekSettleInfo >&
      settle_info_list() const;

  // repeated .proto.ExhibitionDisplayInfo score_list = 9;
  int score_list_size() const;
  void clear_score_list();
  static const int kScoreListFieldNumber = 9;
  const ::proto::ExhibitionDisplayInfo& score_list(int index) const;
  ::proto::ExhibitionDisplayInfo* mutable_score_list(int index);
  ::proto::ExhibitionDisplayInfo* add_score_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo >*
      mutable_score_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo >&
      score_list() const;

  // repeated uint32 winner_list = 15;
  int winner_list_size() const;
  void clear_winner_list();
  static const int kWinnerListFieldNumber = 15;
  ::google::protobuf::uint32 winner_list(int index) const;
  void set_winner_list(int index, ::google::protobuf::uint32 value);
  void add_winner_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      winner_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_winner_list();

  // uint32 cost_time = 2;
  void clear_cost_time();
  static const int kCostTimeFieldNumber = 2;
  ::google::protobuf::uint32 cost_time() const;
  void set_cost_time(::google::protobuf::uint32 value);

  // .proto.HideAndSeekSettleNotify.SettleReason reason = 4;
  void clear_reason();
  static const int kReasonFieldNumber = 4;
  ::proto::HideAndSeekSettleNotify_SettleReason reason() const;
  void set_reason(::proto::HideAndSeekSettleNotify_SettleReason value);

  // uint32 stage_type = 14;
  void clear_stage_type();
  static const int kStageTypeFieldNumber = 14;
  ::google::protobuf::uint32 stage_type() const;
  void set_stage_type(::google::protobuf::uint32 value);

  // bool is_record_score = 6;
  void clear_is_record_score();
  static const int kIsRecordScoreFieldNumber = 6;
  bool is_record_score() const;
  void set_is_record_score(bool value);

  // uint32 play_index = 13;
  void clear_play_index();
  static const int kPlayIndexFieldNumber = 13;
  ::google::protobuf::uint32 play_index() const;
  void set_play_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HideAndSeekSettleNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HideAndSeekSettleInfo > settle_info_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo > score_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > winner_list_;
  mutable int _winner_list_cached_byte_size_;
  ::google::protobuf::uint32 cost_time_;
  int reason_;
  ::google::protobuf::uint32 stage_type_;
  bool is_record_score_;
  ::google::protobuf::uint32 play_index_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideAndSeekPlayerReadyNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HideAndSeekPlayerReadyNotify) */ {
 public:
  HideAndSeekPlayerReadyNotify();
  virtual ~HideAndSeekPlayerReadyNotify();

  HideAndSeekPlayerReadyNotify(const HideAndSeekPlayerReadyNotify& from);

  inline HideAndSeekPlayerReadyNotify& operator=(const HideAndSeekPlayerReadyNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideAndSeekPlayerReadyNotify(HideAndSeekPlayerReadyNotify&& from) noexcept
    : HideAndSeekPlayerReadyNotify() {
    *this = ::std::move(from);
  }

  inline HideAndSeekPlayerReadyNotify& operator=(HideAndSeekPlayerReadyNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HideAndSeekPlayerReadyNotify& default_instance();

  static inline const HideAndSeekPlayerReadyNotify* internal_default_instance() {
    return reinterpret_cast<const HideAndSeekPlayerReadyNotify*>(
               &_HideAndSeekPlayerReadyNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(HideAndSeekPlayerReadyNotify* other);
  friend void swap(HideAndSeekPlayerReadyNotify& a, HideAndSeekPlayerReadyNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideAndSeekPlayerReadyNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  HideAndSeekPlayerReadyNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HideAndSeekPlayerReadyNotify& from);
  void MergeFrom(const HideAndSeekPlayerReadyNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HideAndSeekPlayerReadyNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef HideAndSeekPlayerReadyNotify_CmdId CmdId;
  static const CmdId NONE =
    HideAndSeekPlayerReadyNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    HideAndSeekPlayerReadyNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    HideAndSeekPlayerReadyNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    HideAndSeekPlayerReadyNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return HideAndSeekPlayerReadyNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    HideAndSeekPlayerReadyNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    HideAndSeekPlayerReadyNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    HideAndSeekPlayerReadyNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return HideAndSeekPlayerReadyNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return HideAndSeekPlayerReadyNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return HideAndSeekPlayerReadyNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 uid_list = 5;
  int uid_list_size() const;
  void clear_uid_list();
  static const int kUidListFieldNumber = 5;
  ::google::protobuf::uint32 uid_list(int index) const;
  void set_uid_list(int index, ::google::protobuf::uint32 value);
  void add_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uid_list();

  // @@protoc_insertion_point(class_scope:proto.HideAndSeekPlayerReadyNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uid_list_;
  mutable int _uid_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideAndSeekPlayerSetAvatarNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HideAndSeekPlayerSetAvatarNotify) */ {
 public:
  HideAndSeekPlayerSetAvatarNotify();
  virtual ~HideAndSeekPlayerSetAvatarNotify();

  HideAndSeekPlayerSetAvatarNotify(const HideAndSeekPlayerSetAvatarNotify& from);

  inline HideAndSeekPlayerSetAvatarNotify& operator=(const HideAndSeekPlayerSetAvatarNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideAndSeekPlayerSetAvatarNotify(HideAndSeekPlayerSetAvatarNotify&& from) noexcept
    : HideAndSeekPlayerSetAvatarNotify() {
    *this = ::std::move(from);
  }

  inline HideAndSeekPlayerSetAvatarNotify& operator=(HideAndSeekPlayerSetAvatarNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HideAndSeekPlayerSetAvatarNotify& default_instance();

  static inline const HideAndSeekPlayerSetAvatarNotify* internal_default_instance() {
    return reinterpret_cast<const HideAndSeekPlayerSetAvatarNotify*>(
               &_HideAndSeekPlayerSetAvatarNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(HideAndSeekPlayerSetAvatarNotify* other);
  friend void swap(HideAndSeekPlayerSetAvatarNotify& a, HideAndSeekPlayerSetAvatarNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideAndSeekPlayerSetAvatarNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  HideAndSeekPlayerSetAvatarNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HideAndSeekPlayerSetAvatarNotify& from);
  void MergeFrom(const HideAndSeekPlayerSetAvatarNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HideAndSeekPlayerSetAvatarNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef HideAndSeekPlayerSetAvatarNotify_CmdId CmdId;
  static const CmdId NONE =
    HideAndSeekPlayerSetAvatarNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    HideAndSeekPlayerSetAvatarNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    HideAndSeekPlayerSetAvatarNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    HideAndSeekPlayerSetAvatarNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return HideAndSeekPlayerSetAvatarNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    HideAndSeekPlayerSetAvatarNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    HideAndSeekPlayerSetAvatarNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    HideAndSeekPlayerSetAvatarNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return HideAndSeekPlayerSetAvatarNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return HideAndSeekPlayerSetAvatarNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return HideAndSeekPlayerSetAvatarNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 avatar_id = 2;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 2;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // uint32 uid = 5;
  void clear_uid();
  static const int kUidFieldNumber = 5;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 costume_id = 13;
  void clear_costume_id();
  static const int kCostumeIdFieldNumber = 13;
  ::google::protobuf::uint32 costume_id() const;
  void set_costume_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HideAndSeekPlayerSetAvatarNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 costume_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChessCardInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChessCardInfo) */ {
 public:
  ChessCardInfo();
  virtual ~ChessCardInfo();

  ChessCardInfo(const ChessCardInfo& from);

  inline ChessCardInfo& operator=(const ChessCardInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChessCardInfo(ChessCardInfo&& from) noexcept
    : ChessCardInfo() {
    *this = ::std::move(from);
  }

  inline ChessCardInfo& operator=(ChessCardInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChessCardInfo& default_instance();

  static inline const ChessCardInfo* internal_default_instance() {
    return reinterpret_cast<const ChessCardInfo*>(
               &_ChessCardInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(ChessCardInfo* other);
  friend void swap(ChessCardInfo& a, ChessCardInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChessCardInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ChessCardInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChessCardInfo& from);
  void MergeFrom(const ChessCardInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChessCardInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 card_id = 11;
  void clear_card_id();
  static const int kCardIdFieldNumber = 11;
  ::google::protobuf::uint32 card_id() const;
  void set_card_id(::google::protobuf::uint32 value);

  // uint32 effect_stack = 12;
  void clear_effect_stack();
  static const int kEffectStackFieldNumber = 12;
  ::google::protobuf::uint32 effect_stack() const;
  void set_effect_stack(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChessCardInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 card_id_;
  ::google::protobuf::uint32 effect_stack_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class InBattleChessInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleChessInfo) */ {
 public:
  InBattleChessInfo();
  virtual ~InBattleChessInfo();

  InBattleChessInfo(const InBattleChessInfo& from);

  inline InBattleChessInfo& operator=(const InBattleChessInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleChessInfo(InBattleChessInfo&& from) noexcept
    : InBattleChessInfo() {
    *this = ::std::move(from);
  }

  inline InBattleChessInfo& operator=(InBattleChessInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleChessInfo& default_instance();

  static inline const InBattleChessInfo* internal_default_instance() {
    return reinterpret_cast<const InBattleChessInfo*>(
               &_InBattleChessInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(InBattleChessInfo* other);
  friend void swap(InBattleChessInfo& a, InBattleChessInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleChessInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleChessInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleChessInfo& from);
  void MergeFrom(const InBattleChessInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleChessInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated uint32 ban_card_tag_list = 2;
  int ban_card_tag_list_size() const;
  void clear_ban_card_tag_list();
  static const int kBanCardTagListFieldNumber = 2;
  ::google::protobuf::uint32 ban_card_tag_list(int index) const;
  void set_ban_card_tag_list(int index, ::google::protobuf::uint32 value);
  void add_ban_card_tag_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ban_card_tag_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ban_card_tag_list();

  // map<uint32, .proto.ChessPlayerInfo> player_info_map = 8;
  int player_info_map_size() const;
  void clear_player_info_map();
  static const int kPlayerInfoMapFieldNumber = 8;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ChessPlayerInfo >&
      player_info_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ChessPlayerInfo >*
      mutable_player_info_map();

  // repeated .proto.ChessCardInfo selected_card_info_list = 9;
  int selected_card_info_list_size() const;
  void clear_selected_card_info_list();
  static const int kSelectedCardInfoListFieldNumber = 9;
  const ::proto::ChessCardInfo& selected_card_info_list(int index) const;
  ::proto::ChessCardInfo* mutable_selected_card_info_list(int index);
  ::proto::ChessCardInfo* add_selected_card_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ChessCardInfo >*
      mutable_selected_card_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ChessCardInfo >&
      selected_card_info_list() const;

  // .proto.ChessMysteryInfo mystery_info = 1;
  bool has_mystery_info() const;
  void clear_mystery_info();
  static const int kMysteryInfoFieldNumber = 1;
  const ::proto::ChessMysteryInfo& mystery_info() const;
  ::proto::ChessMysteryInfo* mutable_mystery_info();
  ::proto::ChessMysteryInfo* release_mystery_info();
  void set_allocated_mystery_info(::proto::ChessMysteryInfo* mystery_info);

  // uint32 round = 4;
  void clear_round();
  static const int kRoundFieldNumber = 4;
  ::google::protobuf::uint32 round() const;
  void set_round(::google::protobuf::uint32 value);

  // uint32 max_escapable_monsters = 6;
  void clear_max_escapable_monsters();
  static const int kMaxExcapableMonstersFieldNumber = 6;
  ::google::protobuf::uint32 max_escapable_monsters() const;
  void set_max_escapable_monsters(::google::protobuf::uint32 value);

  // uint32 left_monsters = 15;
  void clear_left_monsters();
  static const int kLeftMonstersFieldNumber = 15;
  ::google::protobuf::uint32 left_monsters() const;
  void set_left_monsters(::google::protobuf::uint32 value);

  // uint32 excaped_monsters = 12;
  void clear_excaped_monsters();
  static const int kExcapedMonstersFieldNumber = 12;
  ::google::protobuf::uint32 excaped_monsters() const;
  void set_excaped_monsters(::google::protobuf::uint32 value);

  // uint32 total_round = 14;
  void clear_total_round();
  static const int kTotalRoundFieldNumber = 14;
  ::google::protobuf::uint32 total_round() const;
  void set_total_round(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InBattleChessInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ban_card_tag_list_;
  mutable int _ban_card_tag_list_cached_byte_size_;
  public:
  class InBattleChessInfo_PlayerInfoMapEntry : public ::google::protobuf::internal::MapEntry<InBattleChessInfo_PlayerInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::ChessPlayerInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<InBattleChessInfo_PlayerInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::ChessPlayerInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    InBattleChessInfo_PlayerInfoMapEntry();
    InBattleChessInfo_PlayerInfoMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const InBattleChessInfo_PlayerInfoMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_InBattleChessInfo_PlayerInfoMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      InBattleChessInfo_PlayerInfoMapEntry,
      ::google::protobuf::uint32, ::proto::ChessPlayerInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > player_info_map_;
  private:
  ::google::protobuf::RepeatedPtrField< ::proto::ChessCardInfo > selected_card_info_list_;
  ::proto::ChessMysteryInfo* mystery_info_;
  ::google::protobuf::uint32 round_;
  ::google::protobuf::uint32 max_escapable_monsters_;
  ::google::protobuf::uint32 left_monsters_;
  ::google::protobuf::uint32 excaped_monsters_;
  ::google::protobuf::uint32 total_round_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InBattleChessSettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleChessSettleInfo) */ {
 public:
  InBattleChessSettleInfo();
  virtual ~InBattleChessSettleInfo();

  InBattleChessSettleInfo(const InBattleChessSettleInfo& from);

  inline InBattleChessSettleInfo& operator=(const InBattleChessSettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleChessSettleInfo(InBattleChessSettleInfo&& from) noexcept
    : InBattleChessSettleInfo() {
    *this = ::std::move(from);
  }

  inline InBattleChessSettleInfo& operator=(InBattleChessSettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleChessSettleInfo& default_instance();

  static inline const InBattleChessSettleInfo* internal_default_instance() {
    return reinterpret_cast<const InBattleChessSettleInfo*>(
               &_InBattleChessSettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(InBattleChessSettleInfo* other);
  friend void swap(InBattleChessSettleInfo& a, InBattleChessSettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleChessSettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleChessSettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleChessSettleInfo& from);
  void MergeFrom(const InBattleChessSettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleChessSettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ExhibitionDisplayInfo score_list = 1;
  int score_list_size() const;
  void clear_score_list();
  static const int kScoreListFieldNumber = 1;
  const ::proto::ExhibitionDisplayInfo& score_list(int index) const;
  ::proto::ExhibitionDisplayInfo* mutable_score_list(int index);
  ::proto::ExhibitionDisplayInfo* add_score_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo >*
      mutable_score_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo >&
      score_list() const;

  // uint32 old_chess_exp = 2;
  void clear_old_chess_exp();
  static const int kOldChessExpFieldNumber = 2;
  ::google::protobuf::uint32 old_chess_exp() const;
  void set_old_chess_exp(::google::protobuf::uint32 value);

  // bool is_success = 7;
  void clear_is_success();
  static const int kIsSuccessFieldNumber = 7;
  bool is_success() const;
  void set_is_success(bool value);

  // uint32 chess_level = 13;
  void clear_chess_level();
  static const int kChessLevelFieldNumber = 13;
  ::google::protobuf::uint32 chess_level() const;
  void set_chess_level(::google::protobuf::uint32 value);

  // uint32 old_chess_level = 10;
  void clear_old_chess_level();
  static const int kOldChessLevelFieldNumber = 10;
  ::google::protobuf::uint32 old_chess_level() const;
  void set_old_chess_level(::google::protobuf::uint32 value);

  // uint32 chess_exp = 11;
  void clear_chess_exp();
  static const int kChessExpFieldNumber = 11;
  ::google::protobuf::uint32 chess_exp() const;
  void set_chess_exp(::google::protobuf::uint32 value);

  // uint64 scene_time_ms = 14;
  void clear_scene_time_ms();
  static const int kSceneTimeMsFieldNumber = 14;
  ::google::protobuf::uint64 scene_time_ms() const;
  void set_scene_time_ms(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.InBattleChessSettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo > score_list_;
  ::google::protobuf::uint32 old_chess_exp_;
  bool is_success_;
  ::google::protobuf::uint32 chess_level_;
  ::google::protobuf::uint32 old_chess_level_;
  ::google::protobuf::uint32 chess_exp_;
  ::google::protobuf::uint64 scene_time_ms_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChessPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChessPlayerInfo) */ {
 public:
  ChessPlayerInfo();
  virtual ~ChessPlayerInfo();

  ChessPlayerInfo(const ChessPlayerInfo& from);

  inline ChessPlayerInfo& operator=(const ChessPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChessPlayerInfo(ChessPlayerInfo&& from) noexcept
    : ChessPlayerInfo() {
    *this = ::std::move(from);
  }

  inline ChessPlayerInfo& operator=(ChessPlayerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChessPlayerInfo& default_instance();

  static inline const ChessPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const ChessPlayerInfo*>(
               &_ChessPlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(ChessPlayerInfo* other);
  friend void swap(ChessPlayerInfo& a, ChessPlayerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChessPlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ChessPlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChessPlayerInfo& from);
  void MergeFrom(const ChessPlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChessPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ChessNormalCardInfo candidate_card_info_list = 3;
  int candidate_card_info_list_size() const;
  void clear_candidate_card_info_list();
  static const int kCandidateCardInfoListFieldNumber = 3;
  const ::proto::ChessNormalCardInfo& candidate_card_info_list(int index) const;
  ::proto::ChessNormalCardInfo* mutable_candidate_card_info_list(int index);
  ::proto::ChessNormalCardInfo* add_candidate_card_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ChessNormalCardInfo >*
      mutable_candidate_card_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ChessNormalCardInfo >&
      candidate_card_info_list() const;

  // uint32 uid = 5;
  void clear_uid();
  static const int kUidFieldNumber = 5;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 candidate_index = 6;
  void clear_candidate_index();
  static const int kCandidateIndexFieldNumber = 6;
  ::google::protobuf::uint32 candidate_index() const;
  void set_candidate_index(::google::protobuf::uint32 value);

  // uint32 refresh_cost = 7;
  void clear_refresh_cost();
  static const int kRefreshCostFieldNumber = 7;
  ::google::protobuf::uint32 refresh_cost() const;
  void set_refresh_cost(::google::protobuf::uint32 value);

  // uint32 free_refresh_limit = 10;
  void clear_free_refresh_limit();
  static const int kFreeRefreshLimitFieldNumber = 10;
  ::google::protobuf::uint32 free_refresh_limit() const;
  void set_free_refresh_limit(::google::protobuf::uint32 value);

  // uint32 building_points = 12;
  void clear_building_points();
  static const int kBuildingPointsFieldNumber = 12;
  ::google::protobuf::uint32 building_points() const;
  void set_building_points(::google::protobuf::uint32 value);

  // uint32 free_refresh_count = 13;
  void clear_free_refresh_count();
  static const int kFreeRefreshCountFieldNumber = 13;
  ::google::protobuf::uint32 free_refresh_count() const;
  void set_free_refresh_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChessPlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ChessNormalCardInfo > candidate_card_info_list_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 candidate_index_;
  ::google::protobuf::uint32 refresh_cost_;
  ::google::protobuf::uint32 free_refresh_limit_;
  ::google::protobuf::uint32 building_points_;
  ::google::protobuf::uint32 free_refresh_count_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChessMonsterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChessMonsterInfo) */ {
 public:
  ChessMonsterInfo();
  virtual ~ChessMonsterInfo();

  ChessMonsterInfo(const ChessMonsterInfo& from);

  inline ChessMonsterInfo& operator=(const ChessMonsterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChessMonsterInfo(ChessMonsterInfo&& from) noexcept
    : ChessMonsterInfo() {
    *this = ::std::move(from);
  }

  inline ChessMonsterInfo& operator=(ChessMonsterInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChessMonsterInfo& default_instance();

  static inline const ChessMonsterInfo* internal_default_instance() {
    return reinterpret_cast<const ChessMonsterInfo*>(
               &_ChessMonsterInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(ChessMonsterInfo* other);
  friend void swap(ChessMonsterInfo& a, ChessMonsterInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChessMonsterInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ChessMonsterInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChessMonsterInfo& from);
  void MergeFrom(const ChessMonsterInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChessMonsterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 affix_list = 13;
  int affix_list_size() const;
  void clear_affix_list();
  static const int kAffixListFieldNumber = 13;
  ::google::protobuf::uint32 affix_list(int index) const;
  void set_affix_list(int index, ::google::protobuf::uint32 value);
  void add_affix_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      affix_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_affix_list();

  // uint32 level = 2;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 monster_id = 12;
  void clear_monster_id();
  static const int kMonsterIdFieldNumber = 12;
  ::google::protobuf::uint32 monster_id() const;
  void set_monster_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChessMonsterInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > affix_list_;
  mutable int _affix_list_cached_byte_size_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 monster_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChessEntranceInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChessEntranceInfo) */ {
 public:
  ChessEntranceInfo();
  virtual ~ChessEntranceInfo();

  ChessEntranceInfo(const ChessEntranceInfo& from);

  inline ChessEntranceInfo& operator=(const ChessEntranceInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChessEntranceInfo(ChessEntranceInfo&& from) noexcept
    : ChessEntranceInfo() {
    *this = ::std::move(from);
  }

  inline ChessEntranceInfo& operator=(ChessEntranceInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChessEntranceInfo& default_instance();

  static inline const ChessEntranceInfo* internal_default_instance() {
    return reinterpret_cast<const ChessEntranceInfo*>(
               &_ChessEntranceInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(ChessEntranceInfo* other);
  friend void swap(ChessEntranceInfo& a, ChessEntranceInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChessEntranceInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ChessEntranceInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChessEntranceInfo& from);
  void MergeFrom(const ChessEntranceInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChessEntranceInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ChessMonsterInfo monster_info_list = 14;
  int monster_info_list_size() const;
  void clear_monster_info_list();
  static const int kMonsterInfoListFieldNumber = 14;
  const ::proto::ChessMonsterInfo& monster_info_list(int index) const;
  ::proto::ChessMonsterInfo* mutable_monster_info_list(int index);
  ::proto::ChessMonsterInfo* add_monster_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ChessMonsterInfo >*
      mutable_monster_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ChessMonsterInfo >&
      monster_info_list() const;

  // uint32 entrance_point_id = 8;
  void clear_entrance_point_id();
  static const int kEntrancePointIdFieldNumber = 8;
  ::google::protobuf::uint32 entrance_point_id() const;
  void set_entrance_point_id(::google::protobuf::uint32 value);

  // uint32 entrance_index = 15;
  void clear_entrance_index();
  static const int kEntranceIndexFieldNumber = 15;
  ::google::protobuf::uint32 entrance_index() const;
  void set_entrance_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChessEntranceInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ChessMonsterInfo > monster_info_list_;
  ::google::protobuf::uint32 entrance_point_id_;
  ::google::protobuf::uint32 entrance_index_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChessEntranceDetailInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChessEntranceDetailInfo) */ {
 public:
  ChessEntranceDetailInfo();
  virtual ~ChessEntranceDetailInfo();

  ChessEntranceDetailInfo(const ChessEntranceDetailInfo& from);

  inline ChessEntranceDetailInfo& operator=(const ChessEntranceDetailInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChessEntranceDetailInfo(ChessEntranceDetailInfo&& from) noexcept
    : ChessEntranceDetailInfo() {
    *this = ::std::move(from);
  }

  inline ChessEntranceDetailInfo& operator=(ChessEntranceDetailInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChessEntranceDetailInfo& default_instance();

  static inline const ChessEntranceDetailInfo* internal_default_instance() {
    return reinterpret_cast<const ChessEntranceDetailInfo*>(
               &_ChessEntranceDetailInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(ChessEntranceDetailInfo* other);
  friend void swap(ChessEntranceDetailInfo& a, ChessEntranceDetailInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChessEntranceDetailInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ChessEntranceDetailInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChessEntranceDetailInfo& from);
  void MergeFrom(const ChessEntranceDetailInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChessEntranceDetailInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ChessEntranceInfo info_list = 4;
  int info_list_size() const;
  void clear_info_list();
  static const int kInfoListFieldNumber = 4;
  const ::proto::ChessEntranceInfo& info_list(int index) const;
  ::proto::ChessEntranceInfo* mutable_info_list(int index);
  ::proto::ChessEntranceInfo* add_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ChessEntranceInfo >*
      mutable_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ChessEntranceInfo >&
      info_list() const;

  // @@protoc_insertion_point(class_scope:proto.ChessEntranceDetailInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ChessEntranceInfo > info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class ChessMysteryInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChessMysteryInfo) */ {
 public:
  ChessMysteryInfo();
  virtual ~ChessMysteryInfo();

  ChessMysteryInfo(const ChessMysteryInfo& from);

  inline ChessMysteryInfo& operator=(const ChessMysteryInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChessMysteryInfo(ChessMysteryInfo&& from) noexcept
    : ChessMysteryInfo() {
    *this = ::std::move(from);
  }

  inline ChessMysteryInfo& operator=(ChessMysteryInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChessMysteryInfo& default_instance();

  static inline const ChessMysteryInfo* internal_default_instance() {
    return reinterpret_cast<const ChessMysteryInfo*>(
               &_ChessMysteryInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(ChessMysteryInfo* other);
  friend void swap(ChessMysteryInfo& a, ChessMysteryInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChessMysteryInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ChessMysteryInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChessMysteryInfo& from);
  void MergeFrom(const ChessMysteryInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChessMysteryInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated uint32 exit_point_id_list = 3;
  int exit_point_id_list_size() const;
  void clear_exit_point_id_list();
  static const int kExitPointIdListFieldNumber = 3;
  ::google::protobuf::uint32 exit_point_id_list(int index) const;
  void set_exit_point_id_list(int index, ::google::protobuf::uint32 value);
  void add_exit_point_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      exit_point_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_exit_point_id_list();

  // map<uint32, .proto.ChessEntranceDetailInfo> detail_info_map = 5;
  int detail_info_map_size() const;
  void clear_detail_info_map();
  static const int kDetailInfoMapFieldNumber = 5;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ChessEntranceDetailInfo >&
      detail_info_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ChessEntranceDetailInfo >*
      mutable_detail_info_map();

  // map<uint32, uint32> entrance_point_map = 13;
  int entrance_point_map_size() const;
  void clear_entrance_point_map();
  static const int kEntrancePointMapFieldNumber = 13;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      entrance_point_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_entrance_point_map();

  // @@protoc_insertion_point(class_scope:proto.ChessMysteryInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > exit_point_id_list_;
  mutable int _exit_point_id_list_cached_byte_size_;
  public:
  class ChessMysteryInfo_DetailInfoMapEntry : public ::google::protobuf::internal::MapEntry<ChessMysteryInfo_DetailInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::ChessEntranceDetailInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ChessMysteryInfo_DetailInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::ChessEntranceDetailInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    ChessMysteryInfo_DetailInfoMapEntry();
    ChessMysteryInfo_DetailInfoMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ChessMysteryInfo_DetailInfoMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ChessMysteryInfo_DetailInfoMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      ChessMysteryInfo_DetailInfoMapEntry,
      ::google::protobuf::uint32, ::proto::ChessEntranceDetailInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > detail_info_map_;
  private:
  public:
  class ChessMysteryInfo_EntrancePointMapEntry : public ::google::protobuf::internal::MapEntry<ChessMysteryInfo_EntrancePointMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ChessMysteryInfo_EntrancePointMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    ChessMysteryInfo_EntrancePointMapEntry();
    ChessMysteryInfo_EntrancePointMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ChessMysteryInfo_EntrancePointMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ChessMysteryInfo_EntrancePointMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      ChessMysteryInfo_EntrancePointMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > entrance_point_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChessNormalCardInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChessNormalCardInfo) */ {
 public:
  ChessNormalCardInfo();
  virtual ~ChessNormalCardInfo();

  ChessNormalCardInfo(const ChessNormalCardInfo& from);

  inline ChessNormalCardInfo& operator=(const ChessNormalCardInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChessNormalCardInfo(ChessNormalCardInfo&& from) noexcept
    : ChessNormalCardInfo() {
    *this = ::std::move(from);
  }

  inline ChessNormalCardInfo& operator=(ChessNormalCardInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChessNormalCardInfo& default_instance();

  static inline const ChessNormalCardInfo* internal_default_instance() {
    return reinterpret_cast<const ChessNormalCardInfo*>(
               &_ChessNormalCardInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(ChessNormalCardInfo* other);
  friend void swap(ChessNormalCardInfo& a, ChessNormalCardInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChessNormalCardInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ChessNormalCardInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChessNormalCardInfo& from);
  void MergeFrom(const ChessNormalCardInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChessNormalCardInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 card_id = 2;
  void clear_card_id();
  static const int kCardIdFieldNumber = 2;
  ::google::protobuf::uint32 card_id() const;
  void set_card_id(::google::protobuf::uint32 value);

  // bool is_attach_curse = 6;
  void clear_is_attach_curse();
  static const int kIsAttachCurseFieldNumber = 6;
  bool is_attach_curse() const;
  void set_is_attach_curse(bool value);

  // uint32 cost_points = 15;
  void clear_cost_points();
  static const int kCostPointsFieldNumber = 15;
  ::google::protobuf::uint32 cost_points() const;
  void set_cost_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChessNormalCardInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 card_id_;
  bool is_attach_curse_;
  ::google::protobuf::uint32 cost_points_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChessPickCardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChessPickCardReq) */ {
 public:
  ChessPickCardReq();
  virtual ~ChessPickCardReq();

  ChessPickCardReq(const ChessPickCardReq& from);

  inline ChessPickCardReq& operator=(const ChessPickCardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChessPickCardReq(ChessPickCardReq&& from) noexcept
    : ChessPickCardReq() {
    *this = ::std::move(from);
  }

  inline ChessPickCardReq& operator=(ChessPickCardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChessPickCardReq& default_instance();

  static inline const ChessPickCardReq* internal_default_instance() {
    return reinterpret_cast<const ChessPickCardReq*>(
               &_ChessPickCardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(ChessPickCardReq* other);
  friend void swap(ChessPickCardReq& a, ChessPickCardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChessPickCardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ChessPickCardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChessPickCardReq& from);
  void MergeFrom(const ChessPickCardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChessPickCardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChessPickCardReq_CmdId CmdId;
  static const CmdId NONE =
    ChessPickCardReq_CmdId_NONE;
  static const CmdId CMD_ID =
    ChessPickCardReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ChessPickCardReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ChessPickCardReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ChessPickCardReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ChessPickCardReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ChessPickCardReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ChessPickCardReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ChessPickCardReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ChessPickCardReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ChessPickCardReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ChessPickCardReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 card_id = 1;
  void clear_card_id();
  static const int kCardIdFieldNumber = 1;
  ::google::protobuf::uint32 card_id() const;
  void set_card_id(::google::protobuf::uint32 value);

  // uint32 card_index = 4;
  void clear_card_index();
  static const int kCardIndexFieldNumber = 4;
  ::google::protobuf::uint32 card_index() const;
  void set_card_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChessPickCardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 card_id_;
  ::google::protobuf::uint32 card_index_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChessPickCardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChessPickCardRsp) */ {
 public:
  ChessPickCardRsp();
  virtual ~ChessPickCardRsp();

  ChessPickCardRsp(const ChessPickCardRsp& from);

  inline ChessPickCardRsp& operator=(const ChessPickCardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChessPickCardRsp(ChessPickCardRsp&& from) noexcept
    : ChessPickCardRsp() {
    *this = ::std::move(from);
  }

  inline ChessPickCardRsp& operator=(ChessPickCardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChessPickCardRsp& default_instance();

  static inline const ChessPickCardRsp* internal_default_instance() {
    return reinterpret_cast<const ChessPickCardRsp*>(
               &_ChessPickCardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(ChessPickCardRsp* other);
  friend void swap(ChessPickCardRsp& a, ChessPickCardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChessPickCardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ChessPickCardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChessPickCardRsp& from);
  void MergeFrom(const ChessPickCardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChessPickCardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChessPickCardRsp_CmdId CmdId;
  static const CmdId NONE =
    ChessPickCardRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    ChessPickCardRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ChessPickCardRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ChessPickCardRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ChessPickCardRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ChessPickCardRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ChessPickCardRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ChessPickCardRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ChessPickCardRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ChessPickCardRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ChessPickCardRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 card_id = 1;
  void clear_card_id();
  static const int kCardIdFieldNumber = 1;
  ::google::protobuf::uint32 card_id() const;
  void set_card_id(::google::protobuf::uint32 value);

  // int32 retcode = 4;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 card_index = 11;
  void clear_card_index();
  static const int kCardIndexFieldNumber = 11;
  ::google::protobuf::uint32 card_index() const;
  void set_card_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChessPickCardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 card_id_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 card_index_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChessPickCardNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChessPickCardNotify) */ {
 public:
  ChessPickCardNotify();
  virtual ~ChessPickCardNotify();

  ChessPickCardNotify(const ChessPickCardNotify& from);

  inline ChessPickCardNotify& operator=(const ChessPickCardNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChessPickCardNotify(ChessPickCardNotify&& from) noexcept
    : ChessPickCardNotify() {
    *this = ::std::move(from);
  }

  inline ChessPickCardNotify& operator=(ChessPickCardNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChessPickCardNotify& default_instance();

  static inline const ChessPickCardNotify* internal_default_instance() {
    return reinterpret_cast<const ChessPickCardNotify*>(
               &_ChessPickCardNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(ChessPickCardNotify* other);
  friend void swap(ChessPickCardNotify& a, ChessPickCardNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChessPickCardNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ChessPickCardNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChessPickCardNotify& from);
  void MergeFrom(const ChessPickCardNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChessPickCardNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChessPickCardNotify_CmdId CmdId;
  static const CmdId NONE =
    ChessPickCardNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ChessPickCardNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ChessPickCardNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ChessPickCardNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ChessPickCardNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ChessPickCardNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ChessPickCardNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ChessPickCardNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ChessPickCardNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ChessPickCardNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ChessPickCardNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.ChessNormalCardInfo normal_card_info = 1;
  bool has_normal_card_info() const;
  void clear_normal_card_info();
  static const int kNormalCardInfoFieldNumber = 1;
  const ::proto::ChessNormalCardInfo& normal_card_info() const;
  ::proto::ChessNormalCardInfo* mutable_normal_card_info();
  ::proto::ChessNormalCardInfo* release_normal_card_info();
  void set_allocated_normal_card_info(::proto::ChessNormalCardInfo* normal_card_info);

  // uint32 curse_card_id = 13;
  void clear_curse_card_id();
  static const int kCurseCardIdFieldNumber = 13;
  ::google::protobuf::uint32 curse_card_id() const;
  void set_curse_card_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChessPickCardNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ChessNormalCardInfo* normal_card_info_;
  ::google::protobuf::uint32 curse_card_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChessManualRefreshCardsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChessManualRefreshCardsReq) */ {
 public:
  ChessManualRefreshCardsReq();
  virtual ~ChessManualRefreshCardsReq();

  ChessManualRefreshCardsReq(const ChessManualRefreshCardsReq& from);

  inline ChessManualRefreshCardsReq& operator=(const ChessManualRefreshCardsReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChessManualRefreshCardsReq(ChessManualRefreshCardsReq&& from) noexcept
    : ChessManualRefreshCardsReq() {
    *this = ::std::move(from);
  }

  inline ChessManualRefreshCardsReq& operator=(ChessManualRefreshCardsReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChessManualRefreshCardsReq& default_instance();

  static inline const ChessManualRefreshCardsReq* internal_default_instance() {
    return reinterpret_cast<const ChessManualRefreshCardsReq*>(
               &_ChessManualRefreshCardsReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(ChessManualRefreshCardsReq* other);
  friend void swap(ChessManualRefreshCardsReq& a, ChessManualRefreshCardsReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChessManualRefreshCardsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ChessManualRefreshCardsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChessManualRefreshCardsReq& from);
  void MergeFrom(const ChessManualRefreshCardsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChessManualRefreshCardsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChessManualRefreshCardsReq_CmdId CmdId;
  static const CmdId NONE =
    ChessManualRefreshCardsReq_CmdId_NONE;
  static const CmdId CMD_ID =
    ChessManualRefreshCardsReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ChessManualRefreshCardsReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ChessManualRefreshCardsReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ChessManualRefreshCardsReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ChessManualRefreshCardsReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ChessManualRefreshCardsReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ChessManualRefreshCardsReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ChessManualRefreshCardsReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ChessManualRefreshCardsReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ChessManualRefreshCardsReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ChessManualRefreshCardsReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.ChessManualRefreshCardsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChessManualRefreshCardsRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChessManualRefreshCardsRsp) */ {
 public:
  ChessManualRefreshCardsRsp();
  virtual ~ChessManualRefreshCardsRsp();

  ChessManualRefreshCardsRsp(const ChessManualRefreshCardsRsp& from);

  inline ChessManualRefreshCardsRsp& operator=(const ChessManualRefreshCardsRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChessManualRefreshCardsRsp(ChessManualRefreshCardsRsp&& from) noexcept
    : ChessManualRefreshCardsRsp() {
    *this = ::std::move(from);
  }

  inline ChessManualRefreshCardsRsp& operator=(ChessManualRefreshCardsRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChessManualRefreshCardsRsp& default_instance();

  static inline const ChessManualRefreshCardsRsp* internal_default_instance() {
    return reinterpret_cast<const ChessManualRefreshCardsRsp*>(
               &_ChessManualRefreshCardsRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(ChessManualRefreshCardsRsp* other);
  friend void swap(ChessManualRefreshCardsRsp& a, ChessManualRefreshCardsRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChessManualRefreshCardsRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ChessManualRefreshCardsRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChessManualRefreshCardsRsp& from);
  void MergeFrom(const ChessManualRefreshCardsRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChessManualRefreshCardsRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChessManualRefreshCardsRsp_CmdId CmdId;
  static const CmdId NONE =
    ChessManualRefreshCardsRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    ChessManualRefreshCardsRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ChessManualRefreshCardsRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ChessManualRefreshCardsRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ChessManualRefreshCardsRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ChessManualRefreshCardsRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ChessManualRefreshCardsRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ChessManualRefreshCardsRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ChessManualRefreshCardsRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ChessManualRefreshCardsRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ChessManualRefreshCardsRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 12;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 12;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ChessManualRefreshCardsRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChessPlayerInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChessPlayerInfoNotify) */ {
 public:
  ChessPlayerInfoNotify();
  virtual ~ChessPlayerInfoNotify();

  ChessPlayerInfoNotify(const ChessPlayerInfoNotify& from);

  inline ChessPlayerInfoNotify& operator=(const ChessPlayerInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChessPlayerInfoNotify(ChessPlayerInfoNotify&& from) noexcept
    : ChessPlayerInfoNotify() {
    *this = ::std::move(from);
  }

  inline ChessPlayerInfoNotify& operator=(ChessPlayerInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChessPlayerInfoNotify& default_instance();

  static inline const ChessPlayerInfoNotify* internal_default_instance() {
    return reinterpret_cast<const ChessPlayerInfoNotify*>(
               &_ChessPlayerInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(ChessPlayerInfoNotify* other);
  friend void swap(ChessPlayerInfoNotify& a, ChessPlayerInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChessPlayerInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ChessPlayerInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChessPlayerInfoNotify& from);
  void MergeFrom(const ChessPlayerInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChessPlayerInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChessPlayerInfoNotify_CmdId CmdId;
  static const CmdId NONE =
    ChessPlayerInfoNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ChessPlayerInfoNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ChessPlayerInfoNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ChessPlayerInfoNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ChessPlayerInfoNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ChessPlayerInfoNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ChessPlayerInfoNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ChessPlayerInfoNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ChessPlayerInfoNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ChessPlayerInfoNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ChessPlayerInfoNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.ChessPlayerInfo player_info = 10;
  bool has_player_info() const;
  void clear_player_info();
  static const int kPlayerInfoFieldNumber = 10;
  const ::proto::ChessPlayerInfo& player_info() const;
  ::proto::ChessPlayerInfo* mutable_player_info();
  ::proto::ChessPlayerInfo* release_player_info();
  void set_allocated_player_info(::proto::ChessPlayerInfo* player_info);

  // @@protoc_insertion_point(class_scope:proto.ChessPlayerInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ChessPlayerInfo* player_info_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChessLeftMonstersNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChessLeftMonstersNotify) */ {
 public:
  ChessLeftMonstersNotify();
  virtual ~ChessLeftMonstersNotify();

  ChessLeftMonstersNotify(const ChessLeftMonstersNotify& from);

  inline ChessLeftMonstersNotify& operator=(const ChessLeftMonstersNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChessLeftMonstersNotify(ChessLeftMonstersNotify&& from) noexcept
    : ChessLeftMonstersNotify() {
    *this = ::std::move(from);
  }

  inline ChessLeftMonstersNotify& operator=(ChessLeftMonstersNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChessLeftMonstersNotify& default_instance();

  static inline const ChessLeftMonstersNotify* internal_default_instance() {
    return reinterpret_cast<const ChessLeftMonstersNotify*>(
               &_ChessLeftMonstersNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(ChessLeftMonstersNotify* other);
  friend void swap(ChessLeftMonstersNotify& a, ChessLeftMonstersNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChessLeftMonstersNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ChessLeftMonstersNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChessLeftMonstersNotify& from);
  void MergeFrom(const ChessLeftMonstersNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChessLeftMonstersNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChessLeftMonstersNotify_CmdId CmdId;
  static const CmdId NONE =
    ChessLeftMonstersNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ChessLeftMonstersNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ChessLeftMonstersNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ChessLeftMonstersNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ChessLeftMonstersNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ChessLeftMonstersNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ChessLeftMonstersNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ChessLeftMonstersNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ChessLeftMonstersNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ChessLeftMonstersNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ChessLeftMonstersNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 left_monsters = 6;
  void clear_left_monsters();
  static const int kLeftMonstersFieldNumber = 6;
  ::google::protobuf::uint32 left_monsters() const;
  void set_left_monsters(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChessLeftMonstersNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 left_monsters_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChessEscapedMonstersNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChessEscapedMonstersNotify) */ {
 public:
  ChessEscapedMonstersNotify();
  virtual ~ChessEscapedMonstersNotify();

  ChessEscapedMonstersNotify(const ChessEscapedMonstersNotify& from);

  inline ChessEscapedMonstersNotify& operator=(const ChessEscapedMonstersNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChessEscapedMonstersNotify(ChessEscapedMonstersNotify&& from) noexcept
    : ChessEscapedMonstersNotify() {
    *this = ::std::move(from);
  }

  inline ChessEscapedMonstersNotify& operator=(ChessEscapedMonstersNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChessEscapedMonstersNotify& default_instance();

  static inline const ChessEscapedMonstersNotify* internal_default_instance() {
    return reinterpret_cast<const ChessEscapedMonstersNotify*>(
               &_ChessEscapedMonstersNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(ChessEscapedMonstersNotify* other);
  friend void swap(ChessEscapedMonstersNotify& a, ChessEscapedMonstersNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChessEscapedMonstersNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ChessEscapedMonstersNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChessEscapedMonstersNotify& from);
  void MergeFrom(const ChessEscapedMonstersNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChessEscapedMonstersNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChessEscapedMonstersNotify_CmdId CmdId;
  static const CmdId NONE =
    ChessEscapedMonstersNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ChessEscapedMonstersNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ChessEscapedMonstersNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ChessEscapedMonstersNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ChessEscapedMonstersNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ChessEscapedMonstersNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ChessEscapedMonstersNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ChessEscapedMonstersNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ChessEscapedMonstersNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ChessEscapedMonstersNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ChessEscapedMonstersNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 excaped_monsters = 14;
  void clear_excaped_monsters();
  static const int kExcapedMonstersFieldNumber = 14;
  ::google::protobuf::uint32 excaped_monsters() const;
  void set_excaped_monsters(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChessEscapedMonstersNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 excaped_monsters_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChessSelectedCardsNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChessSelectedCardsNotify) */ {
 public:
  ChessSelectedCardsNotify();
  virtual ~ChessSelectedCardsNotify();

  ChessSelectedCardsNotify(const ChessSelectedCardsNotify& from);

  inline ChessSelectedCardsNotify& operator=(const ChessSelectedCardsNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChessSelectedCardsNotify(ChessSelectedCardsNotify&& from) noexcept
    : ChessSelectedCardsNotify() {
    *this = ::std::move(from);
  }

  inline ChessSelectedCardsNotify& operator=(ChessSelectedCardsNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChessSelectedCardsNotify& default_instance();

  static inline const ChessSelectedCardsNotify* internal_default_instance() {
    return reinterpret_cast<const ChessSelectedCardsNotify*>(
               &_ChessSelectedCardsNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(ChessSelectedCardsNotify* other);
  friend void swap(ChessSelectedCardsNotify& a, ChessSelectedCardsNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChessSelectedCardsNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ChessSelectedCardsNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChessSelectedCardsNotify& from);
  void MergeFrom(const ChessSelectedCardsNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChessSelectedCardsNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChessSelectedCardsNotify_CmdId CmdId;
  static const CmdId NONE =
    ChessSelectedCardsNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ChessSelectedCardsNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ChessSelectedCardsNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ChessSelectedCardsNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ChessSelectedCardsNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ChessSelectedCardsNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ChessSelectedCardsNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ChessSelectedCardsNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ChessSelectedCardsNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ChessSelectedCardsNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ChessSelectedCardsNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ChessCardInfo selected_card_info_list = 4;
  int selected_card_info_list_size() const;
  void clear_selected_card_info_list();
  static const int kSelectedCardInfoListFieldNumber = 4;
  const ::proto::ChessCardInfo& selected_card_info_list(int index) const;
  ::proto::ChessCardInfo* mutable_selected_card_info_list(int index);
  ::proto::ChessCardInfo* add_selected_card_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ChessCardInfo >*
      mutable_selected_card_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ChessCardInfo >&
      selected_card_info_list() const;

  // @@protoc_insertion_point(class_scope:proto.ChessSelectedCardsNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ChessCardInfo > selected_card_info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GlobalBuildingInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GlobalBuildingInfoNotify) */ {
 public:
  GlobalBuildingInfoNotify();
  virtual ~GlobalBuildingInfoNotify();

  GlobalBuildingInfoNotify(const GlobalBuildingInfoNotify& from);

  inline GlobalBuildingInfoNotify& operator=(const GlobalBuildingInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GlobalBuildingInfoNotify(GlobalBuildingInfoNotify&& from) noexcept
    : GlobalBuildingInfoNotify() {
    *this = ::std::move(from);
  }

  inline GlobalBuildingInfoNotify& operator=(GlobalBuildingInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalBuildingInfoNotify& default_instance();

  static inline const GlobalBuildingInfoNotify* internal_default_instance() {
    return reinterpret_cast<const GlobalBuildingInfoNotify*>(
               &_GlobalBuildingInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(GlobalBuildingInfoNotify* other);
  friend void swap(GlobalBuildingInfoNotify& a, GlobalBuildingInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GlobalBuildingInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GlobalBuildingInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GlobalBuildingInfoNotify& from);
  void MergeFrom(const GlobalBuildingInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GlobalBuildingInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GlobalBuildingInfoNotify_CmdId CmdId;
  static const CmdId NONE =
    GlobalBuildingInfoNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    GlobalBuildingInfoNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GlobalBuildingInfoNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GlobalBuildingInfoNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GlobalBuildingInfoNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GlobalBuildingInfoNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GlobalBuildingInfoNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GlobalBuildingInfoNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GlobalBuildingInfoNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GlobalBuildingInfoNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GlobalBuildingInfoNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.BuildingInfo building_list = 3;
  int building_list_size() const;
  void clear_building_list();
  static const int kBuildingListFieldNumber = 3;
  const ::proto::BuildingInfo& building_list(int index) const;
  ::proto::BuildingInfo* mutable_building_list(int index);
  ::proto::BuildingInfo* add_building_list();
  ::google::protobuf::RepeatedPtrField< ::proto::BuildingInfo >*
      mutable_building_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::BuildingInfo >&
      building_list() const;

  // uint32 current_num = 5;
  void clear_current_num();
  static const int kCurrentNumFieldNumber = 5;
  ::google::protobuf::uint32 current_num() const;
  void set_current_num(::google::protobuf::uint32 value);

  // uint32 max_num = 13;
  void clear_max_num();
  static const int kMaxNumFieldNumber = 13;
  ::google::protobuf::uint32 max_num() const;
  void set_max_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GlobalBuildingInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::BuildingInfo > building_list_;
  ::google::protobuf::uint32 current_num_;
  ::google::protobuf::uint32 max_num_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InBattleIrodoriChessInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleIrodoriChessInfo) */ {
 public:
  InBattleIrodoriChessInfo();
  virtual ~InBattleIrodoriChessInfo();

  InBattleIrodoriChessInfo(const InBattleIrodoriChessInfo& from);

  inline InBattleIrodoriChessInfo& operator=(const InBattleIrodoriChessInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleIrodoriChessInfo(InBattleIrodoriChessInfo&& from) noexcept
    : InBattleIrodoriChessInfo() {
    *this = ::std::move(from);
  }

  inline InBattleIrodoriChessInfo& operator=(InBattleIrodoriChessInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleIrodoriChessInfo& default_instance();

  static inline const InBattleIrodoriChessInfo* internal_default_instance() {
    return reinterpret_cast<const InBattleIrodoriChessInfo*>(
               &_InBattleIrodoriChessInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(InBattleIrodoriChessInfo* other);
  friend void swap(InBattleIrodoriChessInfo& a, InBattleIrodoriChessInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleIrodoriChessInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleIrodoriChessInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleIrodoriChessInfo& from);
  void MergeFrom(const InBattleIrodoriChessInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleIrodoriChessInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 selected_card_id_list = 13;
  int selected_card_id_list_size() const;
  void clear_selected_card_id_list();
  static const int kSelectedCardIdListFieldNumber = 13;
  ::google::protobuf::uint32 selected_card_id_list(int index) const;
  void set_selected_card_id_list(int index, ::google::protobuf::uint32 value);
  void add_selected_card_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      selected_card_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_selected_card_id_list();

  // .proto.IrodoriChessMysteryInfo mystery_info = 3;
  bool has_mystery_info() const;
  void clear_mystery_info();
  static const int kMysteryInfoFieldNumber = 3;
  const ::proto::IrodoriChessMysteryInfo& mystery_info() const;
  ::proto::IrodoriChessMysteryInfo* mutable_mystery_info();
  ::proto::IrodoriChessMysteryInfo* release_mystery_info();
  void set_allocated_mystery_info(::proto::IrodoriChessMysteryInfo* mystery_info);

  // uint32 settle_score = 4;
  void clear_settle_score();
  static const int kSettleScoreFieldNumber = 4;
  ::google::protobuf::uint32 settle_score() const;
  void set_settle_score(::google::protobuf::uint32 value);

  // uint32 building_points = 7;
  void clear_building_points();
  static const int kBuildingPointsFieldNumber = 7;
  ::google::protobuf::uint32 building_points() const;
  void set_building_points(::google::protobuf::uint32 value);

  // uint32 left_monsters = 12;
  void clear_left_monsters();
  static const int kLeftMonstersFieldNumber = 12;
  ::google::protobuf::uint32 left_monsters() const;
  void set_left_monsters(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InBattleIrodoriChessInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > selected_card_id_list_;
  mutable int _selected_card_id_list_cached_byte_size_;
  ::proto::IrodoriChessMysteryInfo* mystery_info_;
  ::google::protobuf::uint32 settle_score_;
  ::google::protobuf::uint32 building_points_;
  ::google::protobuf::uint32 left_monsters_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IrodoriChessMonsterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.IrodoriChessMonsterInfo) */ {
 public:
  IrodoriChessMonsterInfo();
  virtual ~IrodoriChessMonsterInfo();

  IrodoriChessMonsterInfo(const IrodoriChessMonsterInfo& from);

  inline IrodoriChessMonsterInfo& operator=(const IrodoriChessMonsterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IrodoriChessMonsterInfo(IrodoriChessMonsterInfo&& from) noexcept
    : IrodoriChessMonsterInfo() {
    *this = ::std::move(from);
  }

  inline IrodoriChessMonsterInfo& operator=(IrodoriChessMonsterInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IrodoriChessMonsterInfo& default_instance();

  static inline const IrodoriChessMonsterInfo* internal_default_instance() {
    return reinterpret_cast<const IrodoriChessMonsterInfo*>(
               &_IrodoriChessMonsterInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(IrodoriChessMonsterInfo* other);
  friend void swap(IrodoriChessMonsterInfo& a, IrodoriChessMonsterInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IrodoriChessMonsterInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  IrodoriChessMonsterInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IrodoriChessMonsterInfo& from);
  void MergeFrom(const IrodoriChessMonsterInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IrodoriChessMonsterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 affix_list = 11;
  int affix_list_size() const;
  void clear_affix_list();
  static const int kAffixListFieldNumber = 11;
  ::google::protobuf::uint32 affix_list(int index) const;
  void set_affix_list(int index, ::google::protobuf::uint32 value);
  void add_affix_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      affix_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_affix_list();

  // uint32 monster_id = 14;
  void clear_monster_id();
  static const int kMonsterIdFieldNumber = 14;
  ::google::protobuf::uint32 monster_id() const;
  void set_monster_id(::google::protobuf::uint32 value);

  // uint32 grant_points = 6;
  void clear_grant_points();
  static const int kGrantPointsFieldNumber = 6;
  ::google::protobuf::uint32 grant_points() const;
  void set_grant_points(::google::protobuf::uint32 value);

  // uint32 level = 13;
  void clear_level();
  static const int kLevelFieldNumber = 13;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.IrodoriChessMonsterInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > affix_list_;
  mutable int _affix_list_cached_byte_size_;
  ::google::protobuf::uint32 monster_id_;
  ::google::protobuf::uint32 grant_points_;
  ::google::protobuf::uint32 level_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IrodoriChessEntranceInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.IrodoriChessEntranceInfo) */ {
 public:
  IrodoriChessEntranceInfo();
  virtual ~IrodoriChessEntranceInfo();

  IrodoriChessEntranceInfo(const IrodoriChessEntranceInfo& from);

  inline IrodoriChessEntranceInfo& operator=(const IrodoriChessEntranceInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IrodoriChessEntranceInfo(IrodoriChessEntranceInfo&& from) noexcept
    : IrodoriChessEntranceInfo() {
    *this = ::std::move(from);
  }

  inline IrodoriChessEntranceInfo& operator=(IrodoriChessEntranceInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IrodoriChessEntranceInfo& default_instance();

  static inline const IrodoriChessEntranceInfo* internal_default_instance() {
    return reinterpret_cast<const IrodoriChessEntranceInfo*>(
               &_IrodoriChessEntranceInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(IrodoriChessEntranceInfo* other);
  friend void swap(IrodoriChessEntranceInfo& a, IrodoriChessEntranceInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IrodoriChessEntranceInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  IrodoriChessEntranceInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IrodoriChessEntranceInfo& from);
  void MergeFrom(const IrodoriChessEntranceInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IrodoriChessEntranceInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.IrodoriChessMonsterInfo monster_info_list = 6;
  int monster_info_list_size() const;
  void clear_monster_info_list();
  static const int kMonsterInfoListFieldNumber = 6;
  const ::proto::IrodoriChessMonsterInfo& monster_info_list(int index) const;
  ::proto::IrodoriChessMonsterInfo* mutable_monster_info_list(int index);
  ::proto::IrodoriChessMonsterInfo* add_monster_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::IrodoriChessMonsterInfo >*
      mutable_monster_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::IrodoriChessMonsterInfo >&
      monster_info_list() const;

  // uint32 entrance_point_id = 4;
  void clear_entrance_point_id();
  static const int kEntrancePointIdFieldNumber = 4;
  ::google::protobuf::uint32 entrance_point_id() const;
  void set_entrance_point_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.IrodoriChessEntranceInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::IrodoriChessMonsterInfo > monster_info_list_;
  ::google::protobuf::uint32 entrance_point_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IrodoriChessEntranceDetailInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.IrodoriChessEntranceDetailInfo) */ {
 public:
  IrodoriChessEntranceDetailInfo();
  virtual ~IrodoriChessEntranceDetailInfo();

  IrodoriChessEntranceDetailInfo(const IrodoriChessEntranceDetailInfo& from);

  inline IrodoriChessEntranceDetailInfo& operator=(const IrodoriChessEntranceDetailInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IrodoriChessEntranceDetailInfo(IrodoriChessEntranceDetailInfo&& from) noexcept
    : IrodoriChessEntranceDetailInfo() {
    *this = ::std::move(from);
  }

  inline IrodoriChessEntranceDetailInfo& operator=(IrodoriChessEntranceDetailInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IrodoriChessEntranceDetailInfo& default_instance();

  static inline const IrodoriChessEntranceDetailInfo* internal_default_instance() {
    return reinterpret_cast<const IrodoriChessEntranceDetailInfo*>(
               &_IrodoriChessEntranceDetailInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(IrodoriChessEntranceDetailInfo* other);
  friend void swap(IrodoriChessEntranceDetailInfo& a, IrodoriChessEntranceDetailInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IrodoriChessEntranceDetailInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  IrodoriChessEntranceDetailInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IrodoriChessEntranceDetailInfo& from);
  void MergeFrom(const IrodoriChessEntranceDetailInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IrodoriChessEntranceDetailInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.IrodoriChessEntranceInfo info_list = 15;
  int info_list_size() const;
  void clear_info_list();
  static const int kInfoListFieldNumber = 15;
  const ::proto::IrodoriChessEntranceInfo& info_list(int index) const;
  ::proto::IrodoriChessEntranceInfo* mutable_info_list(int index);
  ::proto::IrodoriChessEntranceInfo* add_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::IrodoriChessEntranceInfo >*
      mutable_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::IrodoriChessEntranceInfo >&
      info_list() const;

  // @@protoc_insertion_point(class_scope:proto.IrodoriChessEntranceDetailInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::IrodoriChessEntranceInfo > info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IrodoriChessMysteryInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.IrodoriChessMysteryInfo) */ {
 public:
  IrodoriChessMysteryInfo();
  virtual ~IrodoriChessMysteryInfo();

  IrodoriChessMysteryInfo(const IrodoriChessMysteryInfo& from);

  inline IrodoriChessMysteryInfo& operator=(const IrodoriChessMysteryInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IrodoriChessMysteryInfo(IrodoriChessMysteryInfo&& from) noexcept
    : IrodoriChessMysteryInfo() {
    *this = ::std::move(from);
  }

  inline IrodoriChessMysteryInfo& operator=(IrodoriChessMysteryInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IrodoriChessMysteryInfo& default_instance();

  static inline const IrodoriChessMysteryInfo* internal_default_instance() {
    return reinterpret_cast<const IrodoriChessMysteryInfo*>(
               &_IrodoriChessMysteryInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(IrodoriChessMysteryInfo* other);
  friend void swap(IrodoriChessMysteryInfo& a, IrodoriChessMysteryInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IrodoriChessMysteryInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  IrodoriChessMysteryInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IrodoriChessMysteryInfo& from);
  void MergeFrom(const IrodoriChessMysteryInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IrodoriChessMysteryInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 entrance_point_id_list = 2;
  int entrance_point_id_list_size() const;
  void clear_entrance_point_id_list();
  static const int kEntrancePointIdListFieldNumber = 2;
  ::google::protobuf::uint32 entrance_point_id_list(int index) const;
  void set_entrance_point_id_list(int index, ::google::protobuf::uint32 value);
  void add_entrance_point_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      entrance_point_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_entrance_point_id_list();

  // repeated uint32 exit_point_id_list = 13;
  int exit_point_id_list_size() const;
  void clear_exit_point_id_list();
  static const int kExitPointIdListFieldNumber = 13;
  ::google::protobuf::uint32 exit_point_id_list(int index) const;
  void set_exit_point_id_list(int index, ::google::protobuf::uint32 value);
  void add_exit_point_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      exit_point_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_exit_point_id_list();

  // .proto.IrodoriChessEntranceDetailInfo entrance_detail_info = 5;
  bool has_entrance_detail_info() const;
  void clear_entrance_detail_info();
  static const int kEntranceDetailInfoFieldNumber = 5;
  const ::proto::IrodoriChessEntranceDetailInfo& entrance_detail_info() const;
  ::proto::IrodoriChessEntranceDetailInfo* mutable_entrance_detail_info();
  ::proto::IrodoriChessEntranceDetailInfo* release_entrance_detail_info();
  void set_allocated_entrance_detail_info(::proto::IrodoriChessEntranceDetailInfo* entrance_detail_info);

  // @@protoc_insertion_point(class_scope:proto.IrodoriChessMysteryInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > entrance_point_id_list_;
  mutable int _entrance_point_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > exit_point_id_list_;
  mutable int _exit_point_id_list_cached_byte_size_;
  ::proto::IrodoriChessEntranceDetailInfo* entrance_detail_info_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InBattleIrodoriChessSettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InBattleIrodoriChessSettleInfo) */ {
 public:
  InBattleIrodoriChessSettleInfo();
  virtual ~InBattleIrodoriChessSettleInfo();

  InBattleIrodoriChessSettleInfo(const InBattleIrodoriChessSettleInfo& from);

  inline InBattleIrodoriChessSettleInfo& operator=(const InBattleIrodoriChessSettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InBattleIrodoriChessSettleInfo(InBattleIrodoriChessSettleInfo&& from) noexcept
    : InBattleIrodoriChessSettleInfo() {
    *this = ::std::move(from);
  }

  inline InBattleIrodoriChessSettleInfo& operator=(InBattleIrodoriChessSettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InBattleIrodoriChessSettleInfo& default_instance();

  static inline const InBattleIrodoriChessSettleInfo* internal_default_instance() {
    return reinterpret_cast<const InBattleIrodoriChessSettleInfo*>(
               &_InBattleIrodoriChessSettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(InBattleIrodoriChessSettleInfo* other);
  friend void swap(InBattleIrodoriChessSettleInfo& a, InBattleIrodoriChessSettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InBattleIrodoriChessSettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  InBattleIrodoriChessSettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InBattleIrodoriChessSettleInfo& from);
  void MergeFrom(const InBattleIrodoriChessSettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InBattleIrodoriChessSettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 scene_time_ms = 1;
  void clear_scene_time_ms();
  static const int kSceneTimeMsFieldNumber = 1;
  ::google::protobuf::uint64 scene_time_ms() const;
  void set_scene_time_ms(::google::protobuf::uint64 value);

  // uint32 settle_score = 3;
  void clear_settle_score();
  static const int kSettleScoreFieldNumber = 3;
  ::google::protobuf::uint32 settle_score() const;
  void set_settle_score(::google::protobuf::uint32 value);

  // bool is_new_record = 5;
  void clear_is_new_record();
  static const int kIsNewRecordFieldNumber = 5;
  bool is_new_record() const;
  void set_is_new_record(bool value);

  // bool is_activity_end = 2;
  void clear_is_activity_end();
  static const int kIsActivityEndFieldNumber = 2;
  bool is_activity_end() const;
  void set_is_activity_end(bool value);

  // bool is_perfect = 12;
  void clear_is_perfect();
  static const int kIsPerfectFieldNumber = 12;
  bool is_perfect() const;
  void set_is_perfect(bool value);

  // uint32 kill_monster_num = 7;
  void clear_kill_monster_num();
  static const int kKillMonsterNumFieldNumber = 7;
  ::google::protobuf::uint32 kill_monster_num() const;
  void set_kill_monster_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InBattleIrodoriChessSettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 scene_time_ms_;
  ::google::protobuf::uint32 settle_score_;
  bool is_new_record_;
  bool is_activity_end_;
  bool is_perfect_;
  ::google::protobuf::uint32 kill_monster_num_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IrodoriChessPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.IrodoriChessPlayerInfo) */ {
 public:
  IrodoriChessPlayerInfo();
  virtual ~IrodoriChessPlayerInfo();

  IrodoriChessPlayerInfo(const IrodoriChessPlayerInfo& from);

  inline IrodoriChessPlayerInfo& operator=(const IrodoriChessPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IrodoriChessPlayerInfo(IrodoriChessPlayerInfo&& from) noexcept
    : IrodoriChessPlayerInfo() {
    *this = ::std::move(from);
  }

  inline IrodoriChessPlayerInfo& operator=(IrodoriChessPlayerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IrodoriChessPlayerInfo& default_instance();

  static inline const IrodoriChessPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const IrodoriChessPlayerInfo*>(
               &_IrodoriChessPlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(IrodoriChessPlayerInfo* other);
  friend void swap(IrodoriChessPlayerInfo& a, IrodoriChessPlayerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IrodoriChessPlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  IrodoriChessPlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IrodoriChessPlayerInfo& from);
  void MergeFrom(const IrodoriChessPlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IrodoriChessPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 settle_score = 3;
  void clear_settle_score();
  static const int kSettleScoreFieldNumber = 3;
  ::google::protobuf::uint32 settle_score() const;
  void set_settle_score(::google::protobuf::uint32 value);

  // uint32 uid = 4;
  void clear_uid();
  static const int kUidFieldNumber = 4;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 building_points = 9;
  void clear_building_points();
  static const int kBuildingPointsFieldNumber = 9;
  ::google::protobuf::uint32 building_points() const;
  void set_building_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.IrodoriChessPlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 settle_score_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 building_points_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IrodoriChessPlayerInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.IrodoriChessPlayerInfoNotify) */ {
 public:
  IrodoriChessPlayerInfoNotify();
  virtual ~IrodoriChessPlayerInfoNotify();

  IrodoriChessPlayerInfoNotify(const IrodoriChessPlayerInfoNotify& from);

  inline IrodoriChessPlayerInfoNotify& operator=(const IrodoriChessPlayerInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IrodoriChessPlayerInfoNotify(IrodoriChessPlayerInfoNotify&& from) noexcept
    : IrodoriChessPlayerInfoNotify() {
    *this = ::std::move(from);
  }

  inline IrodoriChessPlayerInfoNotify& operator=(IrodoriChessPlayerInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IrodoriChessPlayerInfoNotify& default_instance();

  static inline const IrodoriChessPlayerInfoNotify* internal_default_instance() {
    return reinterpret_cast<const IrodoriChessPlayerInfoNotify*>(
               &_IrodoriChessPlayerInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(IrodoriChessPlayerInfoNotify* other);
  friend void swap(IrodoriChessPlayerInfoNotify& a, IrodoriChessPlayerInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IrodoriChessPlayerInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  IrodoriChessPlayerInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IrodoriChessPlayerInfoNotify& from);
  void MergeFrom(const IrodoriChessPlayerInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IrodoriChessPlayerInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef IrodoriChessPlayerInfoNotify_CmdId CmdId;
  static const CmdId NONE =
    IrodoriChessPlayerInfoNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    IrodoriChessPlayerInfoNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    IrodoriChessPlayerInfoNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    IrodoriChessPlayerInfoNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return IrodoriChessPlayerInfoNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    IrodoriChessPlayerInfoNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    IrodoriChessPlayerInfoNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    IrodoriChessPlayerInfoNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return IrodoriChessPlayerInfoNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return IrodoriChessPlayerInfoNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return IrodoriChessPlayerInfoNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.IrodoriChessPlayerInfo player_info = 6;
  bool has_player_info() const;
  void clear_player_info();
  static const int kPlayerInfoFieldNumber = 6;
  const ::proto::IrodoriChessPlayerInfo& player_info() const;
  ::proto::IrodoriChessPlayerInfo* mutable_player_info();
  ::proto::IrodoriChessPlayerInfo* release_player_info();
  void set_allocated_player_info(::proto::IrodoriChessPlayerInfo* player_info);

  // @@protoc_insertion_point(class_scope:proto.IrodoriChessPlayerInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::IrodoriChessPlayerInfo* player_info_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IrodoriChessLeftMonsterNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.IrodoriChessLeftMonsterNotify) */ {
 public:
  IrodoriChessLeftMonsterNotify();
  virtual ~IrodoriChessLeftMonsterNotify();

  IrodoriChessLeftMonsterNotify(const IrodoriChessLeftMonsterNotify& from);

  inline IrodoriChessLeftMonsterNotify& operator=(const IrodoriChessLeftMonsterNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IrodoriChessLeftMonsterNotify(IrodoriChessLeftMonsterNotify&& from) noexcept
    : IrodoriChessLeftMonsterNotify() {
    *this = ::std::move(from);
  }

  inline IrodoriChessLeftMonsterNotify& operator=(IrodoriChessLeftMonsterNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IrodoriChessLeftMonsterNotify& default_instance();

  static inline const IrodoriChessLeftMonsterNotify* internal_default_instance() {
    return reinterpret_cast<const IrodoriChessLeftMonsterNotify*>(
               &_IrodoriChessLeftMonsterNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    81;

  void Swap(IrodoriChessLeftMonsterNotify* other);
  friend void swap(IrodoriChessLeftMonsterNotify& a, IrodoriChessLeftMonsterNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IrodoriChessLeftMonsterNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  IrodoriChessLeftMonsterNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IrodoriChessLeftMonsterNotify& from);
  void MergeFrom(const IrodoriChessLeftMonsterNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IrodoriChessLeftMonsterNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef IrodoriChessLeftMonsterNotify_CmdId CmdId;
  static const CmdId NONE =
    IrodoriChessLeftMonsterNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    IrodoriChessLeftMonsterNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    IrodoriChessLeftMonsterNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    IrodoriChessLeftMonsterNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return IrodoriChessLeftMonsterNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    IrodoriChessLeftMonsterNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    IrodoriChessLeftMonsterNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    IrodoriChessLeftMonsterNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return IrodoriChessLeftMonsterNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return IrodoriChessLeftMonsterNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return IrodoriChessLeftMonsterNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 left_monsters = 8;
  void clear_left_monsters();
  static const int kLeftMonstersFieldNumber = 8;
  ::google::protobuf::uint32 left_monsters() const;
  void set_left_monsters(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.IrodoriChessLeftMonsterNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 left_monsters_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BrickBreakerPlayerBattleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BrickBreakerPlayerBattleInfo) */ {
 public:
  BrickBreakerPlayerBattleInfo();
  virtual ~BrickBreakerPlayerBattleInfo();

  BrickBreakerPlayerBattleInfo(const BrickBreakerPlayerBattleInfo& from);

  inline BrickBreakerPlayerBattleInfo& operator=(const BrickBreakerPlayerBattleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BrickBreakerPlayerBattleInfo(BrickBreakerPlayerBattleInfo&& from) noexcept
    : BrickBreakerPlayerBattleInfo() {
    *this = ::std::move(from);
  }

  inline BrickBreakerPlayerBattleInfo& operator=(BrickBreakerPlayerBattleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BrickBreakerPlayerBattleInfo& default_instance();

  static inline const BrickBreakerPlayerBattleInfo* internal_default_instance() {
    return reinterpret_cast<const BrickBreakerPlayerBattleInfo*>(
               &_BrickBreakerPlayerBattleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    82;

  void Swap(BrickBreakerPlayerBattleInfo* other);
  friend void swap(BrickBreakerPlayerBattleInfo& a, BrickBreakerPlayerBattleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BrickBreakerPlayerBattleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BrickBreakerPlayerBattleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BrickBreakerPlayerBattleInfo& from);
  void MergeFrom(const BrickBreakerPlayerBattleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BrickBreakerPlayerBattleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 avatar_id = 9;
  int avatar_id_size() const;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 9;
  ::google::protobuf::uint32 avatar_id(int index) const;
  void set_avatar_id(int index, ::google::protobuf::uint32 value);
  void add_avatar_id(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      avatar_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_avatar_id();

  // repeated uint32 skill_list = 10;
  int skill_list_size() const;
  void clear_skill_list();
  static const int kSkillListFieldNumber = 10;
  ::google::protobuf::uint32 skill_list(int index) const;
  void set_skill_list(int index, ::google::protobuf::uint32 value);
  void add_skill_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skill_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skill_list();

  // repeated uint32 costume_id = 13;
  int costume_id_size() const;
  void clear_costume_id();
  static const int kCostumeIdFieldNumber = 13;
  ::google::protobuf::uint32 costume_id(int index) const;
  void set_costume_id(int index, ::google::protobuf::uint32 value);
  void add_costume_id(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      costume_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_costume_id();

  // string nickname = 3;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // bool is_ready = 14;
  void clear_is_ready();
  static const int kIsReadyFieldNumber = 14;
  bool is_ready() const;
  void set_is_ready(bool value);

  // bool is_changing = 11;
  void clear_is_changing();
  static const int kIsChangingFieldNumber = 11;
  bool is_changing() const;
  void set_is_changing(bool value);

  // uint32 uid = 15;
  void clear_uid();
  static const int kUidFieldNumber = 15;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BrickBreakerPlayerBattleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > avatar_id_;
  mutable int _avatar_id_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skill_list_;
  mutable int _skill_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > costume_id_;
  mutable int _costume_id_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  bool is_ready_;
  bool is_changing_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BrickBreakerPlayerReadyNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BrickBreakerPlayerReadyNotify) */ {
 public:
  BrickBreakerPlayerReadyNotify();
  virtual ~BrickBreakerPlayerReadyNotify();

  BrickBreakerPlayerReadyNotify(const BrickBreakerPlayerReadyNotify& from);

  inline BrickBreakerPlayerReadyNotify& operator=(const BrickBreakerPlayerReadyNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BrickBreakerPlayerReadyNotify(BrickBreakerPlayerReadyNotify&& from) noexcept
    : BrickBreakerPlayerReadyNotify() {
    *this = ::std::move(from);
  }

  inline BrickBreakerPlayerReadyNotify& operator=(BrickBreakerPlayerReadyNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BrickBreakerPlayerReadyNotify& default_instance();

  static inline const BrickBreakerPlayerReadyNotify* internal_default_instance() {
    return reinterpret_cast<const BrickBreakerPlayerReadyNotify*>(
               &_BrickBreakerPlayerReadyNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    83;

  void Swap(BrickBreakerPlayerReadyNotify* other);
  friend void swap(BrickBreakerPlayerReadyNotify& a, BrickBreakerPlayerReadyNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BrickBreakerPlayerReadyNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  BrickBreakerPlayerReadyNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BrickBreakerPlayerReadyNotify& from);
  void MergeFrom(const BrickBreakerPlayerReadyNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BrickBreakerPlayerReadyNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BrickBreakerPlayerReadyNotify_CmdId CmdId;
  static const CmdId NONE =
    BrickBreakerPlayerReadyNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    BrickBreakerPlayerReadyNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BrickBreakerPlayerReadyNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BrickBreakerPlayerReadyNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return BrickBreakerPlayerReadyNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BrickBreakerPlayerReadyNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BrickBreakerPlayerReadyNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BrickBreakerPlayerReadyNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BrickBreakerPlayerReadyNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BrickBreakerPlayerReadyNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BrickBreakerPlayerReadyNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 uid_list = 14;
  int uid_list_size() const;
  void clear_uid_list();
  static const int kUidListFieldNumber = 14;
  ::google::protobuf::uint32 uid_list(int index) const;
  void set_uid_list(int index, ::google::protobuf::uint32 value);
  void add_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uid_list();

  // @@protoc_insertion_point(class_scope:proto.BrickBreakerPlayerReadyNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uid_list_;
  mutable int _uid_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BrickBreakerPlayerSetAvatarNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BrickBreakerPlayerSetAvatarNotify) */ {
 public:
  BrickBreakerPlayerSetAvatarNotify();
  virtual ~BrickBreakerPlayerSetAvatarNotify();

  BrickBreakerPlayerSetAvatarNotify(const BrickBreakerPlayerSetAvatarNotify& from);

  inline BrickBreakerPlayerSetAvatarNotify& operator=(const BrickBreakerPlayerSetAvatarNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BrickBreakerPlayerSetAvatarNotify(BrickBreakerPlayerSetAvatarNotify&& from) noexcept
    : BrickBreakerPlayerSetAvatarNotify() {
    *this = ::std::move(from);
  }

  inline BrickBreakerPlayerSetAvatarNotify& operator=(BrickBreakerPlayerSetAvatarNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BrickBreakerPlayerSetAvatarNotify& default_instance();

  static inline const BrickBreakerPlayerSetAvatarNotify* internal_default_instance() {
    return reinterpret_cast<const BrickBreakerPlayerSetAvatarNotify*>(
               &_BrickBreakerPlayerSetAvatarNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    84;

  void Swap(BrickBreakerPlayerSetAvatarNotify* other);
  friend void swap(BrickBreakerPlayerSetAvatarNotify& a, BrickBreakerPlayerSetAvatarNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BrickBreakerPlayerSetAvatarNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  BrickBreakerPlayerSetAvatarNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BrickBreakerPlayerSetAvatarNotify& from);
  void MergeFrom(const BrickBreakerPlayerSetAvatarNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BrickBreakerPlayerSetAvatarNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BrickBreakerPlayerSetAvatarNotify_CmdId CmdId;
  static const CmdId NONE =
    BrickBreakerPlayerSetAvatarNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    BrickBreakerPlayerSetAvatarNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BrickBreakerPlayerSetAvatarNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BrickBreakerPlayerSetAvatarNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return BrickBreakerPlayerSetAvatarNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BrickBreakerPlayerSetAvatarNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BrickBreakerPlayerSetAvatarNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BrickBreakerPlayerSetAvatarNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BrickBreakerPlayerSetAvatarNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BrickBreakerPlayerSetAvatarNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BrickBreakerPlayerSetAvatarNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 avatar_id_list = 8;
  int avatar_id_list_size() const;
  void clear_avatar_id_list();
  static const int kAvatarIdListFieldNumber = 8;
  ::google::protobuf::uint32 avatar_id_list(int index) const;
  void set_avatar_id_list(int index, ::google::protobuf::uint32 value);
  void add_avatar_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      avatar_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_avatar_id_list();

  // repeated uint32 costume_id_list = 11;
  int costume_id_list_size() const;
  void clear_costume_id_list();
  static const int kCostumeIdListFieldNumber = 11;
  ::google::protobuf::uint32 costume_id_list(int index) const;
  void set_costume_id_list(int index, ::google::protobuf::uint32 value);
  void add_costume_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      costume_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_costume_id_list();

  // uint32 uid = 9;
  void clear_uid();
  static const int kUidFieldNumber = 9;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BrickBreakerPlayerSetAvatarNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > avatar_id_list_;
  mutable int _avatar_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > costume_id_list_;
  mutable int _costume_id_list_cached_byte_size_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BrickBreakerPlayerSetSkillNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BrickBreakerPlayerSetSkillNotify) */ {
 public:
  BrickBreakerPlayerSetSkillNotify();
  virtual ~BrickBreakerPlayerSetSkillNotify();

  BrickBreakerPlayerSetSkillNotify(const BrickBreakerPlayerSetSkillNotify& from);

  inline BrickBreakerPlayerSetSkillNotify& operator=(const BrickBreakerPlayerSetSkillNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BrickBreakerPlayerSetSkillNotify(BrickBreakerPlayerSetSkillNotify&& from) noexcept
    : BrickBreakerPlayerSetSkillNotify() {
    *this = ::std::move(from);
  }

  inline BrickBreakerPlayerSetSkillNotify& operator=(BrickBreakerPlayerSetSkillNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BrickBreakerPlayerSetSkillNotify& default_instance();

  static inline const BrickBreakerPlayerSetSkillNotify* internal_default_instance() {
    return reinterpret_cast<const BrickBreakerPlayerSetSkillNotify*>(
               &_BrickBreakerPlayerSetSkillNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    85;

  void Swap(BrickBreakerPlayerSetSkillNotify* other);
  friend void swap(BrickBreakerPlayerSetSkillNotify& a, BrickBreakerPlayerSetSkillNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BrickBreakerPlayerSetSkillNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  BrickBreakerPlayerSetSkillNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BrickBreakerPlayerSetSkillNotify& from);
  void MergeFrom(const BrickBreakerPlayerSetSkillNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BrickBreakerPlayerSetSkillNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BrickBreakerPlayerSetSkillNotify_CmdId CmdId;
  static const CmdId NONE =
    BrickBreakerPlayerSetSkillNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    BrickBreakerPlayerSetSkillNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BrickBreakerPlayerSetSkillNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BrickBreakerPlayerSetSkillNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return BrickBreakerPlayerSetSkillNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BrickBreakerPlayerSetSkillNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BrickBreakerPlayerSetSkillNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BrickBreakerPlayerSetSkillNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BrickBreakerPlayerSetSkillNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BrickBreakerPlayerSetSkillNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BrickBreakerPlayerSetSkillNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 skill_id_list = 14;
  int skill_id_list_size() const;
  void clear_skill_id_list();
  static const int kSkillIdListFieldNumber = 14;
  ::google::protobuf::uint32 skill_id_list(int index) const;
  void set_skill_id_list(int index, ::google::protobuf::uint32 value);
  void add_skill_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skill_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skill_id_list();

  // uint32 uid = 8;
  void clear_uid();
  static const int kUidFieldNumber = 8;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BrickBreakerPlayerSetSkillNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skill_id_list_;
  mutable int _skill_id_list_cached_byte_size_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BrickBreakerSetReadyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BrickBreakerSetReadyReq) */ {
 public:
  BrickBreakerSetReadyReq();
  virtual ~BrickBreakerSetReadyReq();

  BrickBreakerSetReadyReq(const BrickBreakerSetReadyReq& from);

  inline BrickBreakerSetReadyReq& operator=(const BrickBreakerSetReadyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BrickBreakerSetReadyReq(BrickBreakerSetReadyReq&& from) noexcept
    : BrickBreakerSetReadyReq() {
    *this = ::std::move(from);
  }

  inline BrickBreakerSetReadyReq& operator=(BrickBreakerSetReadyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BrickBreakerSetReadyReq& default_instance();

  static inline const BrickBreakerSetReadyReq* internal_default_instance() {
    return reinterpret_cast<const BrickBreakerSetReadyReq*>(
               &_BrickBreakerSetReadyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    86;

  void Swap(BrickBreakerSetReadyReq* other);
  friend void swap(BrickBreakerSetReadyReq& a, BrickBreakerSetReadyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BrickBreakerSetReadyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BrickBreakerSetReadyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BrickBreakerSetReadyReq& from);
  void MergeFrom(const BrickBreakerSetReadyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BrickBreakerSetReadyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BrickBreakerSetReadyReq_CmdId CmdId;
  static const CmdId NONE =
    BrickBreakerSetReadyReq_CmdId_NONE;
  static const CmdId CMD_ID =
    BrickBreakerSetReadyReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BrickBreakerSetReadyReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BrickBreakerSetReadyReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    BrickBreakerSetReadyReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return BrickBreakerSetReadyReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BrickBreakerSetReadyReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BrickBreakerSetReadyReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BrickBreakerSetReadyReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BrickBreakerSetReadyReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BrickBreakerSetReadyReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BrickBreakerSetReadyReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.BrickBreakerSetReadyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BrickBreakerSetReadyRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BrickBreakerSetReadyRsp) */ {
 public:
  BrickBreakerSetReadyRsp();
  virtual ~BrickBreakerSetReadyRsp();

  BrickBreakerSetReadyRsp(const BrickBreakerSetReadyRsp& from);

  inline BrickBreakerSetReadyRsp& operator=(const BrickBreakerSetReadyRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BrickBreakerSetReadyRsp(BrickBreakerSetReadyRsp&& from) noexcept
    : BrickBreakerSetReadyRsp() {
    *this = ::std::move(from);
  }

  inline BrickBreakerSetReadyRsp& operator=(BrickBreakerSetReadyRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BrickBreakerSetReadyRsp& default_instance();

  static inline const BrickBreakerSetReadyRsp* internal_default_instance() {
    return reinterpret_cast<const BrickBreakerSetReadyRsp*>(
               &_BrickBreakerSetReadyRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    87;

  void Swap(BrickBreakerSetReadyRsp* other);
  friend void swap(BrickBreakerSetReadyRsp& a, BrickBreakerSetReadyRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BrickBreakerSetReadyRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  BrickBreakerSetReadyRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BrickBreakerSetReadyRsp& from);
  void MergeFrom(const BrickBreakerSetReadyRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BrickBreakerSetReadyRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BrickBreakerSetReadyRsp_CmdId CmdId;
  static const CmdId NONE =
    BrickBreakerSetReadyRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    BrickBreakerSetReadyRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BrickBreakerSetReadyRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BrickBreakerSetReadyRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return BrickBreakerSetReadyRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BrickBreakerSetReadyRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BrickBreakerSetReadyRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BrickBreakerSetReadyRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BrickBreakerSetReadyRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BrickBreakerSetReadyRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BrickBreakerSetReadyRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 2;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 2;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.BrickBreakerSetReadyRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BrickBreakerSelectAvatarReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BrickBreakerSelectAvatarReq) */ {
 public:
  BrickBreakerSelectAvatarReq();
  virtual ~BrickBreakerSelectAvatarReq();

  BrickBreakerSelectAvatarReq(const BrickBreakerSelectAvatarReq& from);

  inline BrickBreakerSelectAvatarReq& operator=(const BrickBreakerSelectAvatarReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BrickBreakerSelectAvatarReq(BrickBreakerSelectAvatarReq&& from) noexcept
    : BrickBreakerSelectAvatarReq() {
    *this = ::std::move(from);
  }

  inline BrickBreakerSelectAvatarReq& operator=(BrickBreakerSelectAvatarReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BrickBreakerSelectAvatarReq& default_instance();

  static inline const BrickBreakerSelectAvatarReq* internal_default_instance() {
    return reinterpret_cast<const BrickBreakerSelectAvatarReq*>(
               &_BrickBreakerSelectAvatarReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    88;

  void Swap(BrickBreakerSelectAvatarReq* other);
  friend void swap(BrickBreakerSelectAvatarReq& a, BrickBreakerSelectAvatarReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BrickBreakerSelectAvatarReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BrickBreakerSelectAvatarReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BrickBreakerSelectAvatarReq& from);
  void MergeFrom(const BrickBreakerSelectAvatarReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BrickBreakerSelectAvatarReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BrickBreakerSelectAvatarReq_CmdId CmdId;
  static const CmdId NONE =
    BrickBreakerSelectAvatarReq_CmdId_NONE;
  static const CmdId CMD_ID =
    BrickBreakerSelectAvatarReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BrickBreakerSelectAvatarReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BrickBreakerSelectAvatarReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    BrickBreakerSelectAvatarReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return BrickBreakerSelectAvatarReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BrickBreakerSelectAvatarReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BrickBreakerSelectAvatarReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BrickBreakerSelectAvatarReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BrickBreakerSelectAvatarReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BrickBreakerSelectAvatarReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BrickBreakerSelectAvatarReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 avatar_id = 2;
  int avatar_id_size() const;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 2;
  ::google::protobuf::uint32 avatar_id(int index) const;
  void set_avatar_id(int index, ::google::protobuf::uint32 value);
  void add_avatar_id(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      avatar_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_avatar_id();

  // @@protoc_insertion_point(class_scope:proto.BrickBreakerSelectAvatarReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > avatar_id_;
  mutable int _avatar_id_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BrickBreakerSelectAvatarRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BrickBreakerSelectAvatarRsp) */ {
 public:
  BrickBreakerSelectAvatarRsp();
  virtual ~BrickBreakerSelectAvatarRsp();

  BrickBreakerSelectAvatarRsp(const BrickBreakerSelectAvatarRsp& from);

  inline BrickBreakerSelectAvatarRsp& operator=(const BrickBreakerSelectAvatarRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BrickBreakerSelectAvatarRsp(BrickBreakerSelectAvatarRsp&& from) noexcept
    : BrickBreakerSelectAvatarRsp() {
    *this = ::std::move(from);
  }

  inline BrickBreakerSelectAvatarRsp& operator=(BrickBreakerSelectAvatarRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BrickBreakerSelectAvatarRsp& default_instance();

  static inline const BrickBreakerSelectAvatarRsp* internal_default_instance() {
    return reinterpret_cast<const BrickBreakerSelectAvatarRsp*>(
               &_BrickBreakerSelectAvatarRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    89;

  void Swap(BrickBreakerSelectAvatarRsp* other);
  friend void swap(BrickBreakerSelectAvatarRsp& a, BrickBreakerSelectAvatarRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BrickBreakerSelectAvatarRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  BrickBreakerSelectAvatarRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BrickBreakerSelectAvatarRsp& from);
  void MergeFrom(const BrickBreakerSelectAvatarRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BrickBreakerSelectAvatarRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BrickBreakerSelectAvatarRsp_CmdId CmdId;
  static const CmdId NONE =
    BrickBreakerSelectAvatarRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    BrickBreakerSelectAvatarRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BrickBreakerSelectAvatarRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BrickBreakerSelectAvatarRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return BrickBreakerSelectAvatarRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BrickBreakerSelectAvatarRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BrickBreakerSelectAvatarRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BrickBreakerSelectAvatarRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BrickBreakerSelectAvatarRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BrickBreakerSelectAvatarRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BrickBreakerSelectAvatarRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 avatar_id = 8;
  int avatar_id_size() const;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 8;
  ::google::protobuf::uint32 avatar_id(int index) const;
  void set_avatar_id(int index, ::google::protobuf::uint32 value);
  void add_avatar_id(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      avatar_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_avatar_id();

  // int32 retcode = 4;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.BrickBreakerSelectAvatarRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > avatar_id_;
  mutable int _avatar_id_cached_byte_size_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BrickBreakerSelectSkillReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BrickBreakerSelectSkillReq) */ {
 public:
  BrickBreakerSelectSkillReq();
  virtual ~BrickBreakerSelectSkillReq();

  BrickBreakerSelectSkillReq(const BrickBreakerSelectSkillReq& from);

  inline BrickBreakerSelectSkillReq& operator=(const BrickBreakerSelectSkillReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BrickBreakerSelectSkillReq(BrickBreakerSelectSkillReq&& from) noexcept
    : BrickBreakerSelectSkillReq() {
    *this = ::std::move(from);
  }

  inline BrickBreakerSelectSkillReq& operator=(BrickBreakerSelectSkillReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BrickBreakerSelectSkillReq& default_instance();

  static inline const BrickBreakerSelectSkillReq* internal_default_instance() {
    return reinterpret_cast<const BrickBreakerSelectSkillReq*>(
               &_BrickBreakerSelectSkillReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    90;

  void Swap(BrickBreakerSelectSkillReq* other);
  friend void swap(BrickBreakerSelectSkillReq& a, BrickBreakerSelectSkillReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BrickBreakerSelectSkillReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BrickBreakerSelectSkillReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BrickBreakerSelectSkillReq& from);
  void MergeFrom(const BrickBreakerSelectSkillReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BrickBreakerSelectSkillReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BrickBreakerSelectSkillReq_CmdId CmdId;
  static const CmdId NONE =
    BrickBreakerSelectSkillReq_CmdId_NONE;
  static const CmdId CMD_ID =
    BrickBreakerSelectSkillReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BrickBreakerSelectSkillReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BrickBreakerSelectSkillReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    BrickBreakerSelectSkillReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return BrickBreakerSelectSkillReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BrickBreakerSelectSkillReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BrickBreakerSelectSkillReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BrickBreakerSelectSkillReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BrickBreakerSelectSkillReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BrickBreakerSelectSkillReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BrickBreakerSelectSkillReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 skill_id = 6;
  int skill_id_size() const;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 6;
  ::google::protobuf::uint32 skill_id(int index) const;
  void set_skill_id(int index, ::google::protobuf::uint32 value);
  void add_skill_id(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skill_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skill_id();

  // @@protoc_insertion_point(class_scope:proto.BrickBreakerSelectSkillReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skill_id_;
  mutable int _skill_id_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BrickBreakerSelectSkillRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BrickBreakerSelectSkillRsp) */ {
 public:
  BrickBreakerSelectSkillRsp();
  virtual ~BrickBreakerSelectSkillRsp();

  BrickBreakerSelectSkillRsp(const BrickBreakerSelectSkillRsp& from);

  inline BrickBreakerSelectSkillRsp& operator=(const BrickBreakerSelectSkillRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BrickBreakerSelectSkillRsp(BrickBreakerSelectSkillRsp&& from) noexcept
    : BrickBreakerSelectSkillRsp() {
    *this = ::std::move(from);
  }

  inline BrickBreakerSelectSkillRsp& operator=(BrickBreakerSelectSkillRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BrickBreakerSelectSkillRsp& default_instance();

  static inline const BrickBreakerSelectSkillRsp* internal_default_instance() {
    return reinterpret_cast<const BrickBreakerSelectSkillRsp*>(
               &_BrickBreakerSelectSkillRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    91;

  void Swap(BrickBreakerSelectSkillRsp* other);
  friend void swap(BrickBreakerSelectSkillRsp& a, BrickBreakerSelectSkillRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BrickBreakerSelectSkillRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  BrickBreakerSelectSkillRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BrickBreakerSelectSkillRsp& from);
  void MergeFrom(const BrickBreakerSelectSkillRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BrickBreakerSelectSkillRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BrickBreakerSelectSkillRsp_CmdId CmdId;
  static const CmdId NONE =
    BrickBreakerSelectSkillRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    BrickBreakerSelectSkillRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BrickBreakerSelectSkillRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BrickBreakerSelectSkillRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return BrickBreakerSelectSkillRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BrickBreakerSelectSkillRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BrickBreakerSelectSkillRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BrickBreakerSelectSkillRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BrickBreakerSelectSkillRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BrickBreakerSelectSkillRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BrickBreakerSelectSkillRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 skill_id = 11;
  int skill_id_size() const;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 11;
  ::google::protobuf::uint32 skill_id(int index) const;
  void set_skill_id(int index, ::google::protobuf::uint32 value);
  void add_skill_id(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skill_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skill_id();

  // int32 retcode = 10;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 10;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.BrickBreakerSelectSkillRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skill_id_;
  mutable int _skill_id_cached_byte_size_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BrickBreakerSetChangingReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BrickBreakerSetChangingReq) */ {
 public:
  BrickBreakerSetChangingReq();
  virtual ~BrickBreakerSetChangingReq();

  BrickBreakerSetChangingReq(const BrickBreakerSetChangingReq& from);

  inline BrickBreakerSetChangingReq& operator=(const BrickBreakerSetChangingReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BrickBreakerSetChangingReq(BrickBreakerSetChangingReq&& from) noexcept
    : BrickBreakerSetChangingReq() {
    *this = ::std::move(from);
  }

  inline BrickBreakerSetChangingReq& operator=(BrickBreakerSetChangingReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BrickBreakerSetChangingReq& default_instance();

  static inline const BrickBreakerSetChangingReq* internal_default_instance() {
    return reinterpret_cast<const BrickBreakerSetChangingReq*>(
               &_BrickBreakerSetChangingReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    92;

  void Swap(BrickBreakerSetChangingReq* other);
  friend void swap(BrickBreakerSetChangingReq& a, BrickBreakerSetChangingReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BrickBreakerSetChangingReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BrickBreakerSetChangingReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BrickBreakerSetChangingReq& from);
  void MergeFrom(const BrickBreakerSetChangingReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BrickBreakerSetChangingReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BrickBreakerSetChangingReq_CmdId CmdId;
  static const CmdId NONE =
    BrickBreakerSetChangingReq_CmdId_NONE;
  static const CmdId CMD_ID =
    BrickBreakerSetChangingReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BrickBreakerSetChangingReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BrickBreakerSetChangingReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    BrickBreakerSetChangingReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return BrickBreakerSetChangingReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BrickBreakerSetChangingReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BrickBreakerSetChangingReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BrickBreakerSetChangingReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BrickBreakerSetChangingReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BrickBreakerSetChangingReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BrickBreakerSetChangingReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bool is_changing = 11;
  void clear_is_changing();
  static const int kIsChangingFieldNumber = 11;
  bool is_changing() const;
  void set_is_changing(bool value);

  // @@protoc_insertion_point(class_scope:proto.BrickBreakerSetChangingReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_changing_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BrickBreakerSetChangingRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BrickBreakerSetChangingRsp) */ {
 public:
  BrickBreakerSetChangingRsp();
  virtual ~BrickBreakerSetChangingRsp();

  BrickBreakerSetChangingRsp(const BrickBreakerSetChangingRsp& from);

  inline BrickBreakerSetChangingRsp& operator=(const BrickBreakerSetChangingRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BrickBreakerSetChangingRsp(BrickBreakerSetChangingRsp&& from) noexcept
    : BrickBreakerSetChangingRsp() {
    *this = ::std::move(from);
  }

  inline BrickBreakerSetChangingRsp& operator=(BrickBreakerSetChangingRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BrickBreakerSetChangingRsp& default_instance();

  static inline const BrickBreakerSetChangingRsp* internal_default_instance() {
    return reinterpret_cast<const BrickBreakerSetChangingRsp*>(
               &_BrickBreakerSetChangingRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    93;

  void Swap(BrickBreakerSetChangingRsp* other);
  friend void swap(BrickBreakerSetChangingRsp& a, BrickBreakerSetChangingRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BrickBreakerSetChangingRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  BrickBreakerSetChangingRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BrickBreakerSetChangingRsp& from);
  void MergeFrom(const BrickBreakerSetChangingRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BrickBreakerSetChangingRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BrickBreakerSetChangingRsp_CmdId CmdId;
  static const CmdId NONE =
    BrickBreakerSetChangingRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    BrickBreakerSetChangingRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BrickBreakerSetChangingRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BrickBreakerSetChangingRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return BrickBreakerSetChangingRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BrickBreakerSetChangingRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BrickBreakerSetChangingRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BrickBreakerSetChangingRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BrickBreakerSetChangingRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BrickBreakerSetChangingRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BrickBreakerSetChangingRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 2;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 2;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.BrickBreakerSetChangingRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BrickBreakerPlayerSetChangingNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BrickBreakerPlayerSetChangingNotify) */ {
 public:
  BrickBreakerPlayerSetChangingNotify();
  virtual ~BrickBreakerPlayerSetChangingNotify();

  BrickBreakerPlayerSetChangingNotify(const BrickBreakerPlayerSetChangingNotify& from);

  inline BrickBreakerPlayerSetChangingNotify& operator=(const BrickBreakerPlayerSetChangingNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BrickBreakerPlayerSetChangingNotify(BrickBreakerPlayerSetChangingNotify&& from) noexcept
    : BrickBreakerPlayerSetChangingNotify() {
    *this = ::std::move(from);
  }

  inline BrickBreakerPlayerSetChangingNotify& operator=(BrickBreakerPlayerSetChangingNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BrickBreakerPlayerSetChangingNotify& default_instance();

  static inline const BrickBreakerPlayerSetChangingNotify* internal_default_instance() {
    return reinterpret_cast<const BrickBreakerPlayerSetChangingNotify*>(
               &_BrickBreakerPlayerSetChangingNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    94;

  void Swap(BrickBreakerPlayerSetChangingNotify* other);
  friend void swap(BrickBreakerPlayerSetChangingNotify& a, BrickBreakerPlayerSetChangingNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BrickBreakerPlayerSetChangingNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  BrickBreakerPlayerSetChangingNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BrickBreakerPlayerSetChangingNotify& from);
  void MergeFrom(const BrickBreakerPlayerSetChangingNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BrickBreakerPlayerSetChangingNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BrickBreakerPlayerSetChangingNotify_CmdId CmdId;
  static const CmdId NONE =
    BrickBreakerPlayerSetChangingNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    BrickBreakerPlayerSetChangingNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BrickBreakerPlayerSetChangingNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BrickBreakerPlayerSetChangingNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return BrickBreakerPlayerSetChangingNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BrickBreakerPlayerSetChangingNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BrickBreakerPlayerSetChangingNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BrickBreakerPlayerSetChangingNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BrickBreakerPlayerSetChangingNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BrickBreakerPlayerSetChangingNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BrickBreakerPlayerSetChangingNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bool is_changing = 7;
  void clear_is_changing();
  static const int kIsChangingFieldNumber = 7;
  bool is_changing() const;
  void set_is_changing(bool value);

  // uint32 uid = 15;
  void clear_uid();
  static const int kUidFieldNumber = 15;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BrickBreakerPlayerSetChangingNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_changing_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoinCollectTeamAvatarInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CoinCollectTeamAvatarInfo) */ {
 public:
  CoinCollectTeamAvatarInfo();
  virtual ~CoinCollectTeamAvatarInfo();

  CoinCollectTeamAvatarInfo(const CoinCollectTeamAvatarInfo& from);

  inline CoinCollectTeamAvatarInfo& operator=(const CoinCollectTeamAvatarInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoinCollectTeamAvatarInfo(CoinCollectTeamAvatarInfo&& from) noexcept
    : CoinCollectTeamAvatarInfo() {
    *this = ::std::move(from);
  }

  inline CoinCollectTeamAvatarInfo& operator=(CoinCollectTeamAvatarInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoinCollectTeamAvatarInfo& default_instance();

  static inline const CoinCollectTeamAvatarInfo* internal_default_instance() {
    return reinterpret_cast<const CoinCollectTeamAvatarInfo*>(
               &_CoinCollectTeamAvatarInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    95;

  void Swap(CoinCollectTeamAvatarInfo* other);
  friend void swap(CoinCollectTeamAvatarInfo& a, CoinCollectTeamAvatarInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoinCollectTeamAvatarInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CoinCollectTeamAvatarInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CoinCollectTeamAvatarInfo& from);
  void MergeFrom(const CoinCollectTeamAvatarInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CoinCollectTeamAvatarInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 costume_id = 4;
  void clear_costume_id();
  static const int kCostumeIdFieldNumber = 4;
  ::google::protobuf::uint32 costume_id() const;
  void set_costume_id(::google::protobuf::uint32 value);

  // uint32 avatar_id = 10;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 10;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CoinCollectTeamAvatarInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 costume_id_;
  ::google::protobuf::uint32 avatar_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoinCollectPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CoinCollectPlayerInfo) */ {
 public:
  CoinCollectPlayerInfo();
  virtual ~CoinCollectPlayerInfo();

  CoinCollectPlayerInfo(const CoinCollectPlayerInfo& from);

  inline CoinCollectPlayerInfo& operator=(const CoinCollectPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoinCollectPlayerInfo(CoinCollectPlayerInfo&& from) noexcept
    : CoinCollectPlayerInfo() {
    *this = ::std::move(from);
  }

  inline CoinCollectPlayerInfo& operator=(CoinCollectPlayerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoinCollectPlayerInfo& default_instance();

  static inline const CoinCollectPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const CoinCollectPlayerInfo*>(
               &_CoinCollectPlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    96;

  void Swap(CoinCollectPlayerInfo* other);
  friend void swap(CoinCollectPlayerInfo& a, CoinCollectPlayerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoinCollectPlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CoinCollectPlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CoinCollectPlayerInfo& from);
  void MergeFrom(const CoinCollectPlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CoinCollectPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.CoinCollectTeamAvatarInfo avatar_info_list = 10;
  int avatar_info_list_size() const;
  void clear_avatar_info_list();
  static const int kAvatarInfoListFieldNumber = 10;
  const ::proto::CoinCollectTeamAvatarInfo& avatar_info_list(int index) const;
  ::proto::CoinCollectTeamAvatarInfo* mutable_avatar_info_list(int index);
  ::proto::CoinCollectTeamAvatarInfo* add_avatar_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CoinCollectTeamAvatarInfo >*
      mutable_avatar_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CoinCollectTeamAvatarInfo >&
      avatar_info_list() const;

  // string player_name = 11;
  void clear_player_name();
  static const int kPlayerNameFieldNumber = 11;
  const ::std::string& player_name() const;
  void set_player_name(const ::std::string& value);
  #if LANG_CXX11
  void set_player_name(::std::string&& value);
  #endif
  void set_player_name(const char* value);
  void set_player_name(const char* value, size_t size);
  ::std::string* mutable_player_name();
  ::std::string* release_player_name();
  void set_allocated_player_name(::std::string* player_name);

  // bool is_prepare = 14;
  void clear_is_prepare();
  static const int kIsPrepareFieldNumber = 14;
  bool is_prepare() const;
  void set_is_prepare(bool value);

  // uint32 choose_skill_no = 5;
  void clear_choose_skill_no();
  static const int kChooseSkillNoFieldNumber = 5;
  ::google::protobuf::uint32 choose_skill_no() const;
  void set_choose_skill_no(::google::protobuf::uint32 value);

  // uint32 player_uid = 12;
  void clear_player_uid();
  static const int kPlayerUidFieldNumber = 12;
  ::google::protobuf::uint32 player_uid() const;
  void set_player_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CoinCollectPlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::CoinCollectTeamAvatarInfo > avatar_info_list_;
  ::google::protobuf::internal::ArenaStringPtr player_name_;
  bool is_prepare_;
  ::google::protobuf::uint32 choose_skill_no_;
  ::google::protobuf::uint32 player_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoinCollectPrepareStageNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CoinCollectPrepareStageNotify) */ {
 public:
  CoinCollectPrepareStageNotify();
  virtual ~CoinCollectPrepareStageNotify();

  CoinCollectPrepareStageNotify(const CoinCollectPrepareStageNotify& from);

  inline CoinCollectPrepareStageNotify& operator=(const CoinCollectPrepareStageNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoinCollectPrepareStageNotify(CoinCollectPrepareStageNotify&& from) noexcept
    : CoinCollectPrepareStageNotify() {
    *this = ::std::move(from);
  }

  inline CoinCollectPrepareStageNotify& operator=(CoinCollectPrepareStageNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoinCollectPrepareStageNotify& default_instance();

  static inline const CoinCollectPrepareStageNotify* internal_default_instance() {
    return reinterpret_cast<const CoinCollectPrepareStageNotify*>(
               &_CoinCollectPrepareStageNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    97;

  void Swap(CoinCollectPrepareStageNotify* other);
  friend void swap(CoinCollectPrepareStageNotify& a, CoinCollectPrepareStageNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoinCollectPrepareStageNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CoinCollectPrepareStageNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CoinCollectPrepareStageNotify& from);
  void MergeFrom(const CoinCollectPrepareStageNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CoinCollectPrepareStageNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CoinCollectPrepareStageNotify_CmdId CmdId;
  static const CmdId NONE =
    CoinCollectPrepareStageNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    CoinCollectPrepareStageNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CoinCollectPrepareStageNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CoinCollectPrepareStageNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CoinCollectPrepareStageNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CoinCollectPrepareStageNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CoinCollectPrepareStageNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CoinCollectPrepareStageNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CoinCollectPrepareStageNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CoinCollectPrepareStageNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CoinCollectPrepareStageNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.CoinCollectStageInfo coin_collect_info = 3;
  bool has_coin_collect_info() const;
  void clear_coin_collect_info();
  static const int kCoinCollectInfoFieldNumber = 3;
  const ::proto::CoinCollectStageInfo& coin_collect_info() const;
  ::proto::CoinCollectStageInfo* mutable_coin_collect_info();
  ::proto::CoinCollectStageInfo* release_coin_collect_info();
  void set_allocated_coin_collect_info(::proto::CoinCollectStageInfo* coin_collect_info);

  // @@protoc_insertion_point(class_scope:proto.CoinCollectPrepareStageNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::CoinCollectStageInfo* coin_collect_info_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LanV3BoatSettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LanV3BoatSettleInfo) */ {
 public:
  LanV3BoatSettleInfo();
  virtual ~LanV3BoatSettleInfo();

  LanV3BoatSettleInfo(const LanV3BoatSettleInfo& from);

  inline LanV3BoatSettleInfo& operator=(const LanV3BoatSettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LanV3BoatSettleInfo(LanV3BoatSettleInfo&& from) noexcept
    : LanV3BoatSettleInfo() {
    *this = ::std::move(from);
  }

  inline LanV3BoatSettleInfo& operator=(LanV3BoatSettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LanV3BoatSettleInfo& default_instance();

  static inline const LanV3BoatSettleInfo* internal_default_instance() {
    return reinterpret_cast<const LanV3BoatSettleInfo*>(
               &_LanV3BoatSettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    98;

  void Swap(LanV3BoatSettleInfo* other);
  friend void swap(LanV3BoatSettleInfo& a, LanV3BoatSettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LanV3BoatSettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  LanV3BoatSettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LanV3BoatSettleInfo& from);
  void MergeFrom(const LanV3BoatSettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LanV3BoatSettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ExhibitionDisplayInfo card_list = 1;
  int card_list_size() const;
  void clear_card_list();
  static const int kCardListFieldNumber = 1;
  const ::proto::ExhibitionDisplayInfo& card_list(int index) const;
  ::proto::ExhibitionDisplayInfo* mutable_card_list(int index);
  ::proto::ExhibitionDisplayInfo* add_card_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo >*
      mutable_card_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo >&
      card_list() const;

  // string online_id = 13;
  void clear_online_id();
  static const int kOnlineIdFieldNumber = 13;
  const ::std::string& online_id() const;
  void set_online_id(const ::std::string& value);
  #if LANG_CXX11
  void set_online_id(::std::string&& value);
  #endif
  void set_online_id(const char* value);
  void set_online_id(const char* value, size_t size);
  ::std::string* mutable_online_id();
  ::std::string* release_online_id();
  void set_allocated_online_id(::std::string* online_id);

  // string nickname = 14;
  void clear_nickname();
  static const int kNicknameFieldNumber = 14;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // .proto.ProfilePicture profile_picture = 12;
  bool has_profile_picture() const;
  void clear_profile_picture();
  static const int kProfilePictureFieldNumber = 12;
  const ::proto::ProfilePicture& profile_picture() const;
  ::proto::ProfilePicture* mutable_profile_picture();
  ::proto::ProfilePicture* release_profile_picture();
  void set_allocated_profile_picture(::proto::ProfilePicture* profile_picture);

  // uint32 uid = 8;
  void clear_uid();
  static const int kUidFieldNumber = 8;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 head_image = 10;
  void clear_head_image();
  static const int kHeadImageFieldNumber = 10;
  ::google::protobuf::uint32 head_image() const;
  void set_head_image(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.LanV3BoatSettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo > card_list_;
  ::google::protobuf::internal::ArenaStringPtr online_id_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::proto::ProfilePicture* profile_picture_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 head_image_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LanV3BoatSettleNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LanV3BoatSettleNotify) */ {
 public:
  LanV3BoatSettleNotify();
  virtual ~LanV3BoatSettleNotify();

  LanV3BoatSettleNotify(const LanV3BoatSettleNotify& from);

  inline LanV3BoatSettleNotify& operator=(const LanV3BoatSettleNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LanV3BoatSettleNotify(LanV3BoatSettleNotify&& from) noexcept
    : LanV3BoatSettleNotify() {
    *this = ::std::move(from);
  }

  inline LanV3BoatSettleNotify& operator=(LanV3BoatSettleNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LanV3BoatSettleNotify& default_instance();

  static inline const LanV3BoatSettleNotify* internal_default_instance() {
    return reinterpret_cast<const LanV3BoatSettleNotify*>(
               &_LanV3BoatSettleNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    99;

  void Swap(LanV3BoatSettleNotify* other);
  friend void swap(LanV3BoatSettleNotify& a, LanV3BoatSettleNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LanV3BoatSettleNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  LanV3BoatSettleNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LanV3BoatSettleNotify& from);
  void MergeFrom(const LanV3BoatSettleNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LanV3BoatSettleNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LanV3BoatSettleNotify_CmdId CmdId;
  static const CmdId NONE =
    LanV3BoatSettleNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    LanV3BoatSettleNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    LanV3BoatSettleNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    LanV3BoatSettleNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return LanV3BoatSettleNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    LanV3BoatSettleNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    LanV3BoatSettleNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    LanV3BoatSettleNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return LanV3BoatSettleNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return LanV3BoatSettleNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return LanV3BoatSettleNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ExhibitionDisplayInfo score_list = 1;
  int score_list_size() const;
  void clear_score_list();
  static const int kScoreListFieldNumber = 1;
  const ::proto::ExhibitionDisplayInfo& score_list(int index) const;
  ::proto::ExhibitionDisplayInfo* mutable_score_list(int index);
  ::proto::ExhibitionDisplayInfo* add_score_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo >*
      mutable_score_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo >&
      score_list() const;

  // repeated uint32 winner_uid_list = 2;
  int winner_uid_list_size() const;
  void clear_winner_uid_list();
  static const int kWinnerUidListFieldNumber = 2;
  ::google::protobuf::uint32 winner_uid_list(int index) const;
  void set_winner_uid_list(int index, ::google::protobuf::uint32 value);
  void add_winner_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      winner_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_winner_uid_list();

  // repeated .proto.LanV3BoatSettleInfo settle_info_list = 13;
  int settle_info_list_size() const;
  void clear_settle_info_list();
  static const int kSettleInfoListFieldNumber = 13;
  const ::proto::LanV3BoatSettleInfo& settle_info_list(int index) const;
  ::proto::LanV3BoatSettleInfo* mutable_settle_info_list(int index);
  ::proto::LanV3BoatSettleInfo* add_settle_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::LanV3BoatSettleInfo >*
      mutable_settle_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::LanV3BoatSettleInfo >&
      settle_info_list() const;

  // uint32 play_index = 4;
  void clear_play_index();
  static const int kPlayIndexFieldNumber = 4;
  ::google::protobuf::uint32 play_index() const;
  void set_play_index(::google::protobuf::uint32 value);

  // bool is_gallery_succ = 10;
  void clear_is_gallery_succ();
  static const int kIsGallerySuccFieldNumber = 10;
  bool is_gallery_succ() const;
  void set_is_gallery_succ(bool value);

  // bool is_single = 8;
  void clear_is_single();
  static const int kIsSingleFieldNumber = 8;
  bool is_single() const;
  void set_is_single(bool value);

  // uint32 stage_type = 12;
  void clear_stage_type();
  static const int kStageTypeFieldNumber = 12;
  ::google::protobuf::uint32 stage_type() const;
  void set_stage_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.LanV3BoatSettleNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo > score_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > winner_uid_list_;
  mutable int _winner_uid_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::LanV3BoatSettleInfo > settle_info_list_;
  ::google::protobuf::uint32 play_index_;
  bool is_gallery_succ_;
  bool is_single_;
  ::google::protobuf::uint32 stage_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmultistage_5fplay_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================


// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::MultistagePlayInfoNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MultistagePlayInfoNotify_CmdId>() {
  return ::proto::MultistagePlayInfoNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::MultistagePlayFinishStageReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MultistagePlayFinishStageReq_CmdId>() {
  return ::proto::MultistagePlayFinishStageReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::InBattleMechanicusExcapeMonsterNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::InBattleMechanicusExcapeMonsterNotify_CmdId>() {
  return ::proto::InBattleMechanicusExcapeMonsterNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::InBattleMechanicusLeftMonsterNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::InBattleMechanicusLeftMonsterNotify_CmdId>() {
  return ::proto::InBattleMechanicusLeftMonsterNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::InBattleMechanicusBuildingPointsNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::InBattleMechanicusBuildingPointsNotify_CmdId>() {
  return ::proto::InBattleMechanicusBuildingPointsNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::InBattleMechanicusPickCardReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::InBattleMechanicusPickCardReq_CmdId>() {
  return ::proto::InBattleMechanicusPickCardReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::InBattleMechanicusPickCardRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::InBattleMechanicusPickCardRsp_CmdId>() {
  return ::proto::InBattleMechanicusPickCardRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::InBattleMechanicusPickCardNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::InBattleMechanicusPickCardNotify_CmdId>() {
  return ::proto::InBattleMechanicusPickCardNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::InBattleMechanicusConfirmCardReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::InBattleMechanicusConfirmCardReq_CmdId>() {
  return ::proto::InBattleMechanicusConfirmCardReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::InBattleMechanicusConfirmCardRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::InBattleMechanicusConfirmCardRsp_CmdId>() {
  return ::proto::InBattleMechanicusConfirmCardRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::InBattleMechanicusConfirmCardNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::InBattleMechanicusConfirmCardNotify_CmdId>() {
  return ::proto::InBattleMechanicusConfirmCardNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::InBattleMechanicusCardResultNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::InBattleMechanicusCardResultNotify_CmdId>() {
  return ::proto::InBattleMechanicusCardResultNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::MultistagePlayFinishStageRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MultistagePlayFinishStageRsp_CmdId>() {
  return ::proto::MultistagePlayFinishStageRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::InBattleMechanicusSettleNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::InBattleMechanicusSettleNotify_CmdId>() {
  return ::proto::InBattleMechanicusSettleNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::MultistagePlaySettleNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MultistagePlaySettleNotify_CmdId>() {
  return ::proto::MultistagePlaySettleNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::MultistagePlayStageEndNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MultistagePlayStageEndNotify_CmdId>() {
  return ::proto::MultistagePlayStageEndNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::MultistagePlayEndNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MultistagePlayEndNotify_CmdId>() {
  return ::proto::MultistagePlayEndNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::FleurFairBuffEnergyNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::FleurFairBuffEnergyNotify_CmdId>() {
  return ::proto::FleurFairBuffEnergyNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::FleurFairStageSettleNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::FleurFairStageSettleNotify_CmdId>() {
  return ::proto::FleurFairStageSettleNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::FleurFairFinishGalleryStageNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::FleurFairFinishGalleryStageNotify_CmdId>() {
  return ::proto::FleurFairFinishGalleryStageNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::HideAndSeekSelectAvatarReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::HideAndSeekSelectAvatarReq_CmdId>() {
  return ::proto::HideAndSeekSelectAvatarReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::HideAndSeekSelectAvatarRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::HideAndSeekSelectAvatarRsp_CmdId>() {
  return ::proto::HideAndSeekSelectAvatarRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::HideAndSeekSetReadyReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::HideAndSeekSetReadyReq_CmdId>() {
  return ::proto::HideAndSeekSetReadyReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::HideAndSeekSetReadyRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::HideAndSeekSetReadyRsp_CmdId>() {
  return ::proto::HideAndSeekSetReadyRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::HideAndSeekSettleNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::HideAndSeekSettleNotify_CmdId>() {
  return ::proto::HideAndSeekSettleNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::HideAndSeekSettleNotify_SettleReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::HideAndSeekSettleNotify_SettleReason>() {
  return ::proto::HideAndSeekSettleNotify_SettleReason_descriptor();
}
template <> struct is_proto_enum< ::proto::HideAndSeekPlayerReadyNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::HideAndSeekPlayerReadyNotify_CmdId>() {
  return ::proto::HideAndSeekPlayerReadyNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::HideAndSeekPlayerSetAvatarNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::HideAndSeekPlayerSetAvatarNotify_CmdId>() {
  return ::proto::HideAndSeekPlayerSetAvatarNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ChessPickCardReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChessPickCardReq_CmdId>() {
  return ::proto::ChessPickCardReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ChessPickCardRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChessPickCardRsp_CmdId>() {
  return ::proto::ChessPickCardRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ChessPickCardNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChessPickCardNotify_CmdId>() {
  return ::proto::ChessPickCardNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ChessManualRefreshCardsReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChessManualRefreshCardsReq_CmdId>() {
  return ::proto::ChessManualRefreshCardsReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ChessManualRefreshCardsRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChessManualRefreshCardsRsp_CmdId>() {
  return ::proto::ChessManualRefreshCardsRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ChessPlayerInfoNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChessPlayerInfoNotify_CmdId>() {
  return ::proto::ChessPlayerInfoNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ChessLeftMonstersNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChessLeftMonstersNotify_CmdId>() {
  return ::proto::ChessLeftMonstersNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ChessEscapedMonstersNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChessEscapedMonstersNotify_CmdId>() {
  return ::proto::ChessEscapedMonstersNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ChessSelectedCardsNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChessSelectedCardsNotify_CmdId>() {
  return ::proto::ChessSelectedCardsNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GlobalBuildingInfoNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GlobalBuildingInfoNotify_CmdId>() {
  return ::proto::GlobalBuildingInfoNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::IrodoriChessPlayerInfoNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::IrodoriChessPlayerInfoNotify_CmdId>() {
  return ::proto::IrodoriChessPlayerInfoNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::IrodoriChessLeftMonsterNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::IrodoriChessLeftMonsterNotify_CmdId>() {
  return ::proto::IrodoriChessLeftMonsterNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BrickBreakerPlayerReadyNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BrickBreakerPlayerReadyNotify_CmdId>() {
  return ::proto::BrickBreakerPlayerReadyNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BrickBreakerPlayerSetAvatarNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BrickBreakerPlayerSetAvatarNotify_CmdId>() {
  return ::proto::BrickBreakerPlayerSetAvatarNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BrickBreakerPlayerSetSkillNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BrickBreakerPlayerSetSkillNotify_CmdId>() {
  return ::proto::BrickBreakerPlayerSetSkillNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BrickBreakerSetReadyReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BrickBreakerSetReadyReq_CmdId>() {
  return ::proto::BrickBreakerSetReadyReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BrickBreakerSetReadyRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BrickBreakerSetReadyRsp_CmdId>() {
  return ::proto::BrickBreakerSetReadyRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BrickBreakerSelectAvatarReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BrickBreakerSelectAvatarReq_CmdId>() {
  return ::proto::BrickBreakerSelectAvatarReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BrickBreakerSelectAvatarRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BrickBreakerSelectAvatarRsp_CmdId>() {
  return ::proto::BrickBreakerSelectAvatarRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BrickBreakerSelectSkillReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BrickBreakerSelectSkillReq_CmdId>() {
  return ::proto::BrickBreakerSelectSkillReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BrickBreakerSelectSkillRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BrickBreakerSelectSkillRsp_CmdId>() {
  return ::proto::BrickBreakerSelectSkillRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BrickBreakerSetChangingReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BrickBreakerSetChangingReq_CmdId>() {
  return ::proto::BrickBreakerSetChangingReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BrickBreakerSetChangingRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BrickBreakerSetChangingRsp_CmdId>() {
  return ::proto::BrickBreakerSetChangingRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BrickBreakerPlayerSetChangingNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BrickBreakerPlayerSetChangingNotify_CmdId>() {
  return ::proto::BrickBreakerPlayerSetChangingNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CoinCollectPrepareStageNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CoinCollectPrepareStageNotify_CmdId>() {
  return ::proto::CoinCollectPrepareStageNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::LanV3BoatSettleNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::LanV3BoatSettleNotify_CmdId>() {
  return ::proto::LanV3BoatSettleNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::MultistagePlayType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MultistagePlayType>() {
  return ::proto::MultistagePlayType_descriptor();
}
template <> struct is_proto_enum< ::proto::InBattleMechanicusStageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::InBattleMechanicusStageType>() {
  return ::proto::InBattleMechanicusStageType_descriptor();
}
template <> struct is_proto_enum< ::proto::InBattleMechanicusCardChallengeState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::InBattleMechanicusCardChallengeState>() {
  return ::proto::InBattleMechanicusCardChallengeState_descriptor();
}
template <> struct is_proto_enum< ::proto::HideAndSeekStageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::HideAndSeekStageType>() {
  return ::proto::HideAndSeekStageType_descriptor();
}
template <> struct is_proto_enum< ::proto::BrickBreakerStageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BrickBreakerStageType>() {
  return ::proto::BrickBreakerStageType_descriptor();
}
template <> struct is_proto_enum< ::proto::LanV3BoatKickReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::LanV3BoatKickReason>() {
  return ::proto::LanV3BoatKickReason_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fmultistage_5fplay_2eproto__INCLUDED
