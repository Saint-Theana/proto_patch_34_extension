// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_gadget.proto

#ifndef PROTOBUF_cmd_2fcmd_5fgadget_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fgadget_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class BlossomChestInfoNotify;
class BlossomChestInfoNotifyDefaultTypeInternal;
extern BlossomChestInfoNotifyDefaultTypeInternal _BlossomChestInfoNotify_default_instance_;
class BossChestActivateNotify;
class BossChestActivateNotifyDefaultTypeInternal;
extern BossChestActivateNotifyDefaultTypeInternal _BossChestActivateNotify_default_instance_;
class CreateVehicleReq;
class CreateVehicleReqDefaultTypeInternal;
extern CreateVehicleReqDefaultTypeInternal _CreateVehicleReq_default_instance_;
class CreateVehicleRsp;
class CreateVehicleRspDefaultTypeInternal;
extern CreateVehicleRspDefaultTypeInternal _CreateVehicleRsp_default_instance_;
class DeshretObeliskChestInfo;
class DeshretObeliskChestInfoDefaultTypeInternal;
extern DeshretObeliskChestInfoDefaultTypeInternal _DeshretObeliskChestInfo_default_instance_;
class DeshretObeliskChestInfoNotify;
class DeshretObeliskChestInfoNotifyDefaultTypeInternal;
extern DeshretObeliskChestInfoNotifyDefaultTypeInternal _DeshretObeliskChestInfoNotify_default_instance_;
class FoundationNotify;
class FoundationNotifyDefaultTypeInternal;
extern FoundationNotifyDefaultTypeInternal _FoundationNotify_default_instance_;
class FoundationReq;
class FoundationReqDefaultTypeInternal;
extern FoundationReqDefaultTypeInternal _FoundationReq_default_instance_;
class FoundationRsp;
class FoundationRspDefaultTypeInternal;
extern FoundationRspDefaultTypeInternal _FoundationRsp_default_instance_;
class GadgetAutoPickDropInfoNotify;
class GadgetAutoPickDropInfoNotifyDefaultTypeInternal;
extern GadgetAutoPickDropInfoNotifyDefaultTypeInternal _GadgetAutoPickDropInfoNotify_default_instance_;
class GadgetChainLevelChangeNotify;
class GadgetChainLevelChangeNotifyDefaultTypeInternal;
extern GadgetChainLevelChangeNotifyDefaultTypeInternal _GadgetChainLevelChangeNotify_default_instance_;
class GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry;
class GadgetChainLevelChangeNotify_GadgetChainLevelMapEntryDefaultTypeInternal;
extern GadgetChainLevelChangeNotify_GadgetChainLevelMapEntryDefaultTypeInternal _GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry_default_instance_;
class GadgetChainLevelUpdateNotify;
class GadgetChainLevelUpdateNotifyDefaultTypeInternal;
extern GadgetChainLevelUpdateNotifyDefaultTypeInternal _GadgetChainLevelUpdateNotify_default_instance_;
class GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry;
class GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntryDefaultTypeInternal;
extern GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntryDefaultTypeInternal _GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry_default_instance_;
class GadgetChangeLevelTagReq;
class GadgetChangeLevelTagReqDefaultTypeInternal;
extern GadgetChangeLevelTagReqDefaultTypeInternal _GadgetChangeLevelTagReq_default_instance_;
class GadgetChangeLevelTagRsp;
class GadgetChangeLevelTagRspDefaultTypeInternal;
extern GadgetChangeLevelTagRspDefaultTypeInternal _GadgetChangeLevelTagRsp_default_instance_;
class GadgetCustomTreeInfoNotify;
class GadgetCustomTreeInfoNotifyDefaultTypeInternal;
extern GadgetCustomTreeInfoNotifyDefaultTypeInternal _GadgetCustomTreeInfoNotify_default_instance_;
class GadgetGeneralRewardInfoNotify;
class GadgetGeneralRewardInfoNotifyDefaultTypeInternal;
extern GadgetGeneralRewardInfoNotifyDefaultTypeInternal _GadgetGeneralRewardInfoNotify_default_instance_;
class GadgetInteractReq;
class GadgetInteractReqDefaultTypeInternal;
extern GadgetInteractReqDefaultTypeInternal _GadgetInteractReq_default_instance_;
class GadgetInteractRsp;
class GadgetInteractRspDefaultTypeInternal;
extern GadgetInteractRspDefaultTypeInternal _GadgetInteractRsp_default_instance_;
class GadgetPlayDataNotify;
class GadgetPlayDataNotifyDefaultTypeInternal;
extern GadgetPlayDataNotifyDefaultTypeInternal _GadgetPlayDataNotify_default_instance_;
class GadgetPlayStartNotify;
class GadgetPlayStartNotifyDefaultTypeInternal;
extern GadgetPlayStartNotifyDefaultTypeInternal _GadgetPlayStartNotify_default_instance_;
class GadgetPlayStopNotify;
class GadgetPlayStopNotifyDefaultTypeInternal;
extern GadgetPlayStopNotifyDefaultTypeInternal _GadgetPlayStopNotify_default_instance_;
class GadgetPlayUidInfo;
class GadgetPlayUidInfoDefaultTypeInternal;
extern GadgetPlayUidInfoDefaultTypeInternal _GadgetPlayUidInfo_default_instance_;
class GadgetPlayUidOpNotify;
class GadgetPlayUidOpNotifyDefaultTypeInternal;
extern GadgetPlayUidOpNotifyDefaultTypeInternal _GadgetPlayUidOpNotify_default_instance_;
class GadgetStateNotify;
class GadgetStateNotifyDefaultTypeInternal;
extern GadgetStateNotifyDefaultTypeInternal _GadgetStateNotify_default_instance_;
class GadgetTalkChangeNotify;
class GadgetTalkChangeNotifyDefaultTypeInternal;
extern GadgetTalkChangeNotifyDefaultTypeInternal _GadgetTalkChangeNotify_default_instance_;
class LiveEndNotify;
class LiveEndNotifyDefaultTypeInternal;
extern LiveEndNotifyDefaultTypeInternal _LiveEndNotify_default_instance_;
class LiveStartNotify;
class LiveStartNotifyDefaultTypeInternal;
extern LiveStartNotifyDefaultTypeInternal _LiveStartNotify_default_instance_;
class NightCrowGadgetObservationMatchReq;
class NightCrowGadgetObservationMatchReqDefaultTypeInternal;
extern NightCrowGadgetObservationMatchReqDefaultTypeInternal _NightCrowGadgetObservationMatchReq_default_instance_;
class NightCrowGadgetObservationMatchRsp;
class NightCrowGadgetObservationMatchRspDefaultTypeInternal;
extern NightCrowGadgetObservationMatchRspDefaultTypeInternal _NightCrowGadgetObservationMatchRsp_default_instance_;
class ProjectorOptionReq;
class ProjectorOptionReqDefaultTypeInternal;
extern ProjectorOptionReqDefaultTypeInternal _ProjectorOptionReq_default_instance_;
class ProjectorOptionRsp;
class ProjectorOptionRspDefaultTypeInternal;
extern ProjectorOptionRspDefaultTypeInternal _ProjectorOptionRsp_default_instance_;
class RequestLiveInfoReq;
class RequestLiveInfoReqDefaultTypeInternal;
extern RequestLiveInfoReqDefaultTypeInternal _RequestLiveInfoReq_default_instance_;
class RequestLiveInfoRsp;
class RequestLiveInfoRspDefaultTypeInternal;
extern RequestLiveInfoRspDefaultTypeInternal _RequestLiveInfoRsp_default_instance_;
class SelectWorktopOptionReq;
class SelectWorktopOptionReqDefaultTypeInternal;
extern SelectWorktopOptionReqDefaultTypeInternal _SelectWorktopOptionReq_default_instance_;
class SelectWorktopOptionRsp;
class SelectWorktopOptionRspDefaultTypeInternal;
extern SelectWorktopOptionRspDefaultTypeInternal _SelectWorktopOptionRsp_default_instance_;
class UpdateAbilityCreatedMovingPlatformNotify;
class UpdateAbilityCreatedMovingPlatformNotifyDefaultTypeInternal;
extern UpdateAbilityCreatedMovingPlatformNotifyDefaultTypeInternal _UpdateAbilityCreatedMovingPlatformNotify_default_instance_;
class VehicleInteractReq;
class VehicleInteractReqDefaultTypeInternal;
extern VehicleInteractReqDefaultTypeInternal _VehicleInteractReq_default_instance_;
class VehicleInteractRsp;
class VehicleInteractRspDefaultTypeInternal;
extern VehicleInteractRspDefaultTypeInternal _VehicleInteractRsp_default_instance_;
class VehicleStaminaNotify;
class VehicleStaminaNotifyDefaultTypeInternal;
extern VehicleStaminaNotifyDefaultTypeInternal _VehicleStaminaNotify_default_instance_;
class WorktopOptionNotify;
class WorktopOptionNotifyDefaultTypeInternal;
extern WorktopOptionNotifyDefaultTypeInternal _WorktopOptionNotify_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fgadget_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fgadget_2eproto

enum GadgetInteractReq_CmdId {
  GadgetInteractReq_CmdId_NONE = 0,
  GadgetInteractReq_CmdId_CMD_ID = 872,
  GadgetInteractReq_CmdId_ENET_CHANNEL_ID = 0,
  GadgetInteractReq_CmdId_ENET_IS_RELIABLE = 1,
  GadgetInteractReq_CmdId_IS_ALLOW_CLIENT = 1,
  GadgetInteractReq_CmdId_GadgetInteractReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetInteractReq_CmdId_GadgetInteractReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetInteractReq_CmdId_IsValid(int value);
const GadgetInteractReq_CmdId GadgetInteractReq_CmdId_CmdId_MIN = GadgetInteractReq_CmdId_NONE;
const GadgetInteractReq_CmdId GadgetInteractReq_CmdId_CmdId_MAX = GadgetInteractReq_CmdId_CMD_ID;
const int GadgetInteractReq_CmdId_CmdId_ARRAYSIZE = GadgetInteractReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetInteractReq_CmdId_descriptor();
inline const ::std::string& GadgetInteractReq_CmdId_Name(GadgetInteractReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetInteractReq_CmdId_descriptor(), value);
}
inline bool GadgetInteractReq_CmdId_Parse(
    const ::std::string& name, GadgetInteractReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetInteractReq_CmdId>(
    GadgetInteractReq_CmdId_descriptor(), name, value);
}
enum GadgetInteractRsp_CmdId {
  GadgetInteractRsp_CmdId_NONE = 0,
  GadgetInteractRsp_CmdId_CMD_ID = 898,
  GadgetInteractRsp_CmdId_ENET_CHANNEL_ID = 0,
  GadgetInteractRsp_CmdId_ENET_IS_RELIABLE = 1,
  GadgetInteractRsp_CmdId_GadgetInteractRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetInteractRsp_CmdId_GadgetInteractRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetInteractRsp_CmdId_IsValid(int value);
const GadgetInteractRsp_CmdId GadgetInteractRsp_CmdId_CmdId_MIN = GadgetInteractRsp_CmdId_NONE;
const GadgetInteractRsp_CmdId GadgetInteractRsp_CmdId_CmdId_MAX = GadgetInteractRsp_CmdId_CMD_ID;
const int GadgetInteractRsp_CmdId_CmdId_ARRAYSIZE = GadgetInteractRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetInteractRsp_CmdId_descriptor();
inline const ::std::string& GadgetInteractRsp_CmdId_Name(GadgetInteractRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetInteractRsp_CmdId_descriptor(), value);
}
inline bool GadgetInteractRsp_CmdId_Parse(
    const ::std::string& name, GadgetInteractRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetInteractRsp_CmdId>(
    GadgetInteractRsp_CmdId_descriptor(), name, value);
}
enum GadgetStateNotify_CmdId {
  GadgetStateNotify_CmdId_NONE = 0,
  GadgetStateNotify_CmdId_CMD_ID = 812,
  GadgetStateNotify_CmdId_ENET_CHANNEL_ID = 0,
  GadgetStateNotify_CmdId_ENET_IS_RELIABLE = 1,
  GadgetStateNotify_CmdId_GadgetStateNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetStateNotify_CmdId_GadgetStateNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetStateNotify_CmdId_IsValid(int value);
const GadgetStateNotify_CmdId GadgetStateNotify_CmdId_CmdId_MIN = GadgetStateNotify_CmdId_NONE;
const GadgetStateNotify_CmdId GadgetStateNotify_CmdId_CmdId_MAX = GadgetStateNotify_CmdId_CMD_ID;
const int GadgetStateNotify_CmdId_CmdId_ARRAYSIZE = GadgetStateNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetStateNotify_CmdId_descriptor();
inline const ::std::string& GadgetStateNotify_CmdId_Name(GadgetStateNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetStateNotify_CmdId_descriptor(), value);
}
inline bool GadgetStateNotify_CmdId_Parse(
    const ::std::string& name, GadgetStateNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetStateNotify_CmdId>(
    GadgetStateNotify_CmdId_descriptor(), name, value);
}
enum WorktopOptionNotify_CmdId {
  WorktopOptionNotify_CmdId_NONE = 0,
  WorktopOptionNotify_CmdId_CMD_ID = 835,
  WorktopOptionNotify_CmdId_ENET_CHANNEL_ID = 0,
  WorktopOptionNotify_CmdId_ENET_IS_RELIABLE = 1,
  WorktopOptionNotify_CmdId_WorktopOptionNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WorktopOptionNotify_CmdId_WorktopOptionNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WorktopOptionNotify_CmdId_IsValid(int value);
const WorktopOptionNotify_CmdId WorktopOptionNotify_CmdId_CmdId_MIN = WorktopOptionNotify_CmdId_NONE;
const WorktopOptionNotify_CmdId WorktopOptionNotify_CmdId_CmdId_MAX = WorktopOptionNotify_CmdId_CMD_ID;
const int WorktopOptionNotify_CmdId_CmdId_ARRAYSIZE = WorktopOptionNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorktopOptionNotify_CmdId_descriptor();
inline const ::std::string& WorktopOptionNotify_CmdId_Name(WorktopOptionNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorktopOptionNotify_CmdId_descriptor(), value);
}
inline bool WorktopOptionNotify_CmdId_Parse(
    const ::std::string& name, WorktopOptionNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorktopOptionNotify_CmdId>(
    WorktopOptionNotify_CmdId_descriptor(), name, value);
}
enum SelectWorktopOptionReq_CmdId {
  SelectWorktopOptionReq_CmdId_NONE = 0,
  SelectWorktopOptionReq_CmdId_CMD_ID = 807,
  SelectWorktopOptionReq_CmdId_ENET_CHANNEL_ID = 0,
  SelectWorktopOptionReq_CmdId_ENET_IS_RELIABLE = 1,
  SelectWorktopOptionReq_CmdId_IS_ALLOW_CLIENT = 1,
  SelectWorktopOptionReq_CmdId_SelectWorktopOptionReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SelectWorktopOptionReq_CmdId_SelectWorktopOptionReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SelectWorktopOptionReq_CmdId_IsValid(int value);
const SelectWorktopOptionReq_CmdId SelectWorktopOptionReq_CmdId_CmdId_MIN = SelectWorktopOptionReq_CmdId_NONE;
const SelectWorktopOptionReq_CmdId SelectWorktopOptionReq_CmdId_CmdId_MAX = SelectWorktopOptionReq_CmdId_CMD_ID;
const int SelectWorktopOptionReq_CmdId_CmdId_ARRAYSIZE = SelectWorktopOptionReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SelectWorktopOptionReq_CmdId_descriptor();
inline const ::std::string& SelectWorktopOptionReq_CmdId_Name(SelectWorktopOptionReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SelectWorktopOptionReq_CmdId_descriptor(), value);
}
inline bool SelectWorktopOptionReq_CmdId_Parse(
    const ::std::string& name, SelectWorktopOptionReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SelectWorktopOptionReq_CmdId>(
    SelectWorktopOptionReq_CmdId_descriptor(), name, value);
}
enum SelectWorktopOptionRsp_CmdId {
  SelectWorktopOptionRsp_CmdId_NONE = 0,
  SelectWorktopOptionRsp_CmdId_CMD_ID = 821,
  SelectWorktopOptionRsp_CmdId_ENET_CHANNEL_ID = 0,
  SelectWorktopOptionRsp_CmdId_ENET_IS_RELIABLE = 1,
  SelectWorktopOptionRsp_CmdId_SelectWorktopOptionRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SelectWorktopOptionRsp_CmdId_SelectWorktopOptionRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SelectWorktopOptionRsp_CmdId_IsValid(int value);
const SelectWorktopOptionRsp_CmdId SelectWorktopOptionRsp_CmdId_CmdId_MIN = SelectWorktopOptionRsp_CmdId_NONE;
const SelectWorktopOptionRsp_CmdId SelectWorktopOptionRsp_CmdId_CmdId_MAX = SelectWorktopOptionRsp_CmdId_CMD_ID;
const int SelectWorktopOptionRsp_CmdId_CmdId_ARRAYSIZE = SelectWorktopOptionRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SelectWorktopOptionRsp_CmdId_descriptor();
inline const ::std::string& SelectWorktopOptionRsp_CmdId_Name(SelectWorktopOptionRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SelectWorktopOptionRsp_CmdId_descriptor(), value);
}
inline bool SelectWorktopOptionRsp_CmdId_Parse(
    const ::std::string& name, SelectWorktopOptionRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SelectWorktopOptionRsp_CmdId>(
    SelectWorktopOptionRsp_CmdId_descriptor(), name, value);
}
enum BossChestActivateNotify_CmdId {
  BossChestActivateNotify_CmdId_NONE = 0,
  BossChestActivateNotify_CmdId_CMD_ID = 803,
  BossChestActivateNotify_CmdId_ENET_CHANNEL_ID = 0,
  BossChestActivateNotify_CmdId_ENET_IS_RELIABLE = 1,
  BossChestActivateNotify_CmdId_BossChestActivateNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BossChestActivateNotify_CmdId_BossChestActivateNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BossChestActivateNotify_CmdId_IsValid(int value);
const BossChestActivateNotify_CmdId BossChestActivateNotify_CmdId_CmdId_MIN = BossChestActivateNotify_CmdId_NONE;
const BossChestActivateNotify_CmdId BossChestActivateNotify_CmdId_CmdId_MAX = BossChestActivateNotify_CmdId_CMD_ID;
const int BossChestActivateNotify_CmdId_CmdId_ARRAYSIZE = BossChestActivateNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BossChestActivateNotify_CmdId_descriptor();
inline const ::std::string& BossChestActivateNotify_CmdId_Name(BossChestActivateNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BossChestActivateNotify_CmdId_descriptor(), value);
}
inline bool BossChestActivateNotify_CmdId_Parse(
    const ::std::string& name, BossChestActivateNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BossChestActivateNotify_CmdId>(
    BossChestActivateNotify_CmdId_descriptor(), name, value);
}
enum BlossomChestInfoNotify_CmdId {
  BlossomChestInfoNotify_CmdId_NONE = 0,
  BlossomChestInfoNotify_CmdId_CMD_ID = 890,
  BlossomChestInfoNotify_CmdId_ENET_CHANNEL_ID = 0,
  BlossomChestInfoNotify_CmdId_ENET_IS_RELIABLE = 1,
  BlossomChestInfoNotify_CmdId_BlossomChestInfoNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BlossomChestInfoNotify_CmdId_BlossomChestInfoNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BlossomChestInfoNotify_CmdId_IsValid(int value);
const BlossomChestInfoNotify_CmdId BlossomChestInfoNotify_CmdId_CmdId_MIN = BlossomChestInfoNotify_CmdId_NONE;
const BlossomChestInfoNotify_CmdId BlossomChestInfoNotify_CmdId_CmdId_MAX = BlossomChestInfoNotify_CmdId_CMD_ID;
const int BlossomChestInfoNotify_CmdId_CmdId_ARRAYSIZE = BlossomChestInfoNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BlossomChestInfoNotify_CmdId_descriptor();
inline const ::std::string& BlossomChestInfoNotify_CmdId_Name(BlossomChestInfoNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BlossomChestInfoNotify_CmdId_descriptor(), value);
}
inline bool BlossomChestInfoNotify_CmdId_Parse(
    const ::std::string& name, BlossomChestInfoNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BlossomChestInfoNotify_CmdId>(
    BlossomChestInfoNotify_CmdId_descriptor(), name, value);
}
enum GadgetPlayStartNotify_CmdId {
  GadgetPlayStartNotify_CmdId_NONE = 0,
  GadgetPlayStartNotify_CmdId_CMD_ID = 873,
  GadgetPlayStartNotify_CmdId_ENET_CHANNEL_ID = 0,
  GadgetPlayStartNotify_CmdId_ENET_IS_RELIABLE = 1,
  GadgetPlayStartNotify_CmdId_GadgetPlayStartNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetPlayStartNotify_CmdId_GadgetPlayStartNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetPlayStartNotify_CmdId_IsValid(int value);
const GadgetPlayStartNotify_CmdId GadgetPlayStartNotify_CmdId_CmdId_MIN = GadgetPlayStartNotify_CmdId_NONE;
const GadgetPlayStartNotify_CmdId GadgetPlayStartNotify_CmdId_CmdId_MAX = GadgetPlayStartNotify_CmdId_CMD_ID;
const int GadgetPlayStartNotify_CmdId_CmdId_ARRAYSIZE = GadgetPlayStartNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetPlayStartNotify_CmdId_descriptor();
inline const ::std::string& GadgetPlayStartNotify_CmdId_Name(GadgetPlayStartNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetPlayStartNotify_CmdId_descriptor(), value);
}
inline bool GadgetPlayStartNotify_CmdId_Parse(
    const ::std::string& name, GadgetPlayStartNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetPlayStartNotify_CmdId>(
    GadgetPlayStartNotify_CmdId_descriptor(), name, value);
}
enum GadgetPlayStopNotify_CmdId {
  GadgetPlayStopNotify_CmdId_NONE = 0,
  GadgetPlayStopNotify_CmdId_CMD_ID = 899,
  GadgetPlayStopNotify_CmdId_ENET_CHANNEL_ID = 0,
  GadgetPlayStopNotify_CmdId_ENET_IS_RELIABLE = 1,
  GadgetPlayStopNotify_CmdId_GadgetPlayStopNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetPlayStopNotify_CmdId_GadgetPlayStopNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetPlayStopNotify_CmdId_IsValid(int value);
const GadgetPlayStopNotify_CmdId GadgetPlayStopNotify_CmdId_CmdId_MIN = GadgetPlayStopNotify_CmdId_NONE;
const GadgetPlayStopNotify_CmdId GadgetPlayStopNotify_CmdId_CmdId_MAX = GadgetPlayStopNotify_CmdId_CMD_ID;
const int GadgetPlayStopNotify_CmdId_CmdId_ARRAYSIZE = GadgetPlayStopNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetPlayStopNotify_CmdId_descriptor();
inline const ::std::string& GadgetPlayStopNotify_CmdId_Name(GadgetPlayStopNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetPlayStopNotify_CmdId_descriptor(), value);
}
inline bool GadgetPlayStopNotify_CmdId_Parse(
    const ::std::string& name, GadgetPlayStopNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetPlayStopNotify_CmdId>(
    GadgetPlayStopNotify_CmdId_descriptor(), name, value);
}
enum GadgetPlayDataNotify_CmdId {
  GadgetPlayDataNotify_CmdId_NONE = 0,
  GadgetPlayDataNotify_CmdId_CMD_ID = 831,
  GadgetPlayDataNotify_CmdId_ENET_CHANNEL_ID = 0,
  GadgetPlayDataNotify_CmdId_ENET_IS_RELIABLE = 1,
  GadgetPlayDataNotify_CmdId_GadgetPlayDataNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetPlayDataNotify_CmdId_GadgetPlayDataNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetPlayDataNotify_CmdId_IsValid(int value);
const GadgetPlayDataNotify_CmdId GadgetPlayDataNotify_CmdId_CmdId_MIN = GadgetPlayDataNotify_CmdId_NONE;
const GadgetPlayDataNotify_CmdId GadgetPlayDataNotify_CmdId_CmdId_MAX = GadgetPlayDataNotify_CmdId_CMD_ID;
const int GadgetPlayDataNotify_CmdId_CmdId_ARRAYSIZE = GadgetPlayDataNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetPlayDataNotify_CmdId_descriptor();
inline const ::std::string& GadgetPlayDataNotify_CmdId_Name(GadgetPlayDataNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetPlayDataNotify_CmdId_descriptor(), value);
}
inline bool GadgetPlayDataNotify_CmdId_Parse(
    const ::std::string& name, GadgetPlayDataNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetPlayDataNotify_CmdId>(
    GadgetPlayDataNotify_CmdId_descriptor(), name, value);
}
enum GadgetPlayUidOpNotify_CmdId {
  GadgetPlayUidOpNotify_CmdId_NONE = 0,
  GadgetPlayUidOpNotify_CmdId_CMD_ID = 875,
  GadgetPlayUidOpNotify_CmdId_ENET_CHANNEL_ID = 0,
  GadgetPlayUidOpNotify_CmdId_ENET_IS_RELIABLE = 1,
  GadgetPlayUidOpNotify_CmdId_GadgetPlayUidOpNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetPlayUidOpNotify_CmdId_GadgetPlayUidOpNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetPlayUidOpNotify_CmdId_IsValid(int value);
const GadgetPlayUidOpNotify_CmdId GadgetPlayUidOpNotify_CmdId_CmdId_MIN = GadgetPlayUidOpNotify_CmdId_NONE;
const GadgetPlayUidOpNotify_CmdId GadgetPlayUidOpNotify_CmdId_CmdId_MAX = GadgetPlayUidOpNotify_CmdId_CMD_ID;
const int GadgetPlayUidOpNotify_CmdId_CmdId_ARRAYSIZE = GadgetPlayUidOpNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetPlayUidOpNotify_CmdId_descriptor();
inline const ::std::string& GadgetPlayUidOpNotify_CmdId_Name(GadgetPlayUidOpNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetPlayUidOpNotify_CmdId_descriptor(), value);
}
inline bool GadgetPlayUidOpNotify_CmdId_Parse(
    const ::std::string& name, GadgetPlayUidOpNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetPlayUidOpNotify_CmdId>(
    GadgetPlayUidOpNotify_CmdId_descriptor(), name, value);
}
enum GadgetGeneralRewardInfoNotify_CmdId {
  GadgetGeneralRewardInfoNotify_CmdId_NONE = 0,
  GadgetGeneralRewardInfoNotify_CmdId_CMD_ID = 848,
  GadgetGeneralRewardInfoNotify_CmdId_ENET_CHANNEL_ID = 0,
  GadgetGeneralRewardInfoNotify_CmdId_ENET_IS_RELIABLE = 1,
  GadgetGeneralRewardInfoNotify_CmdId_GadgetGeneralRewardInfoNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetGeneralRewardInfoNotify_CmdId_GadgetGeneralRewardInfoNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetGeneralRewardInfoNotify_CmdId_IsValid(int value);
const GadgetGeneralRewardInfoNotify_CmdId GadgetGeneralRewardInfoNotify_CmdId_CmdId_MIN = GadgetGeneralRewardInfoNotify_CmdId_NONE;
const GadgetGeneralRewardInfoNotify_CmdId GadgetGeneralRewardInfoNotify_CmdId_CmdId_MAX = GadgetGeneralRewardInfoNotify_CmdId_CMD_ID;
const int GadgetGeneralRewardInfoNotify_CmdId_CmdId_ARRAYSIZE = GadgetGeneralRewardInfoNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetGeneralRewardInfoNotify_CmdId_descriptor();
inline const ::std::string& GadgetGeneralRewardInfoNotify_CmdId_Name(GadgetGeneralRewardInfoNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetGeneralRewardInfoNotify_CmdId_descriptor(), value);
}
inline bool GadgetGeneralRewardInfoNotify_CmdId_Parse(
    const ::std::string& name, GadgetGeneralRewardInfoNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetGeneralRewardInfoNotify_CmdId>(
    GadgetGeneralRewardInfoNotify_CmdId_descriptor(), name, value);
}
enum GadgetAutoPickDropInfoNotify_CmdId {
  GadgetAutoPickDropInfoNotify_CmdId_NONE = 0,
  GadgetAutoPickDropInfoNotify_CmdId_CMD_ID = 897,
  GadgetAutoPickDropInfoNotify_CmdId_ENET_CHANNEL_ID = 0,
  GadgetAutoPickDropInfoNotify_CmdId_ENET_IS_RELIABLE = 1,
  GadgetAutoPickDropInfoNotify_CmdId_GadgetAutoPickDropInfoNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetAutoPickDropInfoNotify_CmdId_GadgetAutoPickDropInfoNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetAutoPickDropInfoNotify_CmdId_IsValid(int value);
const GadgetAutoPickDropInfoNotify_CmdId GadgetAutoPickDropInfoNotify_CmdId_CmdId_MIN = GadgetAutoPickDropInfoNotify_CmdId_NONE;
const GadgetAutoPickDropInfoNotify_CmdId GadgetAutoPickDropInfoNotify_CmdId_CmdId_MAX = GadgetAutoPickDropInfoNotify_CmdId_CMD_ID;
const int GadgetAutoPickDropInfoNotify_CmdId_CmdId_ARRAYSIZE = GadgetAutoPickDropInfoNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetAutoPickDropInfoNotify_CmdId_descriptor();
inline const ::std::string& GadgetAutoPickDropInfoNotify_CmdId_Name(GadgetAutoPickDropInfoNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetAutoPickDropInfoNotify_CmdId_descriptor(), value);
}
inline bool GadgetAutoPickDropInfoNotify_CmdId_Parse(
    const ::std::string& name, GadgetAutoPickDropInfoNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetAutoPickDropInfoNotify_CmdId>(
    GadgetAutoPickDropInfoNotify_CmdId_descriptor(), name, value);
}
enum UpdateAbilityCreatedMovingPlatformNotify_CmdId {
  UpdateAbilityCreatedMovingPlatformNotify_CmdId_NONE = 0,
  UpdateAbilityCreatedMovingPlatformNotify_CmdId_CMD_ID = 881,
  UpdateAbilityCreatedMovingPlatformNotify_CmdId_ENET_CHANNEL_ID = 0,
  UpdateAbilityCreatedMovingPlatformNotify_CmdId_ENET_IS_RELIABLE = 1,
  UpdateAbilityCreatedMovingPlatformNotify_CmdId_IS_ALLOW_CLIENT = 1,
  UpdateAbilityCreatedMovingPlatformNotify_CmdId_UpdateAbilityCreatedMovingPlatformNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UpdateAbilityCreatedMovingPlatformNotify_CmdId_UpdateAbilityCreatedMovingPlatformNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UpdateAbilityCreatedMovingPlatformNotify_CmdId_IsValid(int value);
const UpdateAbilityCreatedMovingPlatformNotify_CmdId UpdateAbilityCreatedMovingPlatformNotify_CmdId_CmdId_MIN = UpdateAbilityCreatedMovingPlatformNotify_CmdId_NONE;
const UpdateAbilityCreatedMovingPlatformNotify_CmdId UpdateAbilityCreatedMovingPlatformNotify_CmdId_CmdId_MAX = UpdateAbilityCreatedMovingPlatformNotify_CmdId_CMD_ID;
const int UpdateAbilityCreatedMovingPlatformNotify_CmdId_CmdId_ARRAYSIZE = UpdateAbilityCreatedMovingPlatformNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* UpdateAbilityCreatedMovingPlatformNotify_CmdId_descriptor();
inline const ::std::string& UpdateAbilityCreatedMovingPlatformNotify_CmdId_Name(UpdateAbilityCreatedMovingPlatformNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    UpdateAbilityCreatedMovingPlatformNotify_CmdId_descriptor(), value);
}
inline bool UpdateAbilityCreatedMovingPlatformNotify_CmdId_Parse(
    const ::std::string& name, UpdateAbilityCreatedMovingPlatformNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UpdateAbilityCreatedMovingPlatformNotify_CmdId>(
    UpdateAbilityCreatedMovingPlatformNotify_CmdId_descriptor(), name, value);
}
enum UpdateAbilityCreatedMovingPlatformNotify_OpType {
  UpdateAbilityCreatedMovingPlatformNotify_OpType_OP_NONE = 0,
  UpdateAbilityCreatedMovingPlatformNotify_OpType_OP_ACTIVATE = 1,
  UpdateAbilityCreatedMovingPlatformNotify_OpType_OP_DEACTIVATE = 2,
  UpdateAbilityCreatedMovingPlatformNotify_OpType_UpdateAbilityCreatedMovingPlatformNotify_OpType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UpdateAbilityCreatedMovingPlatformNotify_OpType_UpdateAbilityCreatedMovingPlatformNotify_OpType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UpdateAbilityCreatedMovingPlatformNotify_OpType_IsValid(int value);
const UpdateAbilityCreatedMovingPlatformNotify_OpType UpdateAbilityCreatedMovingPlatformNotify_OpType_OpType_MIN = UpdateAbilityCreatedMovingPlatformNotify_OpType_OP_NONE;
const UpdateAbilityCreatedMovingPlatformNotify_OpType UpdateAbilityCreatedMovingPlatformNotify_OpType_OpType_MAX = UpdateAbilityCreatedMovingPlatformNotify_OpType_OP_DEACTIVATE;
const int UpdateAbilityCreatedMovingPlatformNotify_OpType_OpType_ARRAYSIZE = UpdateAbilityCreatedMovingPlatformNotify_OpType_OpType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UpdateAbilityCreatedMovingPlatformNotify_OpType_descriptor();
inline const ::std::string& UpdateAbilityCreatedMovingPlatformNotify_OpType_Name(UpdateAbilityCreatedMovingPlatformNotify_OpType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UpdateAbilityCreatedMovingPlatformNotify_OpType_descriptor(), value);
}
inline bool UpdateAbilityCreatedMovingPlatformNotify_OpType_Parse(
    const ::std::string& name, UpdateAbilityCreatedMovingPlatformNotify_OpType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UpdateAbilityCreatedMovingPlatformNotify_OpType>(
    UpdateAbilityCreatedMovingPlatformNotify_OpType_descriptor(), name, value);
}
enum FoundationReq_CmdId {
  FoundationReq_CmdId_NONE = 0,
  FoundationReq_CmdId_CMD_ID = 805,
  FoundationReq_CmdId_ENET_CHANNEL_ID = 0,
  FoundationReq_CmdId_ENET_IS_RELIABLE = 1,
  FoundationReq_CmdId_IS_ALLOW_CLIENT = 1,
  FoundationReq_CmdId_FoundationReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FoundationReq_CmdId_FoundationReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FoundationReq_CmdId_IsValid(int value);
const FoundationReq_CmdId FoundationReq_CmdId_CmdId_MIN = FoundationReq_CmdId_NONE;
const FoundationReq_CmdId FoundationReq_CmdId_CmdId_MAX = FoundationReq_CmdId_CMD_ID;
const int FoundationReq_CmdId_CmdId_ARRAYSIZE = FoundationReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* FoundationReq_CmdId_descriptor();
inline const ::std::string& FoundationReq_CmdId_Name(FoundationReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    FoundationReq_CmdId_descriptor(), value);
}
inline bool FoundationReq_CmdId_Parse(
    const ::std::string& name, FoundationReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FoundationReq_CmdId>(
    FoundationReq_CmdId_descriptor(), name, value);
}
enum FoundationRsp_CmdId {
  FoundationRsp_CmdId_NONE = 0,
  FoundationRsp_CmdId_CMD_ID = 882,
  FoundationRsp_CmdId_ENET_CHANNEL_ID = 0,
  FoundationRsp_CmdId_ENET_IS_RELIABLE = 1,
  FoundationRsp_CmdId_FoundationRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FoundationRsp_CmdId_FoundationRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FoundationRsp_CmdId_IsValid(int value);
const FoundationRsp_CmdId FoundationRsp_CmdId_CmdId_MIN = FoundationRsp_CmdId_NONE;
const FoundationRsp_CmdId FoundationRsp_CmdId_CmdId_MAX = FoundationRsp_CmdId_CMD_ID;
const int FoundationRsp_CmdId_CmdId_ARRAYSIZE = FoundationRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* FoundationRsp_CmdId_descriptor();
inline const ::std::string& FoundationRsp_CmdId_Name(FoundationRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    FoundationRsp_CmdId_descriptor(), value);
}
inline bool FoundationRsp_CmdId_Parse(
    const ::std::string& name, FoundationRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FoundationRsp_CmdId>(
    FoundationRsp_CmdId_descriptor(), name, value);
}
enum FoundationNotify_CmdId {
  FoundationNotify_CmdId_NONE = 0,
  FoundationNotify_CmdId_CMD_ID = 847,
  FoundationNotify_CmdId_ENET_CHANNEL_ID = 0,
  FoundationNotify_CmdId_ENET_IS_RELIABLE = 1,
  FoundationNotify_CmdId_FoundationNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FoundationNotify_CmdId_FoundationNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FoundationNotify_CmdId_IsValid(int value);
const FoundationNotify_CmdId FoundationNotify_CmdId_CmdId_MIN = FoundationNotify_CmdId_NONE;
const FoundationNotify_CmdId FoundationNotify_CmdId_CmdId_MAX = FoundationNotify_CmdId_CMD_ID;
const int FoundationNotify_CmdId_CmdId_ARRAYSIZE = FoundationNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* FoundationNotify_CmdId_descriptor();
inline const ::std::string& FoundationNotify_CmdId_Name(FoundationNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    FoundationNotify_CmdId_descriptor(), value);
}
inline bool FoundationNotify_CmdId_Parse(
    const ::std::string& name, FoundationNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FoundationNotify_CmdId>(
    FoundationNotify_CmdId_descriptor(), name, value);
}
enum GadgetTalkChangeNotify_CmdId {
  GadgetTalkChangeNotify_CmdId_NONE = 0,
  GadgetTalkChangeNotify_CmdId_CMD_ID = 839,
  GadgetTalkChangeNotify_CmdId_ENET_CHANNEL_ID = 0,
  GadgetTalkChangeNotify_CmdId_ENET_IS_RELIABLE = 1,
  GadgetTalkChangeNotify_CmdId_GadgetTalkChangeNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetTalkChangeNotify_CmdId_GadgetTalkChangeNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetTalkChangeNotify_CmdId_IsValid(int value);
const GadgetTalkChangeNotify_CmdId GadgetTalkChangeNotify_CmdId_CmdId_MIN = GadgetTalkChangeNotify_CmdId_NONE;
const GadgetTalkChangeNotify_CmdId GadgetTalkChangeNotify_CmdId_CmdId_MAX = GadgetTalkChangeNotify_CmdId_CMD_ID;
const int GadgetTalkChangeNotify_CmdId_CmdId_ARRAYSIZE = GadgetTalkChangeNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetTalkChangeNotify_CmdId_descriptor();
inline const ::std::string& GadgetTalkChangeNotify_CmdId_Name(GadgetTalkChangeNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetTalkChangeNotify_CmdId_descriptor(), value);
}
inline bool GadgetTalkChangeNotify_CmdId_Parse(
    const ::std::string& name, GadgetTalkChangeNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetTalkChangeNotify_CmdId>(
    GadgetTalkChangeNotify_CmdId_descriptor(), name, value);
}
enum GadgetChainLevelUpdateNotify_CmdId {
  GadgetChainLevelUpdateNotify_CmdId_NONE = 0,
  GadgetChainLevelUpdateNotify_CmdId_CMD_ID = 853,
  GadgetChainLevelUpdateNotify_CmdId_ENET_CHANNEL_ID = 0,
  GadgetChainLevelUpdateNotify_CmdId_ENET_IS_RELIABLE = 1,
  GadgetChainLevelUpdateNotify_CmdId_GadgetChainLevelUpdateNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetChainLevelUpdateNotify_CmdId_GadgetChainLevelUpdateNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetChainLevelUpdateNotify_CmdId_IsValid(int value);
const GadgetChainLevelUpdateNotify_CmdId GadgetChainLevelUpdateNotify_CmdId_CmdId_MIN = GadgetChainLevelUpdateNotify_CmdId_NONE;
const GadgetChainLevelUpdateNotify_CmdId GadgetChainLevelUpdateNotify_CmdId_CmdId_MAX = GadgetChainLevelUpdateNotify_CmdId_CMD_ID;
const int GadgetChainLevelUpdateNotify_CmdId_CmdId_ARRAYSIZE = GadgetChainLevelUpdateNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetChainLevelUpdateNotify_CmdId_descriptor();
inline const ::std::string& GadgetChainLevelUpdateNotify_CmdId_Name(GadgetChainLevelUpdateNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetChainLevelUpdateNotify_CmdId_descriptor(), value);
}
inline bool GadgetChainLevelUpdateNotify_CmdId_Parse(
    const ::std::string& name, GadgetChainLevelUpdateNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetChainLevelUpdateNotify_CmdId>(
    GadgetChainLevelUpdateNotify_CmdId_descriptor(), name, value);
}
enum GadgetChainLevelChangeNotify_CmdId {
  GadgetChainLevelChangeNotify_CmdId_NONE = 0,
  GadgetChainLevelChangeNotify_CmdId_CMD_ID = 822,
  GadgetChainLevelChangeNotify_CmdId_ENET_CHANNEL_ID = 0,
  GadgetChainLevelChangeNotify_CmdId_ENET_IS_RELIABLE = 1,
  GadgetChainLevelChangeNotify_CmdId_GadgetChainLevelChangeNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetChainLevelChangeNotify_CmdId_GadgetChainLevelChangeNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetChainLevelChangeNotify_CmdId_IsValid(int value);
const GadgetChainLevelChangeNotify_CmdId GadgetChainLevelChangeNotify_CmdId_CmdId_MIN = GadgetChainLevelChangeNotify_CmdId_NONE;
const GadgetChainLevelChangeNotify_CmdId GadgetChainLevelChangeNotify_CmdId_CmdId_MAX = GadgetChainLevelChangeNotify_CmdId_CMD_ID;
const int GadgetChainLevelChangeNotify_CmdId_CmdId_ARRAYSIZE = GadgetChainLevelChangeNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetChainLevelChangeNotify_CmdId_descriptor();
inline const ::std::string& GadgetChainLevelChangeNotify_CmdId_Name(GadgetChainLevelChangeNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetChainLevelChangeNotify_CmdId_descriptor(), value);
}
inline bool GadgetChainLevelChangeNotify_CmdId_Parse(
    const ::std::string& name, GadgetChainLevelChangeNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetChainLevelChangeNotify_CmdId>(
    GadgetChainLevelChangeNotify_CmdId_descriptor(), name, value);
}
enum VehicleInteractReq_CmdId {
  VehicleInteractReq_CmdId_NONE = 0,
  VehicleInteractReq_CmdId_CMD_ID = 865,
  VehicleInteractReq_CmdId_ENET_CHANNEL_ID = 0,
  VehicleInteractReq_CmdId_ENET_IS_RELIABLE = 1,
  VehicleInteractReq_CmdId_IS_ALLOW_CLIENT = 1,
  VehicleInteractReq_CmdId_VehicleInteractReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VehicleInteractReq_CmdId_VehicleInteractReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VehicleInteractReq_CmdId_IsValid(int value);
const VehicleInteractReq_CmdId VehicleInteractReq_CmdId_CmdId_MIN = VehicleInteractReq_CmdId_NONE;
const VehicleInteractReq_CmdId VehicleInteractReq_CmdId_CmdId_MAX = VehicleInteractReq_CmdId_CMD_ID;
const int VehicleInteractReq_CmdId_CmdId_ARRAYSIZE = VehicleInteractReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* VehicleInteractReq_CmdId_descriptor();
inline const ::std::string& VehicleInteractReq_CmdId_Name(VehicleInteractReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    VehicleInteractReq_CmdId_descriptor(), value);
}
inline bool VehicleInteractReq_CmdId_Parse(
    const ::std::string& name, VehicleInteractReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VehicleInteractReq_CmdId>(
    VehicleInteractReq_CmdId_descriptor(), name, value);
}
enum VehicleInteractRsp_CmdId {
  VehicleInteractRsp_CmdId_NONE = 0,
  VehicleInteractRsp_CmdId_CMD_ID = 804,
  VehicleInteractRsp_CmdId_ENET_CHANNEL_ID = 0,
  VehicleInteractRsp_CmdId_ENET_IS_RELIABLE = 1,
  VehicleInteractRsp_CmdId_VehicleInteractRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VehicleInteractRsp_CmdId_VehicleInteractRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VehicleInteractRsp_CmdId_IsValid(int value);
const VehicleInteractRsp_CmdId VehicleInteractRsp_CmdId_CmdId_MIN = VehicleInteractRsp_CmdId_NONE;
const VehicleInteractRsp_CmdId VehicleInteractRsp_CmdId_CmdId_MAX = VehicleInteractRsp_CmdId_CMD_ID;
const int VehicleInteractRsp_CmdId_CmdId_ARRAYSIZE = VehicleInteractRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* VehicleInteractRsp_CmdId_descriptor();
inline const ::std::string& VehicleInteractRsp_CmdId_Name(VehicleInteractRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    VehicleInteractRsp_CmdId_descriptor(), value);
}
inline bool VehicleInteractRsp_CmdId_Parse(
    const ::std::string& name, VehicleInteractRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VehicleInteractRsp_CmdId>(
    VehicleInteractRsp_CmdId_descriptor(), name, value);
}
enum CreateVehicleReq_CmdId {
  CreateVehicleReq_CmdId_NONE = 0,
  CreateVehicleReq_CmdId_CMD_ID = 893,
  CreateVehicleReq_CmdId_ENET_CHANNEL_ID = 0,
  CreateVehicleReq_CmdId_ENET_IS_RELIABLE = 1,
  CreateVehicleReq_CmdId_IS_ALLOW_CLIENT = 1,
  CreateVehicleReq_CmdId_CreateVehicleReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CreateVehicleReq_CmdId_CreateVehicleReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CreateVehicleReq_CmdId_IsValid(int value);
const CreateVehicleReq_CmdId CreateVehicleReq_CmdId_CmdId_MIN = CreateVehicleReq_CmdId_NONE;
const CreateVehicleReq_CmdId CreateVehicleReq_CmdId_CmdId_MAX = CreateVehicleReq_CmdId_CMD_ID;
const int CreateVehicleReq_CmdId_CmdId_ARRAYSIZE = CreateVehicleReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CreateVehicleReq_CmdId_descriptor();
inline const ::std::string& CreateVehicleReq_CmdId_Name(CreateVehicleReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CreateVehicleReq_CmdId_descriptor(), value);
}
inline bool CreateVehicleReq_CmdId_Parse(
    const ::std::string& name, CreateVehicleReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateVehicleReq_CmdId>(
    CreateVehicleReq_CmdId_descriptor(), name, value);
}
enum CreateVehicleRsp_CmdId {
  CreateVehicleRsp_CmdId_NONE = 0,
  CreateVehicleRsp_CmdId_CMD_ID = 827,
  CreateVehicleRsp_CmdId_ENET_CHANNEL_ID = 0,
  CreateVehicleRsp_CmdId_ENET_IS_RELIABLE = 1,
  CreateVehicleRsp_CmdId_CreateVehicleRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CreateVehicleRsp_CmdId_CreateVehicleRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CreateVehicleRsp_CmdId_IsValid(int value);
const CreateVehicleRsp_CmdId CreateVehicleRsp_CmdId_CmdId_MIN = CreateVehicleRsp_CmdId_NONE;
const CreateVehicleRsp_CmdId CreateVehicleRsp_CmdId_CmdId_MAX = CreateVehicleRsp_CmdId_CMD_ID;
const int CreateVehicleRsp_CmdId_CmdId_ARRAYSIZE = CreateVehicleRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CreateVehicleRsp_CmdId_descriptor();
inline const ::std::string& CreateVehicleRsp_CmdId_Name(CreateVehicleRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CreateVehicleRsp_CmdId_descriptor(), value);
}
inline bool CreateVehicleRsp_CmdId_Parse(
    const ::std::string& name, CreateVehicleRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateVehicleRsp_CmdId>(
    CreateVehicleRsp_CmdId_descriptor(), name, value);
}
enum RequestLiveInfoReq_CmdId {
  RequestLiveInfoReq_CmdId_NONE = 0,
  RequestLiveInfoReq_CmdId_CMD_ID = 894,
  RequestLiveInfoReq_CmdId_ENET_CHANNEL_ID = 0,
  RequestLiveInfoReq_CmdId_ENET_IS_RELIABLE = 1,
  RequestLiveInfoReq_CmdId_IS_ALLOW_CLIENT = 1,
  RequestLiveInfoReq_CmdId_RequestLiveInfoReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RequestLiveInfoReq_CmdId_RequestLiveInfoReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RequestLiveInfoReq_CmdId_IsValid(int value);
const RequestLiveInfoReq_CmdId RequestLiveInfoReq_CmdId_CmdId_MIN = RequestLiveInfoReq_CmdId_NONE;
const RequestLiveInfoReq_CmdId RequestLiveInfoReq_CmdId_CmdId_MAX = RequestLiveInfoReq_CmdId_CMD_ID;
const int RequestLiveInfoReq_CmdId_CmdId_ARRAYSIZE = RequestLiveInfoReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* RequestLiveInfoReq_CmdId_descriptor();
inline const ::std::string& RequestLiveInfoReq_CmdId_Name(RequestLiveInfoReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    RequestLiveInfoReq_CmdId_descriptor(), value);
}
inline bool RequestLiveInfoReq_CmdId_Parse(
    const ::std::string& name, RequestLiveInfoReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RequestLiveInfoReq_CmdId>(
    RequestLiveInfoReq_CmdId_descriptor(), name, value);
}
enum RequestLiveInfoRsp_CmdId {
  RequestLiveInfoRsp_CmdId_NONE = 0,
  RequestLiveInfoRsp_CmdId_CMD_ID = 888,
  RequestLiveInfoRsp_CmdId_ENET_CHANNEL_ID = 0,
  RequestLiveInfoRsp_CmdId_ENET_IS_RELIABLE = 1,
  RequestLiveInfoRsp_CmdId_RequestLiveInfoRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RequestLiveInfoRsp_CmdId_RequestLiveInfoRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RequestLiveInfoRsp_CmdId_IsValid(int value);
const RequestLiveInfoRsp_CmdId RequestLiveInfoRsp_CmdId_CmdId_MIN = RequestLiveInfoRsp_CmdId_NONE;
const RequestLiveInfoRsp_CmdId RequestLiveInfoRsp_CmdId_CmdId_MAX = RequestLiveInfoRsp_CmdId_CMD_ID;
const int RequestLiveInfoRsp_CmdId_CmdId_ARRAYSIZE = RequestLiveInfoRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* RequestLiveInfoRsp_CmdId_descriptor();
inline const ::std::string& RequestLiveInfoRsp_CmdId_Name(RequestLiveInfoRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    RequestLiveInfoRsp_CmdId_descriptor(), value);
}
inline bool RequestLiveInfoRsp_CmdId_Parse(
    const ::std::string& name, RequestLiveInfoRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RequestLiveInfoRsp_CmdId>(
    RequestLiveInfoRsp_CmdId_descriptor(), name, value);
}
enum LiveStartNotify_CmdId {
  LiveStartNotify_CmdId_NONE = 0,
  LiveStartNotify_CmdId_CMD_ID = 826,
  LiveStartNotify_CmdId_ENET_CHANNEL_ID = 0,
  LiveStartNotify_CmdId_ENET_IS_RELIABLE = 1,
  LiveStartNotify_CmdId_LiveStartNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LiveStartNotify_CmdId_LiveStartNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LiveStartNotify_CmdId_IsValid(int value);
const LiveStartNotify_CmdId LiveStartNotify_CmdId_CmdId_MIN = LiveStartNotify_CmdId_NONE;
const LiveStartNotify_CmdId LiveStartNotify_CmdId_CmdId_MAX = LiveStartNotify_CmdId_CMD_ID;
const int LiveStartNotify_CmdId_CmdId_ARRAYSIZE = LiveStartNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* LiveStartNotify_CmdId_descriptor();
inline const ::std::string& LiveStartNotify_CmdId_Name(LiveStartNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    LiveStartNotify_CmdId_descriptor(), value);
}
inline bool LiveStartNotify_CmdId_Parse(
    const ::std::string& name, LiveStartNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LiveStartNotify_CmdId>(
    LiveStartNotify_CmdId_descriptor(), name, value);
}
enum ProjectorOptionReq_CmdId {
  ProjectorOptionReq_CmdId_NONE = 0,
  ProjectorOptionReq_CmdId_CMD_ID = 863,
  ProjectorOptionReq_CmdId_ENET_CHANNEL_ID = 0,
  ProjectorOptionReq_CmdId_ENET_IS_RELIABLE = 1,
  ProjectorOptionReq_CmdId_IS_ALLOW_CLIENT = 1,
  ProjectorOptionReq_CmdId_ProjectorOptionReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ProjectorOptionReq_CmdId_ProjectorOptionReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ProjectorOptionReq_CmdId_IsValid(int value);
const ProjectorOptionReq_CmdId ProjectorOptionReq_CmdId_CmdId_MIN = ProjectorOptionReq_CmdId_NONE;
const ProjectorOptionReq_CmdId ProjectorOptionReq_CmdId_CmdId_MAX = ProjectorOptionReq_CmdId_CMD_ID;
const int ProjectorOptionReq_CmdId_CmdId_ARRAYSIZE = ProjectorOptionReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProjectorOptionReq_CmdId_descriptor();
inline const ::std::string& ProjectorOptionReq_CmdId_Name(ProjectorOptionReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProjectorOptionReq_CmdId_descriptor(), value);
}
inline bool ProjectorOptionReq_CmdId_Parse(
    const ::std::string& name, ProjectorOptionReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProjectorOptionReq_CmdId>(
    ProjectorOptionReq_CmdId_descriptor(), name, value);
}
enum ProjectorOptionReq_ProjectorOpType {
  ProjectorOptionReq_ProjectorOpType_PROJECTOR_OP_NONE = 0,
  ProjectorOptionReq_ProjectorOpType_PROJECTOR_OP_CREATE = 1,
  ProjectorOptionReq_ProjectorOpType_PROJECTOR_OP_DESTROY = 2,
  ProjectorOptionReq_ProjectorOpType_ProjectorOptionReq_ProjectorOpType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ProjectorOptionReq_ProjectorOpType_ProjectorOptionReq_ProjectorOpType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ProjectorOptionReq_ProjectorOpType_IsValid(int value);
const ProjectorOptionReq_ProjectorOpType ProjectorOptionReq_ProjectorOpType_ProjectorOpType_MIN = ProjectorOptionReq_ProjectorOpType_PROJECTOR_OP_NONE;
const ProjectorOptionReq_ProjectorOpType ProjectorOptionReq_ProjectorOpType_ProjectorOpType_MAX = ProjectorOptionReq_ProjectorOpType_PROJECTOR_OP_DESTROY;
const int ProjectorOptionReq_ProjectorOpType_ProjectorOpType_ARRAYSIZE = ProjectorOptionReq_ProjectorOpType_ProjectorOpType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProjectorOptionReq_ProjectorOpType_descriptor();
inline const ::std::string& ProjectorOptionReq_ProjectorOpType_Name(ProjectorOptionReq_ProjectorOpType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProjectorOptionReq_ProjectorOpType_descriptor(), value);
}
inline bool ProjectorOptionReq_ProjectorOpType_Parse(
    const ::std::string& name, ProjectorOptionReq_ProjectorOpType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProjectorOptionReq_ProjectorOpType>(
    ProjectorOptionReq_ProjectorOpType_descriptor(), name, value);
}
enum ProjectorOptionRsp_CmdId {
  ProjectorOptionRsp_CmdId_NONE = 0,
  ProjectorOptionRsp_CmdId_CMD_ID = 895,
  ProjectorOptionRsp_CmdId_ENET_CHANNEL_ID = 0,
  ProjectorOptionRsp_CmdId_ENET_IS_RELIABLE = 1,
  ProjectorOptionRsp_CmdId_ProjectorOptionRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ProjectorOptionRsp_CmdId_ProjectorOptionRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ProjectorOptionRsp_CmdId_IsValid(int value);
const ProjectorOptionRsp_CmdId ProjectorOptionRsp_CmdId_CmdId_MIN = ProjectorOptionRsp_CmdId_NONE;
const ProjectorOptionRsp_CmdId ProjectorOptionRsp_CmdId_CmdId_MAX = ProjectorOptionRsp_CmdId_CMD_ID;
const int ProjectorOptionRsp_CmdId_CmdId_ARRAYSIZE = ProjectorOptionRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProjectorOptionRsp_CmdId_descriptor();
inline const ::std::string& ProjectorOptionRsp_CmdId_Name(ProjectorOptionRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProjectorOptionRsp_CmdId_descriptor(), value);
}
inline bool ProjectorOptionRsp_CmdId_Parse(
    const ::std::string& name, ProjectorOptionRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProjectorOptionRsp_CmdId>(
    ProjectorOptionRsp_CmdId_descriptor(), name, value);
}
enum LiveEndNotify_CmdId {
  LiveEndNotify_CmdId_NONE = 0,
  LiveEndNotify_CmdId_CMD_ID = 806,
  LiveEndNotify_CmdId_ENET_CHANNEL_ID = 0,
  LiveEndNotify_CmdId_ENET_IS_RELIABLE = 1,
  LiveEndNotify_CmdId_LiveEndNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LiveEndNotify_CmdId_LiveEndNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LiveEndNotify_CmdId_IsValid(int value);
const LiveEndNotify_CmdId LiveEndNotify_CmdId_CmdId_MIN = LiveEndNotify_CmdId_NONE;
const LiveEndNotify_CmdId LiveEndNotify_CmdId_CmdId_MAX = LiveEndNotify_CmdId_CMD_ID;
const int LiveEndNotify_CmdId_CmdId_ARRAYSIZE = LiveEndNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* LiveEndNotify_CmdId_descriptor();
inline const ::std::string& LiveEndNotify_CmdId_Name(LiveEndNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    LiveEndNotify_CmdId_descriptor(), value);
}
inline bool LiveEndNotify_CmdId_Parse(
    const ::std::string& name, LiveEndNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LiveEndNotify_CmdId>(
    LiveEndNotify_CmdId_descriptor(), name, value);
}
enum VehicleStaminaNotify_CmdId {
  VehicleStaminaNotify_CmdId_NONE = 0,
  VehicleStaminaNotify_CmdId_CMD_ID = 834,
  VehicleStaminaNotify_CmdId_ENET_CHANNEL_ID = 0,
  VehicleStaminaNotify_CmdId_ENET_IS_RELIABLE = 1,
  VehicleStaminaNotify_CmdId_VehicleStaminaNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VehicleStaminaNotify_CmdId_VehicleStaminaNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VehicleStaminaNotify_CmdId_IsValid(int value);
const VehicleStaminaNotify_CmdId VehicleStaminaNotify_CmdId_CmdId_MIN = VehicleStaminaNotify_CmdId_NONE;
const VehicleStaminaNotify_CmdId VehicleStaminaNotify_CmdId_CmdId_MAX = VehicleStaminaNotify_CmdId_CMD_ID;
const int VehicleStaminaNotify_CmdId_CmdId_ARRAYSIZE = VehicleStaminaNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* VehicleStaminaNotify_CmdId_descriptor();
inline const ::std::string& VehicleStaminaNotify_CmdId_Name(VehicleStaminaNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    VehicleStaminaNotify_CmdId_descriptor(), value);
}
inline bool VehicleStaminaNotify_CmdId_Parse(
    const ::std::string& name, VehicleStaminaNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VehicleStaminaNotify_CmdId>(
    VehicleStaminaNotify_CmdId_descriptor(), name, value);
}
enum GadgetCustomTreeInfoNotify_CmdId {
  GadgetCustomTreeInfoNotify_CmdId_NONE = 0,
  GadgetCustomTreeInfoNotify_CmdId_CMD_ID = 850,
  GadgetCustomTreeInfoNotify_CmdId_ENET_CHANNEL_ID = 0,
  GadgetCustomTreeInfoNotify_CmdId_ENET_IS_RELIABLE = 1,
  GadgetCustomTreeInfoNotify_CmdId_GadgetCustomTreeInfoNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetCustomTreeInfoNotify_CmdId_GadgetCustomTreeInfoNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetCustomTreeInfoNotify_CmdId_IsValid(int value);
const GadgetCustomTreeInfoNotify_CmdId GadgetCustomTreeInfoNotify_CmdId_CmdId_MIN = GadgetCustomTreeInfoNotify_CmdId_NONE;
const GadgetCustomTreeInfoNotify_CmdId GadgetCustomTreeInfoNotify_CmdId_CmdId_MAX = GadgetCustomTreeInfoNotify_CmdId_CMD_ID;
const int GadgetCustomTreeInfoNotify_CmdId_CmdId_ARRAYSIZE = GadgetCustomTreeInfoNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetCustomTreeInfoNotify_CmdId_descriptor();
inline const ::std::string& GadgetCustomTreeInfoNotify_CmdId_Name(GadgetCustomTreeInfoNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetCustomTreeInfoNotify_CmdId_descriptor(), value);
}
inline bool GadgetCustomTreeInfoNotify_CmdId_Parse(
    const ::std::string& name, GadgetCustomTreeInfoNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetCustomTreeInfoNotify_CmdId>(
    GadgetCustomTreeInfoNotify_CmdId_descriptor(), name, value);
}
enum GadgetChangeLevelTagReq_CmdId {
  GadgetChangeLevelTagReq_CmdId_NONE = 0,
  GadgetChangeLevelTagReq_CmdId_CMD_ID = 843,
  GadgetChangeLevelTagReq_CmdId_ENET_CHANNEL_ID = 0,
  GadgetChangeLevelTagReq_CmdId_ENET_IS_RELIABLE = 1,
  GadgetChangeLevelTagReq_CmdId_IS_ALLOW_CLIENT = 1,
  GadgetChangeLevelTagReq_CmdId_GadgetChangeLevelTagReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetChangeLevelTagReq_CmdId_GadgetChangeLevelTagReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetChangeLevelTagReq_CmdId_IsValid(int value);
const GadgetChangeLevelTagReq_CmdId GadgetChangeLevelTagReq_CmdId_CmdId_MIN = GadgetChangeLevelTagReq_CmdId_NONE;
const GadgetChangeLevelTagReq_CmdId GadgetChangeLevelTagReq_CmdId_CmdId_MAX = GadgetChangeLevelTagReq_CmdId_CMD_ID;
const int GadgetChangeLevelTagReq_CmdId_CmdId_ARRAYSIZE = GadgetChangeLevelTagReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetChangeLevelTagReq_CmdId_descriptor();
inline const ::std::string& GadgetChangeLevelTagReq_CmdId_Name(GadgetChangeLevelTagReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetChangeLevelTagReq_CmdId_descriptor(), value);
}
inline bool GadgetChangeLevelTagReq_CmdId_Parse(
    const ::std::string& name, GadgetChangeLevelTagReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetChangeLevelTagReq_CmdId>(
    GadgetChangeLevelTagReq_CmdId_descriptor(), name, value);
}
enum GadgetChangeLevelTagRsp_CmdId {
  GadgetChangeLevelTagRsp_CmdId_NONE = 0,
  GadgetChangeLevelTagRsp_CmdId_CMD_ID = 874,
  GadgetChangeLevelTagRsp_CmdId_ENET_CHANNEL_ID = 0,
  GadgetChangeLevelTagRsp_CmdId_ENET_IS_RELIABLE = 1,
  GadgetChangeLevelTagRsp_CmdId_GadgetChangeLevelTagRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetChangeLevelTagRsp_CmdId_GadgetChangeLevelTagRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetChangeLevelTagRsp_CmdId_IsValid(int value);
const GadgetChangeLevelTagRsp_CmdId GadgetChangeLevelTagRsp_CmdId_CmdId_MIN = GadgetChangeLevelTagRsp_CmdId_NONE;
const GadgetChangeLevelTagRsp_CmdId GadgetChangeLevelTagRsp_CmdId_CmdId_MAX = GadgetChangeLevelTagRsp_CmdId_CMD_ID;
const int GadgetChangeLevelTagRsp_CmdId_CmdId_ARRAYSIZE = GadgetChangeLevelTagRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetChangeLevelTagRsp_CmdId_descriptor();
inline const ::std::string& GadgetChangeLevelTagRsp_CmdId_Name(GadgetChangeLevelTagRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetChangeLevelTagRsp_CmdId_descriptor(), value);
}
inline bool GadgetChangeLevelTagRsp_CmdId_Parse(
    const ::std::string& name, GadgetChangeLevelTagRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetChangeLevelTagRsp_CmdId>(
    GadgetChangeLevelTagRsp_CmdId_descriptor(), name, value);
}
enum NightCrowGadgetObservationMatchReq_CmdId {
  NightCrowGadgetObservationMatchReq_CmdId_NONE = 0,
  NightCrowGadgetObservationMatchReq_CmdId_CMD_ID = 876,
  NightCrowGadgetObservationMatchReq_CmdId_ENET_CHANNEL_ID = 0,
  NightCrowGadgetObservationMatchReq_CmdId_ENET_IS_RELIABLE = 1,
  NightCrowGadgetObservationMatchReq_CmdId_IS_ALLOW_CLIENT = 1,
  NightCrowGadgetObservationMatchReq_CmdId_NightCrowGadgetObservationMatchReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NightCrowGadgetObservationMatchReq_CmdId_NightCrowGadgetObservationMatchReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NightCrowGadgetObservationMatchReq_CmdId_IsValid(int value);
const NightCrowGadgetObservationMatchReq_CmdId NightCrowGadgetObservationMatchReq_CmdId_CmdId_MIN = NightCrowGadgetObservationMatchReq_CmdId_NONE;
const NightCrowGadgetObservationMatchReq_CmdId NightCrowGadgetObservationMatchReq_CmdId_CmdId_MAX = NightCrowGadgetObservationMatchReq_CmdId_CMD_ID;
const int NightCrowGadgetObservationMatchReq_CmdId_CmdId_ARRAYSIZE = NightCrowGadgetObservationMatchReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* NightCrowGadgetObservationMatchReq_CmdId_descriptor();
inline const ::std::string& NightCrowGadgetObservationMatchReq_CmdId_Name(NightCrowGadgetObservationMatchReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    NightCrowGadgetObservationMatchReq_CmdId_descriptor(), value);
}
inline bool NightCrowGadgetObservationMatchReq_CmdId_Parse(
    const ::std::string& name, NightCrowGadgetObservationMatchReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NightCrowGadgetObservationMatchReq_CmdId>(
    NightCrowGadgetObservationMatchReq_CmdId_descriptor(), name, value);
}
enum NightCrowGadgetObservationMatchRsp_CmdId {
  NightCrowGadgetObservationMatchRsp_CmdId_NONE = 0,
  NightCrowGadgetObservationMatchRsp_CmdId_CMD_ID = 846,
  NightCrowGadgetObservationMatchRsp_CmdId_ENET_CHANNEL_ID = 0,
  NightCrowGadgetObservationMatchRsp_CmdId_ENET_IS_RELIABLE = 1,
  NightCrowGadgetObservationMatchRsp_CmdId_NightCrowGadgetObservationMatchRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NightCrowGadgetObservationMatchRsp_CmdId_NightCrowGadgetObservationMatchRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NightCrowGadgetObservationMatchRsp_CmdId_IsValid(int value);
const NightCrowGadgetObservationMatchRsp_CmdId NightCrowGadgetObservationMatchRsp_CmdId_CmdId_MIN = NightCrowGadgetObservationMatchRsp_CmdId_NONE;
const NightCrowGadgetObservationMatchRsp_CmdId NightCrowGadgetObservationMatchRsp_CmdId_CmdId_MAX = NightCrowGadgetObservationMatchRsp_CmdId_CMD_ID;
const int NightCrowGadgetObservationMatchRsp_CmdId_CmdId_ARRAYSIZE = NightCrowGadgetObservationMatchRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* NightCrowGadgetObservationMatchRsp_CmdId_descriptor();
inline const ::std::string& NightCrowGadgetObservationMatchRsp_CmdId_Name(NightCrowGadgetObservationMatchRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    NightCrowGadgetObservationMatchRsp_CmdId_descriptor(), value);
}
inline bool NightCrowGadgetObservationMatchRsp_CmdId_Parse(
    const ::std::string& name, NightCrowGadgetObservationMatchRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NightCrowGadgetObservationMatchRsp_CmdId>(
    NightCrowGadgetObservationMatchRsp_CmdId_descriptor(), name, value);
}
enum DeshretObeliskChestInfoNotify_CmdId {
  DeshretObeliskChestInfoNotify_CmdId_NONE = 0,
  DeshretObeliskChestInfoNotify_CmdId_CMD_ID = 841,
  DeshretObeliskChestInfoNotify_CmdId_ENET_CHANNEL_ID = 0,
  DeshretObeliskChestInfoNotify_CmdId_ENET_IS_RELIABLE = 1,
  DeshretObeliskChestInfoNotify_CmdId_DeshretObeliskChestInfoNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DeshretObeliskChestInfoNotify_CmdId_DeshretObeliskChestInfoNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DeshretObeliskChestInfoNotify_CmdId_IsValid(int value);
const DeshretObeliskChestInfoNotify_CmdId DeshretObeliskChestInfoNotify_CmdId_CmdId_MIN = DeshretObeliskChestInfoNotify_CmdId_NONE;
const DeshretObeliskChestInfoNotify_CmdId DeshretObeliskChestInfoNotify_CmdId_CmdId_MAX = DeshretObeliskChestInfoNotify_CmdId_CMD_ID;
const int DeshretObeliskChestInfoNotify_CmdId_CmdId_ARRAYSIZE = DeshretObeliskChestInfoNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* DeshretObeliskChestInfoNotify_CmdId_descriptor();
inline const ::std::string& DeshretObeliskChestInfoNotify_CmdId_Name(DeshretObeliskChestInfoNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    DeshretObeliskChestInfoNotify_CmdId_descriptor(), value);
}
inline bool DeshretObeliskChestInfoNotify_CmdId_Parse(
    const ::std::string& name, DeshretObeliskChestInfoNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeshretObeliskChestInfoNotify_CmdId>(
    DeshretObeliskChestInfoNotify_CmdId_descriptor(), name, value);
}
enum InteractType {
  INTERACT_NONE = 0,
  INTERACT_PICK_ITEM = 1,
  INTERACT_GATHER = 2,
  INTERACT_OPEN_CHEST = 3,
  INTERACT_OPEN_STATUE = 4,
  INTERACT_CONSUM = 5,
  INTERACT_MP_PLAY_REWARD = 6,
  INTERACT_VIEW = 7,
  INTERACT_GENERAL_REWARD = 8,
  INTERACT_MIRACLE_RING = 9,
  INTERACT_FOUNDATION = 10,
  INTERACT_ECHO_SHELL = 11,
  INTERACT_HOME_GATHER = 12,
  INTERACT_ENV_ANIMAL = 13,
  INTERACT_QUEST_GADGET = 14,
  INTERACT_UI_INTERACT = 15,
  INTERACT_DESHRET_OBELISK = 16,
  InteractType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InteractType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InteractType_IsValid(int value);
const InteractType InteractType_MIN = INTERACT_NONE;
const InteractType InteractType_MAX = INTERACT_DESHRET_OBELISK;
const int InteractType_ARRAYSIZE = InteractType_MAX + 1;

const ::google::protobuf::EnumDescriptor* InteractType_descriptor();
inline const ::std::string& InteractType_Name(InteractType value) {
  return ::google::protobuf::internal::NameOfEnum(
    InteractType_descriptor(), value);
}
inline bool InteractType_Parse(
    const ::std::string& name, InteractType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InteractType>(
    InteractType_descriptor(), name, value);
}
enum InterOpType {
  INTER_OP_FINISH = 0,
  INTER_OP_START = 1,
  InterOpType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InterOpType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InterOpType_IsValid(int value);
const InterOpType InterOpType_MIN = INTER_OP_FINISH;
const InterOpType InterOpType_MAX = INTER_OP_START;
const int InterOpType_ARRAYSIZE = InterOpType_MAX + 1;

const ::google::protobuf::EnumDescriptor* InterOpType_descriptor();
inline const ::std::string& InterOpType_Name(InterOpType value) {
  return ::google::protobuf::internal::NameOfEnum(
    InterOpType_descriptor(), value);
}
inline bool InterOpType_Parse(
    const ::std::string& name, InterOpType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InterOpType>(
    InterOpType_descriptor(), name, value);
}
enum ResinCostType {
  RESIN_COST_TYPE_NONE = 0,
  RESIN_COST_TYPE_NORMAL = 1,
  RESIN_COST_TYPE_CONDENSE = 2,
  RESIN_COST_TYPE_REUNION_PRIVILEGE = 3,
  RESIN_COST_TYPE_OP_ACTIVITY = 4,
  RESIN_COST_TYPE_MATERIAL = 5,
  ResinCostType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ResinCostType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ResinCostType_IsValid(int value);
const ResinCostType ResinCostType_MIN = RESIN_COST_TYPE_NONE;
const ResinCostType ResinCostType_MAX = RESIN_COST_TYPE_MATERIAL;
const int ResinCostType_ARRAYSIZE = ResinCostType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResinCostType_descriptor();
inline const ::std::string& ResinCostType_Name(ResinCostType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResinCostType_descriptor(), value);
}
inline bool ResinCostType_Parse(
    const ::std::string& name, ResinCostType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResinCostType>(
    ResinCostType_descriptor(), name, value);
}
enum FoundationOpType {
  FOUNDATION_OP_NONE = 0,
  FOUNDATION_OP_BUILD = 1,
  FOUNDATION_OP_DEMOLITION = 2,
  FOUNDATION_OP_REBUILD = 3,
  FOUNDATION_OP_ROTATE = 4,
  FOUNDATION_OP_LOCK = 5,
  FOUNDATION_OP_UNLOCK = 6,
  FoundationOpType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FoundationOpType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FoundationOpType_IsValid(int value);
const FoundationOpType FoundationOpType_MIN = FOUNDATION_OP_NONE;
const FoundationOpType FoundationOpType_MAX = FOUNDATION_OP_UNLOCK;
const int FoundationOpType_ARRAYSIZE = FoundationOpType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FoundationOpType_descriptor();
inline const ::std::string& FoundationOpType_Name(FoundationOpType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FoundationOpType_descriptor(), value);
}
inline bool FoundationOpType_Parse(
    const ::std::string& name, FoundationOpType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FoundationOpType>(
    FoundationOpType_descriptor(), name, value);
}
enum VehicleInteractType {
  VEHICLE_INTERACT_NONE = 0,
  VEHICLE_INTERACT_IN = 1,
  VEHICLE_INTERACT_OUT = 2,
  VehicleInteractType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VehicleInteractType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VehicleInteractType_IsValid(int value);
const VehicleInteractType VehicleInteractType_MIN = VEHICLE_INTERACT_NONE;
const VehicleInteractType VehicleInteractType_MAX = VEHICLE_INTERACT_OUT;
const int VehicleInteractType_ARRAYSIZE = VehicleInteractType_MAX + 1;

const ::google::protobuf::EnumDescriptor* VehicleInteractType_descriptor();
inline const ::std::string& VehicleInteractType_Name(VehicleInteractType value) {
  return ::google::protobuf::internal::NameOfEnum(
    VehicleInteractType_descriptor(), value);
}
inline bool VehicleInteractType_Parse(
    const ::std::string& name, VehicleInteractType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VehicleInteractType>(
    VehicleInteractType_descriptor(), name, value);
}
// ===================================================================

class GadgetInteractReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetInteractReq) */ {
 public:
  GadgetInteractReq();
  virtual ~GadgetInteractReq();

  GadgetInteractReq(const GadgetInteractReq& from);

  inline GadgetInteractReq& operator=(const GadgetInteractReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetInteractReq(GadgetInteractReq&& from) noexcept
    : GadgetInteractReq() {
    *this = ::std::move(from);
  }

  inline GadgetInteractReq& operator=(GadgetInteractReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetInteractReq& default_instance();

  static inline const GadgetInteractReq* internal_default_instance() {
    return reinterpret_cast<const GadgetInteractReq*>(
               &_GadgetInteractReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GadgetInteractReq* other);
  friend void swap(GadgetInteractReq& a, GadgetInteractReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetInteractReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetInteractReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetInteractReq& from);
  void MergeFrom(const GadgetInteractReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetInteractReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GadgetInteractReq_CmdId CmdId;
  static const CmdId NONE =
    GadgetInteractReq_CmdId_NONE;
  static const CmdId CMD_ID =
    GadgetInteractReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GadgetInteractReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GadgetInteractReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    GadgetInteractReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return GadgetInteractReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GadgetInteractReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GadgetInteractReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GadgetInteractReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GadgetInteractReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GadgetInteractReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GadgetInteractReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.ResinCostType resin_cost_type = 1;
  void clear_resin_cost_type();
  static const int kResinCostTypeFieldNumber = 1;
  ::proto::ResinCostType resin_cost_type() const;
  void set_resin_cost_type(::proto::ResinCostType value);

  // uint32 ui_interact_id = 2;
  void clear_ui_interact_id();
  static const int kUiInteractIdFieldNumber = 2;
  ::google::protobuf::uint32 ui_interact_id() const;
  void set_ui_interact_id(::google::protobuf::uint32 value);

  // uint32 gadget_entity_id = 4;
  void clear_gadget_entity_id();
  static const int kGadgetEntityIdFieldNumber = 4;
  ::google::protobuf::uint32 gadget_entity_id() const;
  void set_gadget_entity_id(::google::protobuf::uint32 value);

  // .proto.InterOpType op_type = 5;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 5;
  ::proto::InterOpType op_type() const;
  void set_op_type(::proto::InterOpType value);

  // uint32 gadget_id = 8;
  void clear_gadget_id();
  static const int kGadgetIdFieldNumber = 8;
  ::google::protobuf::uint32 gadget_id() const;
  void set_gadget_id(::google::protobuf::uint32 value);

  // bool is_use_condense_resin = 15;
  void clear_is_use_condense_resin();
  static const int kIsUseCondenseResinFieldNumber = 15;
  bool is_use_condense_resin() const;
  void set_is_use_condense_resin(bool value);

  // @@protoc_insertion_point(class_scope:proto.GadgetInteractReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int resin_cost_type_;
  ::google::protobuf::uint32 ui_interact_id_;
  ::google::protobuf::uint32 gadget_entity_id_;
  int op_type_;
  ::google::protobuf::uint32 gadget_id_;
  bool is_use_condense_resin_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GadgetInteractRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetInteractRsp) */ {
 public:
  GadgetInteractRsp();
  virtual ~GadgetInteractRsp();

  GadgetInteractRsp(const GadgetInteractRsp& from);

  inline GadgetInteractRsp& operator=(const GadgetInteractRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetInteractRsp(GadgetInteractRsp&& from) noexcept
    : GadgetInteractRsp() {
    *this = ::std::move(from);
  }

  inline GadgetInteractRsp& operator=(GadgetInteractRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetInteractRsp& default_instance();

  static inline const GadgetInteractRsp* internal_default_instance() {
    return reinterpret_cast<const GadgetInteractRsp*>(
               &_GadgetInteractRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GadgetInteractRsp* other);
  friend void swap(GadgetInteractRsp& a, GadgetInteractRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetInteractRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetInteractRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetInteractRsp& from);
  void MergeFrom(const GadgetInteractRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetInteractRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GadgetInteractRsp_CmdId CmdId;
  static const CmdId NONE =
    GadgetInteractRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    GadgetInteractRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GadgetInteractRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GadgetInteractRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GadgetInteractRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GadgetInteractRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GadgetInteractRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GadgetInteractRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GadgetInteractRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GadgetInteractRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GadgetInteractRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.InteractType interact_type = 2;
  void clear_interact_type();
  static const int kInteractTypeFieldNumber = 2;
  ::proto::InteractType interact_type() const;
  void set_interact_type(::proto::InteractType value);

  // .proto.InterOpType op_type = 3;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 3;
  ::proto::InterOpType op_type() const;
  void set_op_type(::proto::InterOpType value);

  // uint32 gadget_id = 15;
  void clear_gadget_id();
  static const int kGadgetIdFieldNumber = 15;
  ::google::protobuf::uint32 gadget_id() const;
  void set_gadget_id(::google::protobuf::uint32 value);

  // int32 retcode = 7;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 7;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 gadget_entity_id = 10;
  void clear_gadget_entity_id();
  static const int kGadgetEntityIdFieldNumber = 10;
  ::google::protobuf::uint32 gadget_entity_id() const;
  void set_gadget_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GadgetInteractRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int interact_type_;
  int op_type_;
  ::google::protobuf::uint32 gadget_id_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 gadget_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GadgetStateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetStateNotify) */ {
 public:
  GadgetStateNotify();
  virtual ~GadgetStateNotify();

  GadgetStateNotify(const GadgetStateNotify& from);

  inline GadgetStateNotify& operator=(const GadgetStateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetStateNotify(GadgetStateNotify&& from) noexcept
    : GadgetStateNotify() {
    *this = ::std::move(from);
  }

  inline GadgetStateNotify& operator=(GadgetStateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetStateNotify& default_instance();

  static inline const GadgetStateNotify* internal_default_instance() {
    return reinterpret_cast<const GadgetStateNotify*>(
               &_GadgetStateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GadgetStateNotify* other);
  friend void swap(GadgetStateNotify& a, GadgetStateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetStateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetStateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetStateNotify& from);
  void MergeFrom(const GadgetStateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetStateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GadgetStateNotify_CmdId CmdId;
  static const CmdId NONE =
    GadgetStateNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    GadgetStateNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GadgetStateNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GadgetStateNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GadgetStateNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GadgetStateNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GadgetStateNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GadgetStateNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GadgetStateNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GadgetStateNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GadgetStateNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 gadget_state = 3;
  void clear_gadget_state();
  static const int kGadgetStateFieldNumber = 3;
  ::google::protobuf::uint32 gadget_state() const;
  void set_gadget_state(::google::protobuf::uint32 value);

  // uint32 gadget_entity_id = 5;
  void clear_gadget_entity_id();
  static const int kGadgetEntityIdFieldNumber = 5;
  ::google::protobuf::uint32 gadget_entity_id() const;
  void set_gadget_entity_id(::google::protobuf::uint32 value);

  // bool is_enable_interact = 11;
  void clear_is_enable_interact();
  static const int kIsEnableInteractFieldNumber = 11;
  bool is_enable_interact() const;
  void set_is_enable_interact(bool value);

  // @@protoc_insertion_point(class_scope:proto.GadgetStateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gadget_state_;
  ::google::protobuf::uint32 gadget_entity_id_;
  bool is_enable_interact_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorktopOptionNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorktopOptionNotify) */ {
 public:
  WorktopOptionNotify();
  virtual ~WorktopOptionNotify();

  WorktopOptionNotify(const WorktopOptionNotify& from);

  inline WorktopOptionNotify& operator=(const WorktopOptionNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorktopOptionNotify(WorktopOptionNotify&& from) noexcept
    : WorktopOptionNotify() {
    *this = ::std::move(from);
  }

  inline WorktopOptionNotify& operator=(WorktopOptionNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorktopOptionNotify& default_instance();

  static inline const WorktopOptionNotify* internal_default_instance() {
    return reinterpret_cast<const WorktopOptionNotify*>(
               &_WorktopOptionNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(WorktopOptionNotify* other);
  friend void swap(WorktopOptionNotify& a, WorktopOptionNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorktopOptionNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WorktopOptionNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorktopOptionNotify& from);
  void MergeFrom(const WorktopOptionNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorktopOptionNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WorktopOptionNotify_CmdId CmdId;
  static const CmdId NONE =
    WorktopOptionNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    WorktopOptionNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    WorktopOptionNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    WorktopOptionNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return WorktopOptionNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    WorktopOptionNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    WorktopOptionNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    WorktopOptionNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return WorktopOptionNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return WorktopOptionNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return WorktopOptionNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 option_list = 8;
  int option_list_size() const;
  void clear_option_list();
  static const int kOptionListFieldNumber = 8;
  ::google::protobuf::uint32 option_list(int index) const;
  void set_option_list(int index, ::google::protobuf::uint32 value);
  void add_option_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      option_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_option_list();

  // uint32 gadget_entity_id = 11;
  void clear_gadget_entity_id();
  static const int kGadgetEntityIdFieldNumber = 11;
  ::google::protobuf::uint32 gadget_entity_id() const;
  void set_gadget_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.WorktopOptionNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > option_list_;
  mutable int _option_list_cached_byte_size_;
  ::google::protobuf::uint32 gadget_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SelectWorktopOptionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SelectWorktopOptionReq) */ {
 public:
  SelectWorktopOptionReq();
  virtual ~SelectWorktopOptionReq();

  SelectWorktopOptionReq(const SelectWorktopOptionReq& from);

  inline SelectWorktopOptionReq& operator=(const SelectWorktopOptionReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SelectWorktopOptionReq(SelectWorktopOptionReq&& from) noexcept
    : SelectWorktopOptionReq() {
    *this = ::std::move(from);
  }

  inline SelectWorktopOptionReq& operator=(SelectWorktopOptionReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectWorktopOptionReq& default_instance();

  static inline const SelectWorktopOptionReq* internal_default_instance() {
    return reinterpret_cast<const SelectWorktopOptionReq*>(
               &_SelectWorktopOptionReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SelectWorktopOptionReq* other);
  friend void swap(SelectWorktopOptionReq& a, SelectWorktopOptionReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SelectWorktopOptionReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SelectWorktopOptionReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SelectWorktopOptionReq& from);
  void MergeFrom(const SelectWorktopOptionReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SelectWorktopOptionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SelectWorktopOptionReq_CmdId CmdId;
  static const CmdId NONE =
    SelectWorktopOptionReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SelectWorktopOptionReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SelectWorktopOptionReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SelectWorktopOptionReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SelectWorktopOptionReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SelectWorktopOptionReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SelectWorktopOptionReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SelectWorktopOptionReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SelectWorktopOptionReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SelectWorktopOptionReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SelectWorktopOptionReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SelectWorktopOptionReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 option_id = 11;
  void clear_option_id();
  static const int kOptionIdFieldNumber = 11;
  ::google::protobuf::uint32 option_id() const;
  void set_option_id(::google::protobuf::uint32 value);

  // uint32 gadget_entity_id = 12;
  void clear_gadget_entity_id();
  static const int kGadgetEntityIdFieldNumber = 12;
  ::google::protobuf::uint32 gadget_entity_id() const;
  void set_gadget_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SelectWorktopOptionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 option_id_;
  ::google::protobuf::uint32 gadget_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SelectWorktopOptionRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SelectWorktopOptionRsp) */ {
 public:
  SelectWorktopOptionRsp();
  virtual ~SelectWorktopOptionRsp();

  SelectWorktopOptionRsp(const SelectWorktopOptionRsp& from);

  inline SelectWorktopOptionRsp& operator=(const SelectWorktopOptionRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SelectWorktopOptionRsp(SelectWorktopOptionRsp&& from) noexcept
    : SelectWorktopOptionRsp() {
    *this = ::std::move(from);
  }

  inline SelectWorktopOptionRsp& operator=(SelectWorktopOptionRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectWorktopOptionRsp& default_instance();

  static inline const SelectWorktopOptionRsp* internal_default_instance() {
    return reinterpret_cast<const SelectWorktopOptionRsp*>(
               &_SelectWorktopOptionRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SelectWorktopOptionRsp* other);
  friend void swap(SelectWorktopOptionRsp& a, SelectWorktopOptionRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SelectWorktopOptionRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SelectWorktopOptionRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SelectWorktopOptionRsp& from);
  void MergeFrom(const SelectWorktopOptionRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SelectWorktopOptionRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SelectWorktopOptionRsp_CmdId CmdId;
  static const CmdId NONE =
    SelectWorktopOptionRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SelectWorktopOptionRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SelectWorktopOptionRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SelectWorktopOptionRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SelectWorktopOptionRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SelectWorktopOptionRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SelectWorktopOptionRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SelectWorktopOptionRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SelectWorktopOptionRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SelectWorktopOptionRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SelectWorktopOptionRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 gadget_entity_id = 13;
  void clear_gadget_entity_id();
  static const int kGadgetEntityIdFieldNumber = 13;
  ::google::protobuf::uint32 gadget_entity_id() const;
  void set_gadget_entity_id(::google::protobuf::uint32 value);

  // int32 retcode = 4;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 option_id = 7;
  void clear_option_id();
  static const int kOptionIdFieldNumber = 7;
  ::google::protobuf::uint32 option_id() const;
  void set_option_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SelectWorktopOptionRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gadget_entity_id_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 option_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BossChestActivateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BossChestActivateNotify) */ {
 public:
  BossChestActivateNotify();
  virtual ~BossChestActivateNotify();

  BossChestActivateNotify(const BossChestActivateNotify& from);

  inline BossChestActivateNotify& operator=(const BossChestActivateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BossChestActivateNotify(BossChestActivateNotify&& from) noexcept
    : BossChestActivateNotify() {
    *this = ::std::move(from);
  }

  inline BossChestActivateNotify& operator=(BossChestActivateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BossChestActivateNotify& default_instance();

  static inline const BossChestActivateNotify* internal_default_instance() {
    return reinterpret_cast<const BossChestActivateNotify*>(
               &_BossChestActivateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(BossChestActivateNotify* other);
  friend void swap(BossChestActivateNotify& a, BossChestActivateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BossChestActivateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  BossChestActivateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BossChestActivateNotify& from);
  void MergeFrom(const BossChestActivateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BossChestActivateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BossChestActivateNotify_CmdId CmdId;
  static const CmdId NONE =
    BossChestActivateNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    BossChestActivateNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BossChestActivateNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BossChestActivateNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return BossChestActivateNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BossChestActivateNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BossChestActivateNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BossChestActivateNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BossChestActivateNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BossChestActivateNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BossChestActivateNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 qualify_uid_list = 1;
  int qualify_uid_list_size() const;
  void clear_qualify_uid_list();
  static const int kQualifyUidListFieldNumber = 1;
  ::google::protobuf::uint32 qualify_uid_list(int index) const;
  void set_qualify_uid_list(int index, ::google::protobuf::uint32 value);
  void add_qualify_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      qualify_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_qualify_uid_list();

  // uint32 entity_id = 12;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 12;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BossChestActivateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > qualify_uid_list_;
  mutable int _qualify_uid_list_cached_byte_size_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlossomChestInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BlossomChestInfoNotify) */ {
 public:
  BlossomChestInfoNotify();
  virtual ~BlossomChestInfoNotify();

  BlossomChestInfoNotify(const BlossomChestInfoNotify& from);

  inline BlossomChestInfoNotify& operator=(const BlossomChestInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BlossomChestInfoNotify(BlossomChestInfoNotify&& from) noexcept
    : BlossomChestInfoNotify() {
    *this = ::std::move(from);
  }

  inline BlossomChestInfoNotify& operator=(BlossomChestInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BlossomChestInfoNotify& default_instance();

  static inline const BlossomChestInfoNotify* internal_default_instance() {
    return reinterpret_cast<const BlossomChestInfoNotify*>(
               &_BlossomChestInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(BlossomChestInfoNotify* other);
  friend void swap(BlossomChestInfoNotify& a, BlossomChestInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BlossomChestInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  BlossomChestInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlossomChestInfoNotify& from);
  void MergeFrom(const BlossomChestInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlossomChestInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BlossomChestInfoNotify_CmdId CmdId;
  static const CmdId NONE =
    BlossomChestInfoNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    BlossomChestInfoNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BlossomChestInfoNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BlossomChestInfoNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return BlossomChestInfoNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BlossomChestInfoNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BlossomChestInfoNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BlossomChestInfoNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BlossomChestInfoNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BlossomChestInfoNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BlossomChestInfoNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.BlossomChestInfo blossom_chest_info = 3;
  bool has_blossom_chest_info() const;
  void clear_blossom_chest_info();
  static const int kBlossomChestInfoFieldNumber = 3;
  const ::proto::BlossomChestInfo& blossom_chest_info() const;
  ::proto::BlossomChestInfo* mutable_blossom_chest_info();
  ::proto::BlossomChestInfo* release_blossom_chest_info();
  void set_allocated_blossom_chest_info(::proto::BlossomChestInfo* blossom_chest_info);

  // uint32 entity_id = 9;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 9;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BlossomChestInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::BlossomChestInfo* blossom_chest_info_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GadgetPlayStartNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetPlayStartNotify) */ {
 public:
  GadgetPlayStartNotify();
  virtual ~GadgetPlayStartNotify();

  GadgetPlayStartNotify(const GadgetPlayStartNotify& from);

  inline GadgetPlayStartNotify& operator=(const GadgetPlayStartNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetPlayStartNotify(GadgetPlayStartNotify&& from) noexcept
    : GadgetPlayStartNotify() {
    *this = ::std::move(from);
  }

  inline GadgetPlayStartNotify& operator=(GadgetPlayStartNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetPlayStartNotify& default_instance();

  static inline const GadgetPlayStartNotify* internal_default_instance() {
    return reinterpret_cast<const GadgetPlayStartNotify*>(
               &_GadgetPlayStartNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(GadgetPlayStartNotify* other);
  friend void swap(GadgetPlayStartNotify& a, GadgetPlayStartNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetPlayStartNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetPlayStartNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetPlayStartNotify& from);
  void MergeFrom(const GadgetPlayStartNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetPlayStartNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GadgetPlayStartNotify_CmdId CmdId;
  static const CmdId NONE =
    GadgetPlayStartNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    GadgetPlayStartNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GadgetPlayStartNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GadgetPlayStartNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GadgetPlayStartNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GadgetPlayStartNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GadgetPlayStartNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GadgetPlayStartNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GadgetPlayStartNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GadgetPlayStartNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GadgetPlayStartNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 entity_id = 15;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 15;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 play_type = 8;
  void clear_play_type();
  static const int kPlayTypeFieldNumber = 8;
  ::google::protobuf::uint32 play_type() const;
  void set_play_type(::google::protobuf::uint32 value);

  // uint32 start_time = 14;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 14;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GadgetPlayStartNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 play_type_;
  ::google::protobuf::uint32 start_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GadgetPlayUidInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetPlayUidInfo) */ {
 public:
  GadgetPlayUidInfo();
  virtual ~GadgetPlayUidInfo();

  GadgetPlayUidInfo(const GadgetPlayUidInfo& from);

  inline GadgetPlayUidInfo& operator=(const GadgetPlayUidInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetPlayUidInfo(GadgetPlayUidInfo&& from) noexcept
    : GadgetPlayUidInfo() {
    *this = ::std::move(from);
  }

  inline GadgetPlayUidInfo& operator=(GadgetPlayUidInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetPlayUidInfo& default_instance();

  static inline const GadgetPlayUidInfo* internal_default_instance() {
    return reinterpret_cast<const GadgetPlayUidInfo*>(
               &_GadgetPlayUidInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GadgetPlayUidInfo* other);
  friend void swap(GadgetPlayUidInfo& a, GadgetPlayUidInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetPlayUidInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetPlayUidInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetPlayUidInfo& from);
  void MergeFrom(const GadgetPlayUidInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetPlayUidInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string nickname = 3;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // string online_id = 8;
  void clear_online_id();
  static const int kOnlineIdFieldNumber = 8;
  const ::std::string& online_id() const;
  void set_online_id(const ::std::string& value);
  #if LANG_CXX11
  void set_online_id(::std::string&& value);
  #endif
  void set_online_id(const char* value);
  void set_online_id(const char* value, size_t size);
  ::std::string* mutable_online_id();
  ::std::string* release_online_id();
  void set_allocated_online_id(::std::string* online_id);

  // .proto.ProfilePicture profile_picture = 2;
  bool has_profile_picture() const;
  void clear_profile_picture();
  static const int kProfilePictureFieldNumber = 2;
  const ::proto::ProfilePicture& profile_picture() const;
  ::proto::ProfilePicture* mutable_profile_picture();
  ::proto::ProfilePicture* release_profile_picture();
  void set_allocated_profile_picture(::proto::ProfilePicture* profile_picture);

  // uint32 score = 4;
  void clear_score();
  static const int kScoreFieldNumber = 4;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // uint32 battle_watcher_id = 6;
  void clear_battle_watcher_id();
  static const int kBattleWatcherIdFieldNumber = 6;
  ::google::protobuf::uint32 battle_watcher_id() const;
  void set_battle_watcher_id(::google::protobuf::uint32 value);

  // uint32 uid = 7;
  void clear_uid();
  static const int kUidFieldNumber = 7;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 icon = 14;
  void clear_icon();
  static const int kIconFieldNumber = 14;
  ::google::protobuf::uint32 icon() const;
  void set_icon(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GadgetPlayUidInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr online_id_;
  ::proto::ProfilePicture* profile_picture_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 battle_watcher_id_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 icon_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GadgetPlayStopNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetPlayStopNotify) */ {
 public:
  GadgetPlayStopNotify();
  virtual ~GadgetPlayStopNotify();

  GadgetPlayStopNotify(const GadgetPlayStopNotify& from);

  inline GadgetPlayStopNotify& operator=(const GadgetPlayStopNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetPlayStopNotify(GadgetPlayStopNotify&& from) noexcept
    : GadgetPlayStopNotify() {
    *this = ::std::move(from);
  }

  inline GadgetPlayStopNotify& operator=(GadgetPlayStopNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetPlayStopNotify& default_instance();

  static inline const GadgetPlayStopNotify* internal_default_instance() {
    return reinterpret_cast<const GadgetPlayStopNotify*>(
               &_GadgetPlayStopNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(GadgetPlayStopNotify* other);
  friend void swap(GadgetPlayStopNotify& a, GadgetPlayStopNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetPlayStopNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetPlayStopNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetPlayStopNotify& from);
  void MergeFrom(const GadgetPlayStopNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetPlayStopNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GadgetPlayStopNotify_CmdId CmdId;
  static const CmdId NONE =
    GadgetPlayStopNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    GadgetPlayStopNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GadgetPlayStopNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GadgetPlayStopNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GadgetPlayStopNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GadgetPlayStopNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GadgetPlayStopNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GadgetPlayStopNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GadgetPlayStopNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GadgetPlayStopNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GadgetPlayStopNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.GadgetPlayUidInfo uid_info_list = 8;
  int uid_info_list_size() const;
  void clear_uid_info_list();
  static const int kUidInfoListFieldNumber = 8;
  const ::proto::GadgetPlayUidInfo& uid_info_list(int index) const;
  ::proto::GadgetPlayUidInfo* mutable_uid_info_list(int index);
  ::proto::GadgetPlayUidInfo* add_uid_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::GadgetPlayUidInfo >*
      mutable_uid_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::GadgetPlayUidInfo >&
      uid_info_list() const;

  // uint32 play_type = 4;
  void clear_play_type();
  static const int kPlayTypeFieldNumber = 4;
  ::google::protobuf::uint32 play_type() const;
  void set_play_type(::google::protobuf::uint32 value);

  // uint32 score = 5;
  void clear_score();
  static const int kScoreFieldNumber = 5;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // uint32 cost_time = 6;
  void clear_cost_time();
  static const int kCostTimeFieldNumber = 6;
  ::google::protobuf::uint32 cost_time() const;
  void set_cost_time(::google::protobuf::uint32 value);

  // uint32 entity_id = 7;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 7;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // bool is_win = 14;
  void clear_is_win();
  static const int kIsWinFieldNumber = 14;
  bool is_win() const;
  void set_is_win(bool value);

  // @@protoc_insertion_point(class_scope:proto.GadgetPlayStopNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::GadgetPlayUidInfo > uid_info_list_;
  ::google::protobuf::uint32 play_type_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 cost_time_;
  ::google::protobuf::uint32 entity_id_;
  bool is_win_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GadgetPlayDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetPlayDataNotify) */ {
 public:
  GadgetPlayDataNotify();
  virtual ~GadgetPlayDataNotify();

  GadgetPlayDataNotify(const GadgetPlayDataNotify& from);

  inline GadgetPlayDataNotify& operator=(const GadgetPlayDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetPlayDataNotify(GadgetPlayDataNotify&& from) noexcept
    : GadgetPlayDataNotify() {
    *this = ::std::move(from);
  }

  inline GadgetPlayDataNotify& operator=(GadgetPlayDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetPlayDataNotify& default_instance();

  static inline const GadgetPlayDataNotify* internal_default_instance() {
    return reinterpret_cast<const GadgetPlayDataNotify*>(
               &_GadgetPlayDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(GadgetPlayDataNotify* other);
  friend void swap(GadgetPlayDataNotify& a, GadgetPlayDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetPlayDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetPlayDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetPlayDataNotify& from);
  void MergeFrom(const GadgetPlayDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetPlayDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GadgetPlayDataNotify_CmdId CmdId;
  static const CmdId NONE =
    GadgetPlayDataNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    GadgetPlayDataNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GadgetPlayDataNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GadgetPlayDataNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GadgetPlayDataNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GadgetPlayDataNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GadgetPlayDataNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GadgetPlayDataNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GadgetPlayDataNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GadgetPlayDataNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GadgetPlayDataNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 play_type = 12;
  void clear_play_type();
  static const int kPlayTypeFieldNumber = 12;
  ::google::protobuf::uint32 play_type() const;
  void set_play_type(::google::protobuf::uint32 value);

  // uint32 entity_id = 6;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 6;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 progress = 9;
  void clear_progress();
  static const int kProgressFieldNumber = 9;
  ::google::protobuf::uint32 progress() const;
  void set_progress(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GadgetPlayDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 play_type_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 progress_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GadgetPlayUidOpNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetPlayUidOpNotify) */ {
 public:
  GadgetPlayUidOpNotify();
  virtual ~GadgetPlayUidOpNotify();

  GadgetPlayUidOpNotify(const GadgetPlayUidOpNotify& from);

  inline GadgetPlayUidOpNotify& operator=(const GadgetPlayUidOpNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetPlayUidOpNotify(GadgetPlayUidOpNotify&& from) noexcept
    : GadgetPlayUidOpNotify() {
    *this = ::std::move(from);
  }

  inline GadgetPlayUidOpNotify& operator=(GadgetPlayUidOpNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetPlayUidOpNotify& default_instance();

  static inline const GadgetPlayUidOpNotify* internal_default_instance() {
    return reinterpret_cast<const GadgetPlayUidOpNotify*>(
               &_GadgetPlayUidOpNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(GadgetPlayUidOpNotify* other);
  friend void swap(GadgetPlayUidOpNotify& a, GadgetPlayUidOpNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetPlayUidOpNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetPlayUidOpNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetPlayUidOpNotify& from);
  void MergeFrom(const GadgetPlayUidOpNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetPlayUidOpNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GadgetPlayUidOpNotify_CmdId CmdId;
  static const CmdId NONE =
    GadgetPlayUidOpNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    GadgetPlayUidOpNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GadgetPlayUidOpNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GadgetPlayUidOpNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GadgetPlayUidOpNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GadgetPlayUidOpNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GadgetPlayUidOpNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GadgetPlayUidOpNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GadgetPlayUidOpNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GadgetPlayUidOpNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GadgetPlayUidOpNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 uid_list = 2;
  int uid_list_size() const;
  void clear_uid_list();
  static const int kUidListFieldNumber = 2;
  ::google::protobuf::uint32 uid_list(int index) const;
  void set_uid_list(int index, ::google::protobuf::uint32 value);
  void add_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uid_list();

  // repeated uint32 param_list = 4;
  int param_list_size() const;
  void clear_param_list();
  static const int kParamListFieldNumber = 4;
  ::google::protobuf::uint32 param_list(int index) const;
  void set_param_list(int index, ::google::protobuf::uint32 value);
  void add_param_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      param_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_param_list();

  // string param_str = 1;
  void clear_param_str();
  static const int kParamStrFieldNumber = 1;
  const ::std::string& param_str() const;
  void set_param_str(const ::std::string& value);
  #if LANG_CXX11
  void set_param_str(::std::string&& value);
  #endif
  void set_param_str(const char* value);
  void set_param_str(const char* value, size_t size);
  ::std::string* mutable_param_str();
  ::std::string* release_param_str();
  void set_allocated_param_str(::std::string* param_str);

  // uint32 play_type = 6;
  void clear_play_type();
  static const int kPlayTypeFieldNumber = 6;
  ::google::protobuf::uint32 play_type() const;
  void set_play_type(::google::protobuf::uint32 value);

  // uint32 op = 7;
  void clear_op();
  static const int kOpFieldNumber = 7;
  ::google::protobuf::uint32 op() const;
  void set_op(::google::protobuf::uint32 value);

  // uint32 entity_id = 11;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 11;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GadgetPlayUidOpNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uid_list_;
  mutable int _uid_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param_list_;
  mutable int _param_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr param_str_;
  ::google::protobuf::uint32 play_type_;
  ::google::protobuf::uint32 op_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GadgetGeneralRewardInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetGeneralRewardInfoNotify) */ {
 public:
  GadgetGeneralRewardInfoNotify();
  virtual ~GadgetGeneralRewardInfoNotify();

  GadgetGeneralRewardInfoNotify(const GadgetGeneralRewardInfoNotify& from);

  inline GadgetGeneralRewardInfoNotify& operator=(const GadgetGeneralRewardInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetGeneralRewardInfoNotify(GadgetGeneralRewardInfoNotify&& from) noexcept
    : GadgetGeneralRewardInfoNotify() {
    *this = ::std::move(from);
  }

  inline GadgetGeneralRewardInfoNotify& operator=(GadgetGeneralRewardInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetGeneralRewardInfoNotify& default_instance();

  static inline const GadgetGeneralRewardInfoNotify* internal_default_instance() {
    return reinterpret_cast<const GadgetGeneralRewardInfoNotify*>(
               &_GadgetGeneralRewardInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(GadgetGeneralRewardInfoNotify* other);
  friend void swap(GadgetGeneralRewardInfoNotify& a, GadgetGeneralRewardInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetGeneralRewardInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetGeneralRewardInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetGeneralRewardInfoNotify& from);
  void MergeFrom(const GadgetGeneralRewardInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetGeneralRewardInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GadgetGeneralRewardInfoNotify_CmdId CmdId;
  static const CmdId NONE =
    GadgetGeneralRewardInfoNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    GadgetGeneralRewardInfoNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GadgetGeneralRewardInfoNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GadgetGeneralRewardInfoNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GadgetGeneralRewardInfoNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GadgetGeneralRewardInfoNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GadgetGeneralRewardInfoNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GadgetGeneralRewardInfoNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GadgetGeneralRewardInfoNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GadgetGeneralRewardInfoNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GadgetGeneralRewardInfoNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.GadgetGeneralRewardInfo general_reward_info = 9;
  bool has_general_reward_info() const;
  void clear_general_reward_info();
  static const int kGeneralRewardInfoFieldNumber = 9;
  const ::proto::GadgetGeneralRewardInfo& general_reward_info() const;
  ::proto::GadgetGeneralRewardInfo* mutable_general_reward_info();
  ::proto::GadgetGeneralRewardInfo* release_general_reward_info();
  void set_allocated_general_reward_info(::proto::GadgetGeneralRewardInfo* general_reward_info);

  // uint32 entity_id = 13;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 13;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GadgetGeneralRewardInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::GadgetGeneralRewardInfo* general_reward_info_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GadgetAutoPickDropInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetAutoPickDropInfoNotify) */ {
 public:
  GadgetAutoPickDropInfoNotify();
  virtual ~GadgetAutoPickDropInfoNotify();

  GadgetAutoPickDropInfoNotify(const GadgetAutoPickDropInfoNotify& from);

  inline GadgetAutoPickDropInfoNotify& operator=(const GadgetAutoPickDropInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetAutoPickDropInfoNotify(GadgetAutoPickDropInfoNotify&& from) noexcept
    : GadgetAutoPickDropInfoNotify() {
    *this = ::std::move(from);
  }

  inline GadgetAutoPickDropInfoNotify& operator=(GadgetAutoPickDropInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetAutoPickDropInfoNotify& default_instance();

  static inline const GadgetAutoPickDropInfoNotify* internal_default_instance() {
    return reinterpret_cast<const GadgetAutoPickDropInfoNotify*>(
               &_GadgetAutoPickDropInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(GadgetAutoPickDropInfoNotify* other);
  friend void swap(GadgetAutoPickDropInfoNotify& a, GadgetAutoPickDropInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetAutoPickDropInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetAutoPickDropInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetAutoPickDropInfoNotify& from);
  void MergeFrom(const GadgetAutoPickDropInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetAutoPickDropInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GadgetAutoPickDropInfoNotify_CmdId CmdId;
  static const CmdId NONE =
    GadgetAutoPickDropInfoNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    GadgetAutoPickDropInfoNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GadgetAutoPickDropInfoNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GadgetAutoPickDropInfoNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GadgetAutoPickDropInfoNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GadgetAutoPickDropInfoNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GadgetAutoPickDropInfoNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GadgetAutoPickDropInfoNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GadgetAutoPickDropInfoNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GadgetAutoPickDropInfoNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GadgetAutoPickDropInfoNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.Item item_list = 11;
  int item_list_size() const;
  void clear_item_list();
  static const int kItemListFieldNumber = 11;
  const ::proto::Item& item_list(int index) const;
  ::proto::Item* mutable_item_list(int index);
  ::proto::Item* add_item_list();
  ::google::protobuf::RepeatedPtrField< ::proto::Item >*
      mutable_item_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::Item >&
      item_list() const;

  // @@protoc_insertion_point(class_scope:proto.GadgetAutoPickDropInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::Item > item_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateAbilityCreatedMovingPlatformNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UpdateAbilityCreatedMovingPlatformNotify) */ {
 public:
  UpdateAbilityCreatedMovingPlatformNotify();
  virtual ~UpdateAbilityCreatedMovingPlatformNotify();

  UpdateAbilityCreatedMovingPlatformNotify(const UpdateAbilityCreatedMovingPlatformNotify& from);

  inline UpdateAbilityCreatedMovingPlatformNotify& operator=(const UpdateAbilityCreatedMovingPlatformNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateAbilityCreatedMovingPlatformNotify(UpdateAbilityCreatedMovingPlatformNotify&& from) noexcept
    : UpdateAbilityCreatedMovingPlatformNotify() {
    *this = ::std::move(from);
  }

  inline UpdateAbilityCreatedMovingPlatformNotify& operator=(UpdateAbilityCreatedMovingPlatformNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateAbilityCreatedMovingPlatformNotify& default_instance();

  static inline const UpdateAbilityCreatedMovingPlatformNotify* internal_default_instance() {
    return reinterpret_cast<const UpdateAbilityCreatedMovingPlatformNotify*>(
               &_UpdateAbilityCreatedMovingPlatformNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(UpdateAbilityCreatedMovingPlatformNotify* other);
  friend void swap(UpdateAbilityCreatedMovingPlatformNotify& a, UpdateAbilityCreatedMovingPlatformNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateAbilityCreatedMovingPlatformNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateAbilityCreatedMovingPlatformNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateAbilityCreatedMovingPlatformNotify& from);
  void MergeFrom(const UpdateAbilityCreatedMovingPlatformNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateAbilityCreatedMovingPlatformNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef UpdateAbilityCreatedMovingPlatformNotify_CmdId CmdId;
  static const CmdId NONE =
    UpdateAbilityCreatedMovingPlatformNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    UpdateAbilityCreatedMovingPlatformNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    UpdateAbilityCreatedMovingPlatformNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    UpdateAbilityCreatedMovingPlatformNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    UpdateAbilityCreatedMovingPlatformNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return UpdateAbilityCreatedMovingPlatformNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    UpdateAbilityCreatedMovingPlatformNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    UpdateAbilityCreatedMovingPlatformNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    UpdateAbilityCreatedMovingPlatformNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return UpdateAbilityCreatedMovingPlatformNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return UpdateAbilityCreatedMovingPlatformNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return UpdateAbilityCreatedMovingPlatformNotify_CmdId_Parse(name, value);
  }

  typedef UpdateAbilityCreatedMovingPlatformNotify_OpType OpType;
  static const OpType OP_NONE =
    UpdateAbilityCreatedMovingPlatformNotify_OpType_OP_NONE;
  static const OpType OP_ACTIVATE =
    UpdateAbilityCreatedMovingPlatformNotify_OpType_OP_ACTIVATE;
  static const OpType OP_DEACTIVATE =
    UpdateAbilityCreatedMovingPlatformNotify_OpType_OP_DEACTIVATE;
  static inline bool OpType_IsValid(int value) {
    return UpdateAbilityCreatedMovingPlatformNotify_OpType_IsValid(value);
  }
  static const OpType OpType_MIN =
    UpdateAbilityCreatedMovingPlatformNotify_OpType_OpType_MIN;
  static const OpType OpType_MAX =
    UpdateAbilityCreatedMovingPlatformNotify_OpType_OpType_MAX;
  static const int OpType_ARRAYSIZE =
    UpdateAbilityCreatedMovingPlatformNotify_OpType_OpType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OpType_descriptor() {
    return UpdateAbilityCreatedMovingPlatformNotify_OpType_descriptor();
  }
  static inline const ::std::string& OpType_Name(OpType value) {
    return UpdateAbilityCreatedMovingPlatformNotify_OpType_Name(value);
  }
  static inline bool OpType_Parse(const ::std::string& name,
      OpType* value) {
    return UpdateAbilityCreatedMovingPlatformNotify_OpType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.UpdateAbilityCreatedMovingPlatformNotify.OpType op_type = 3;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 3;
  ::proto::UpdateAbilityCreatedMovingPlatformNotify_OpType op_type() const;
  void set_op_type(::proto::UpdateAbilityCreatedMovingPlatformNotify_OpType value);

  // uint32 entity_id = 4;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 4;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.UpdateAbilityCreatedMovingPlatformNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int op_type_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FoundationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FoundationReq) */ {
 public:
  FoundationReq();
  virtual ~FoundationReq();

  FoundationReq(const FoundationReq& from);

  inline FoundationReq& operator=(const FoundationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FoundationReq(FoundationReq&& from) noexcept
    : FoundationReq() {
    *this = ::std::move(from);
  }

  inline FoundationReq& operator=(FoundationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FoundationReq& default_instance();

  static inline const FoundationReq* internal_default_instance() {
    return reinterpret_cast<const FoundationReq*>(
               &_FoundationReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(FoundationReq* other);
  friend void swap(FoundationReq& a, FoundationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FoundationReq* New() const PROTOBUF_FINAL { return New(NULL); }

  FoundationReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FoundationReq& from);
  void MergeFrom(const FoundationReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FoundationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FoundationReq_CmdId CmdId;
  static const CmdId NONE =
    FoundationReq_CmdId_NONE;
  static const CmdId CMD_ID =
    FoundationReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    FoundationReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    FoundationReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    FoundationReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return FoundationReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    FoundationReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    FoundationReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    FoundationReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return FoundationReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return FoundationReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return FoundationReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.FoundationOpType op_type = 10;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 10;
  ::proto::FoundationOpType op_type() const;
  void set_op_type(::proto::FoundationOpType value);

  // uint32 point_config_id = 12;
  void clear_point_config_id();
  static const int kPointConfigIdFieldNumber = 12;
  ::google::protobuf::uint32 point_config_id() const;
  void set_point_config_id(::google::protobuf::uint32 value);

  // uint32 building_id = 13;
  void clear_building_id();
  static const int kBuildingIdFieldNumber = 13;
  ::google::protobuf::uint32 building_id() const;
  void set_building_id(::google::protobuf::uint32 value);

  // uint32 gadget_entity_id = 14;
  void clear_gadget_entity_id();
  static const int kGadgetEntityIdFieldNumber = 14;
  ::google::protobuf::uint32 gadget_entity_id() const;
  void set_gadget_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FoundationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int op_type_;
  ::google::protobuf::uint32 point_config_id_;
  ::google::protobuf::uint32 building_id_;
  ::google::protobuf::uint32 gadget_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FoundationRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FoundationRsp) */ {
 public:
  FoundationRsp();
  virtual ~FoundationRsp();

  FoundationRsp(const FoundationRsp& from);

  inline FoundationRsp& operator=(const FoundationRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FoundationRsp(FoundationRsp&& from) noexcept
    : FoundationRsp() {
    *this = ::std::move(from);
  }

  inline FoundationRsp& operator=(FoundationRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FoundationRsp& default_instance();

  static inline const FoundationRsp* internal_default_instance() {
    return reinterpret_cast<const FoundationRsp*>(
               &_FoundationRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(FoundationRsp* other);
  friend void swap(FoundationRsp& a, FoundationRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FoundationRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  FoundationRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FoundationRsp& from);
  void MergeFrom(const FoundationRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FoundationRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FoundationRsp_CmdId CmdId;
  static const CmdId NONE =
    FoundationRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    FoundationRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    FoundationRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    FoundationRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return FoundationRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    FoundationRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    FoundationRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    FoundationRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return FoundationRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return FoundationRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return FoundationRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.FoundationOpType op_type = 13;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 13;
  ::proto::FoundationOpType op_type() const;
  void set_op_type(::proto::FoundationOpType value);

  // int32 retcode = 7;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 7;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 gadget_entity_id = 10;
  void clear_gadget_entity_id();
  static const int kGadgetEntityIdFieldNumber = 10;
  ::google::protobuf::uint32 gadget_entity_id() const;
  void set_gadget_entity_id(::google::protobuf::uint32 value);

  // uint32 building_id = 11;
  void clear_building_id();
  static const int kBuildingIdFieldNumber = 11;
  ::google::protobuf::uint32 building_id() const;
  void set_building_id(::google::protobuf::uint32 value);

  // uint32 point_config_id = 12;
  void clear_point_config_id();
  static const int kPointConfigIdFieldNumber = 12;
  ::google::protobuf::uint32 point_config_id() const;
  void set_point_config_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FoundationRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int op_type_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 gadget_entity_id_;
  ::google::protobuf::uint32 building_id_;
  ::google::protobuf::uint32 point_config_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FoundationNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FoundationNotify) */ {
 public:
  FoundationNotify();
  virtual ~FoundationNotify();

  FoundationNotify(const FoundationNotify& from);

  inline FoundationNotify& operator=(const FoundationNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FoundationNotify(FoundationNotify&& from) noexcept
    : FoundationNotify() {
    *this = ::std::move(from);
  }

  inline FoundationNotify& operator=(FoundationNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FoundationNotify& default_instance();

  static inline const FoundationNotify* internal_default_instance() {
    return reinterpret_cast<const FoundationNotify*>(
               &_FoundationNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(FoundationNotify* other);
  friend void swap(FoundationNotify& a, FoundationNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FoundationNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  FoundationNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FoundationNotify& from);
  void MergeFrom(const FoundationNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FoundationNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FoundationNotify_CmdId CmdId;
  static const CmdId NONE =
    FoundationNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    FoundationNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    FoundationNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    FoundationNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return FoundationNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    FoundationNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    FoundationNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    FoundationNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return FoundationNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return FoundationNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return FoundationNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.FoundationInfo info = 7;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 7;
  const ::proto::FoundationInfo& info() const;
  ::proto::FoundationInfo* mutable_info();
  ::proto::FoundationInfo* release_info();
  void set_allocated_info(::proto::FoundationInfo* info);

  // uint32 gadget_entity_id = 9;
  void clear_gadget_entity_id();
  static const int kGadgetEntityIdFieldNumber = 9;
  ::google::protobuf::uint32 gadget_entity_id() const;
  void set_gadget_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FoundationNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::FoundationInfo* info_;
  ::google::protobuf::uint32 gadget_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GadgetTalkChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetTalkChangeNotify) */ {
 public:
  GadgetTalkChangeNotify();
  virtual ~GadgetTalkChangeNotify();

  GadgetTalkChangeNotify(const GadgetTalkChangeNotify& from);

  inline GadgetTalkChangeNotify& operator=(const GadgetTalkChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetTalkChangeNotify(GadgetTalkChangeNotify&& from) noexcept
    : GadgetTalkChangeNotify() {
    *this = ::std::move(from);
  }

  inline GadgetTalkChangeNotify& operator=(GadgetTalkChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetTalkChangeNotify& default_instance();

  static inline const GadgetTalkChangeNotify* internal_default_instance() {
    return reinterpret_cast<const GadgetTalkChangeNotify*>(
               &_GadgetTalkChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(GadgetTalkChangeNotify* other);
  friend void swap(GadgetTalkChangeNotify& a, GadgetTalkChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetTalkChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetTalkChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetTalkChangeNotify& from);
  void MergeFrom(const GadgetTalkChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetTalkChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GadgetTalkChangeNotify_CmdId CmdId;
  static const CmdId NONE =
    GadgetTalkChangeNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    GadgetTalkChangeNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GadgetTalkChangeNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GadgetTalkChangeNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GadgetTalkChangeNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GadgetTalkChangeNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GadgetTalkChangeNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GadgetTalkChangeNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GadgetTalkChangeNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GadgetTalkChangeNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GadgetTalkChangeNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 gadget_entity_id = 5;
  void clear_gadget_entity_id();
  static const int kGadgetEntityIdFieldNumber = 5;
  ::google::protobuf::uint32 gadget_entity_id() const;
  void set_gadget_entity_id(::google::protobuf::uint32 value);

  // uint32 cur_gadget_talk_state = 15;
  void clear_cur_gadget_talk_state();
  static const int kCurGadgetTalkStateFieldNumber = 15;
  ::google::protobuf::uint32 cur_gadget_talk_state() const;
  void set_cur_gadget_talk_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GadgetTalkChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gadget_entity_id_;
  ::google::protobuf::uint32 cur_gadget_talk_state_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class GadgetChainLevelUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetChainLevelUpdateNotify) */ {
 public:
  GadgetChainLevelUpdateNotify();
  virtual ~GadgetChainLevelUpdateNotify();

  GadgetChainLevelUpdateNotify(const GadgetChainLevelUpdateNotify& from);

  inline GadgetChainLevelUpdateNotify& operator=(const GadgetChainLevelUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetChainLevelUpdateNotify(GadgetChainLevelUpdateNotify&& from) noexcept
    : GadgetChainLevelUpdateNotify() {
    *this = ::std::move(from);
  }

  inline GadgetChainLevelUpdateNotify& operator=(GadgetChainLevelUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetChainLevelUpdateNotify& default_instance();

  static inline const GadgetChainLevelUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const GadgetChainLevelUpdateNotify*>(
               &_GadgetChainLevelUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(GadgetChainLevelUpdateNotify* other);
  friend void swap(GadgetChainLevelUpdateNotify& a, GadgetChainLevelUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetChainLevelUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetChainLevelUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetChainLevelUpdateNotify& from);
  void MergeFrom(const GadgetChainLevelUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetChainLevelUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef GadgetChainLevelUpdateNotify_CmdId CmdId;
  static const CmdId NONE =
    GadgetChainLevelUpdateNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    GadgetChainLevelUpdateNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GadgetChainLevelUpdateNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GadgetChainLevelUpdateNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GadgetChainLevelUpdateNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GadgetChainLevelUpdateNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GadgetChainLevelUpdateNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GadgetChainLevelUpdateNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GadgetChainLevelUpdateNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GadgetChainLevelUpdateNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GadgetChainLevelUpdateNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint32, uint32> gadget_chain_level_map = 12;
  int gadget_chain_level_map_size() const;
  void clear_gadget_chain_level_map();
  static const int kGadgetChainLevelMapFieldNumber = 12;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      gadget_chain_level_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_gadget_chain_level_map();

  // @@protoc_insertion_point(class_scope:proto.GadgetChainLevelUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry : public ::google::protobuf::internal::MapEntry<GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry();
    GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > gadget_chain_level_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class GadgetChainLevelChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetChainLevelChangeNotify) */ {
 public:
  GadgetChainLevelChangeNotify();
  virtual ~GadgetChainLevelChangeNotify();

  GadgetChainLevelChangeNotify(const GadgetChainLevelChangeNotify& from);

  inline GadgetChainLevelChangeNotify& operator=(const GadgetChainLevelChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetChainLevelChangeNotify(GadgetChainLevelChangeNotify&& from) noexcept
    : GadgetChainLevelChangeNotify() {
    *this = ::std::move(from);
  }

  inline GadgetChainLevelChangeNotify& operator=(GadgetChainLevelChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetChainLevelChangeNotify& default_instance();

  static inline const GadgetChainLevelChangeNotify* internal_default_instance() {
    return reinterpret_cast<const GadgetChainLevelChangeNotify*>(
               &_GadgetChainLevelChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(GadgetChainLevelChangeNotify* other);
  friend void swap(GadgetChainLevelChangeNotify& a, GadgetChainLevelChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetChainLevelChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetChainLevelChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetChainLevelChangeNotify& from);
  void MergeFrom(const GadgetChainLevelChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetChainLevelChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef GadgetChainLevelChangeNotify_CmdId CmdId;
  static const CmdId NONE =
    GadgetChainLevelChangeNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    GadgetChainLevelChangeNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GadgetChainLevelChangeNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GadgetChainLevelChangeNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GadgetChainLevelChangeNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GadgetChainLevelChangeNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GadgetChainLevelChangeNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GadgetChainLevelChangeNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GadgetChainLevelChangeNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GadgetChainLevelChangeNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GadgetChainLevelChangeNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint32, uint32> gadget_chain_level_map = 2;
  int gadget_chain_level_map_size() const;
  void clear_gadget_chain_level_map();
  static const int kGadgetChainLevelMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      gadget_chain_level_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_gadget_chain_level_map();

  // @@protoc_insertion_point(class_scope:proto.GadgetChainLevelChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry : public ::google::protobuf::internal::MapEntry<GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry();
    GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > gadget_chain_level_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleInteractReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.VehicleInteractReq) */ {
 public:
  VehicleInteractReq();
  virtual ~VehicleInteractReq();

  VehicleInteractReq(const VehicleInteractReq& from);

  inline VehicleInteractReq& operator=(const VehicleInteractReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleInteractReq(VehicleInteractReq&& from) noexcept
    : VehicleInteractReq() {
    *this = ::std::move(from);
  }

  inline VehicleInteractReq& operator=(VehicleInteractReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleInteractReq& default_instance();

  static inline const VehicleInteractReq* internal_default_instance() {
    return reinterpret_cast<const VehicleInteractReq*>(
               &_VehicleInteractReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(VehicleInteractReq* other);
  friend void swap(VehicleInteractReq& a, VehicleInteractReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleInteractReq* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleInteractReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleInteractReq& from);
  void MergeFrom(const VehicleInteractReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleInteractReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef VehicleInteractReq_CmdId CmdId;
  static const CmdId NONE =
    VehicleInteractReq_CmdId_NONE;
  static const CmdId CMD_ID =
    VehicleInteractReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    VehicleInteractReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    VehicleInteractReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    VehicleInteractReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return VehicleInteractReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    VehicleInteractReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    VehicleInteractReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    VehicleInteractReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return VehicleInteractReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return VehicleInteractReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return VehicleInteractReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 entity_id = 15;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 15;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // .proto.VehicleInteractType interact_type = 8;
  void clear_interact_type();
  static const int kInteractTypeFieldNumber = 8;
  ::proto::VehicleInteractType interact_type() const;
  void set_interact_type(::proto::VehicleInteractType value);

  // uint32 pos = 12;
  void clear_pos();
  static const int kPosFieldNumber = 12;
  ::google::protobuf::uint32 pos() const;
  void set_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.VehicleInteractReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  int interact_type_;
  ::google::protobuf::uint32 pos_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleInteractRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.VehicleInteractRsp) */ {
 public:
  VehicleInteractRsp();
  virtual ~VehicleInteractRsp();

  VehicleInteractRsp(const VehicleInteractRsp& from);

  inline VehicleInteractRsp& operator=(const VehicleInteractRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleInteractRsp(VehicleInteractRsp&& from) noexcept
    : VehicleInteractRsp() {
    *this = ::std::move(from);
  }

  inline VehicleInteractRsp& operator=(VehicleInteractRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleInteractRsp& default_instance();

  static inline const VehicleInteractRsp* internal_default_instance() {
    return reinterpret_cast<const VehicleInteractRsp*>(
               &_VehicleInteractRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(VehicleInteractRsp* other);
  friend void swap(VehicleInteractRsp& a, VehicleInteractRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleInteractRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleInteractRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleInteractRsp& from);
  void MergeFrom(const VehicleInteractRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleInteractRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef VehicleInteractRsp_CmdId CmdId;
  static const CmdId NONE =
    VehicleInteractRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    VehicleInteractRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    VehicleInteractRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    VehicleInteractRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return VehicleInteractRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    VehicleInteractRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    VehicleInteractRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    VehicleInteractRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return VehicleInteractRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return VehicleInteractRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return VehicleInteractRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.VehicleMember member = 3;
  bool has_member() const;
  void clear_member();
  static const int kMemberFieldNumber = 3;
  const ::proto::VehicleMember& member() const;
  ::proto::VehicleMember* mutable_member();
  ::proto::VehicleMember* release_member();
  void set_allocated_member(::proto::VehicleMember* member);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // .proto.VehicleInteractType interact_type = 15;
  void clear_interact_type();
  static const int kInteractTypeFieldNumber = 15;
  ::proto::VehicleInteractType interact_type() const;
  void set_interact_type(::proto::VehicleInteractType value);

  // @@protoc_insertion_point(class_scope:proto.VehicleInteractRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::VehicleMember* member_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 entity_id_;
  int interact_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateVehicleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CreateVehicleReq) */ {
 public:
  CreateVehicleReq();
  virtual ~CreateVehicleReq();

  CreateVehicleReq(const CreateVehicleReq& from);

  inline CreateVehicleReq& operator=(const CreateVehicleReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateVehicleReq(CreateVehicleReq&& from) noexcept
    : CreateVehicleReq() {
    *this = ::std::move(from);
  }

  inline CreateVehicleReq& operator=(CreateVehicleReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateVehicleReq& default_instance();

  static inline const CreateVehicleReq* internal_default_instance() {
    return reinterpret_cast<const CreateVehicleReq*>(
               &_CreateVehicleReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(CreateVehicleReq* other);
  friend void swap(CreateVehicleReq& a, CreateVehicleReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateVehicleReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateVehicleReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateVehicleReq& from);
  void MergeFrom(const CreateVehicleReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateVehicleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CreateVehicleReq_CmdId CmdId;
  static const CmdId NONE =
    CreateVehicleReq_CmdId_NONE;
  static const CmdId CMD_ID =
    CreateVehicleReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CreateVehicleReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CreateVehicleReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    CreateVehicleReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return CreateVehicleReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CreateVehicleReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CreateVehicleReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CreateVehicleReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CreateVehicleReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CreateVehicleReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CreateVehicleReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector rot = 5;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 5;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // .proto.Vector pos = 11;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 11;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // uint32 vehicle_id = 2;
  void clear_vehicle_id();
  static const int kVehicleIdFieldNumber = 2;
  ::google::protobuf::uint32 vehicle_id() const;
  void set_vehicle_id(::google::protobuf::uint32 value);

  // uint32 scene_point_id = 7;
  void clear_scene_point_id();
  static const int kScenePointIdFieldNumber = 7;
  ::google::protobuf::uint32 scene_point_id() const;
  void set_scene_point_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CreateVehicleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* rot_;
  ::proto::Vector* pos_;
  ::google::protobuf::uint32 vehicle_id_;
  ::google::protobuf::uint32 scene_point_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateVehicleRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CreateVehicleRsp) */ {
 public:
  CreateVehicleRsp();
  virtual ~CreateVehicleRsp();

  CreateVehicleRsp(const CreateVehicleRsp& from);

  inline CreateVehicleRsp& operator=(const CreateVehicleRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateVehicleRsp(CreateVehicleRsp&& from) noexcept
    : CreateVehicleRsp() {
    *this = ::std::move(from);
  }

  inline CreateVehicleRsp& operator=(CreateVehicleRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateVehicleRsp& default_instance();

  static inline const CreateVehicleRsp* internal_default_instance() {
    return reinterpret_cast<const CreateVehicleRsp*>(
               &_CreateVehicleRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(CreateVehicleRsp* other);
  friend void swap(CreateVehicleRsp& a, CreateVehicleRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateVehicleRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateVehicleRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateVehicleRsp& from);
  void MergeFrom(const CreateVehicleRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateVehicleRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CreateVehicleRsp_CmdId CmdId;
  static const CmdId NONE =
    CreateVehicleRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    CreateVehicleRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CreateVehicleRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CreateVehicleRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CreateVehicleRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CreateVehicleRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CreateVehicleRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CreateVehicleRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CreateVehicleRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CreateVehicleRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CreateVehicleRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 entity_id = 11;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 11;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 vehicle_id = 9;
  void clear_vehicle_id();
  static const int kVehicleIdFieldNumber = 9;
  ::google::protobuf::uint32 vehicle_id() const;
  void set_vehicle_id(::google::protobuf::uint32 value);

  // int32 retcode = 10;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 10;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.CreateVehicleRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 vehicle_id_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RequestLiveInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RequestLiveInfoReq) */ {
 public:
  RequestLiveInfoReq();
  virtual ~RequestLiveInfoReq();

  RequestLiveInfoReq(const RequestLiveInfoReq& from);

  inline RequestLiveInfoReq& operator=(const RequestLiveInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RequestLiveInfoReq(RequestLiveInfoReq&& from) noexcept
    : RequestLiveInfoReq() {
    *this = ::std::move(from);
  }

  inline RequestLiveInfoReq& operator=(RequestLiveInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestLiveInfoReq& default_instance();

  static inline const RequestLiveInfoReq* internal_default_instance() {
    return reinterpret_cast<const RequestLiveInfoReq*>(
               &_RequestLiveInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(RequestLiveInfoReq* other);
  friend void swap(RequestLiveInfoReq& a, RequestLiveInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestLiveInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RequestLiveInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RequestLiveInfoReq& from);
  void MergeFrom(const RequestLiveInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RequestLiveInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RequestLiveInfoReq_CmdId CmdId;
  static const CmdId NONE =
    RequestLiveInfoReq_CmdId_NONE;
  static const CmdId CMD_ID =
    RequestLiveInfoReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    RequestLiveInfoReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    RequestLiveInfoReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    RequestLiveInfoReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return RequestLiveInfoReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    RequestLiveInfoReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    RequestLiveInfoReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    RequestLiveInfoReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return RequestLiveInfoReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return RequestLiveInfoReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return RequestLiveInfoReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 live_id = 6;
  void clear_live_id();
  static const int kLiveIdFieldNumber = 6;
  ::google::protobuf::uint32 live_id() const;
  void set_live_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.RequestLiveInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 live_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RequestLiveInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RequestLiveInfoRsp) */ {
 public:
  RequestLiveInfoRsp();
  virtual ~RequestLiveInfoRsp();

  RequestLiveInfoRsp(const RequestLiveInfoRsp& from);

  inline RequestLiveInfoRsp& operator=(const RequestLiveInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RequestLiveInfoRsp(RequestLiveInfoRsp&& from) noexcept
    : RequestLiveInfoRsp() {
    *this = ::std::move(from);
  }

  inline RequestLiveInfoRsp& operator=(RequestLiveInfoRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestLiveInfoRsp& default_instance();

  static inline const RequestLiveInfoRsp* internal_default_instance() {
    return reinterpret_cast<const RequestLiveInfoRsp*>(
               &_RequestLiveInfoRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(RequestLiveInfoRsp* other);
  friend void swap(RequestLiveInfoRsp& a, RequestLiveInfoRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestLiveInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  RequestLiveInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RequestLiveInfoRsp& from);
  void MergeFrom(const RequestLiveInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RequestLiveInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RequestLiveInfoRsp_CmdId CmdId;
  static const CmdId NONE =
    RequestLiveInfoRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    RequestLiveInfoRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    RequestLiveInfoRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    RequestLiveInfoRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return RequestLiveInfoRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    RequestLiveInfoRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    RequestLiveInfoRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    RequestLiveInfoRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return RequestLiveInfoRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return RequestLiveInfoRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return RequestLiveInfoRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string live_url = 12;
  void clear_live_url();
  static const int kLiveUrlFieldNumber = 12;
  const ::std::string& live_url() const;
  void set_live_url(const ::std::string& value);
  #if LANG_CXX11
  void set_live_url(::std::string&& value);
  #endif
  void set_live_url(const char* value);
  void set_live_url(const char* value, size_t size);
  ::std::string* mutable_live_url();
  ::std::string* release_live_url();
  void set_allocated_live_url(::std::string* live_url);

  // string spare_live_url = 14;
  void clear_spare_live_url();
  static const int kSpareLiveUrlFieldNumber = 14;
  const ::std::string& spare_live_url() const;
  void set_spare_live_url(const ::std::string& value);
  #if LANG_CXX11
  void set_spare_live_url(::std::string&& value);
  #endif
  void set_spare_live_url(const char* value);
  void set_spare_live_url(const char* value, size_t size);
  ::std::string* mutable_spare_live_url();
  ::std::string* release_spare_live_url();
  void set_allocated_spare_live_url(::std::string* spare_live_url);

  // uint32 live_id = 2;
  void clear_live_id();
  static const int kLiveIdFieldNumber = 2;
  ::google::protobuf::uint32 live_id() const;
  void set_live_id(::google::protobuf::uint32 value);

  // int32 retcode = 9;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 9;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.RequestLiveInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr live_url_;
  ::google::protobuf::internal::ArenaStringPtr spare_live_url_;
  ::google::protobuf::uint32 live_id_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LiveStartNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LiveStartNotify) */ {
 public:
  LiveStartNotify();
  virtual ~LiveStartNotify();

  LiveStartNotify(const LiveStartNotify& from);

  inline LiveStartNotify& operator=(const LiveStartNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LiveStartNotify(LiveStartNotify&& from) noexcept
    : LiveStartNotify() {
    *this = ::std::move(from);
  }

  inline LiveStartNotify& operator=(LiveStartNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LiveStartNotify& default_instance();

  static inline const LiveStartNotify* internal_default_instance() {
    return reinterpret_cast<const LiveStartNotify*>(
               &_LiveStartNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(LiveStartNotify* other);
  friend void swap(LiveStartNotify& a, LiveStartNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LiveStartNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  LiveStartNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LiveStartNotify& from);
  void MergeFrom(const LiveStartNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LiveStartNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LiveStartNotify_CmdId CmdId;
  static const CmdId NONE =
    LiveStartNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    LiveStartNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    LiveStartNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    LiveStartNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return LiveStartNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    LiveStartNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    LiveStartNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    LiveStartNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return LiveStartNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return LiveStartNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return LiveStartNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 live_id = 2;
  void clear_live_id();
  static const int kLiveIdFieldNumber = 2;
  ::google::protobuf::uint32 live_id() const;
  void set_live_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.LiveStartNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 live_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProjectorOptionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ProjectorOptionReq) */ {
 public:
  ProjectorOptionReq();
  virtual ~ProjectorOptionReq();

  ProjectorOptionReq(const ProjectorOptionReq& from);

  inline ProjectorOptionReq& operator=(const ProjectorOptionReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjectorOptionReq(ProjectorOptionReq&& from) noexcept
    : ProjectorOptionReq() {
    *this = ::std::move(from);
  }

  inline ProjectorOptionReq& operator=(ProjectorOptionReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProjectorOptionReq& default_instance();

  static inline const ProjectorOptionReq* internal_default_instance() {
    return reinterpret_cast<const ProjectorOptionReq*>(
               &_ProjectorOptionReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(ProjectorOptionReq* other);
  friend void swap(ProjectorOptionReq& a, ProjectorOptionReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjectorOptionReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ProjectorOptionReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProjectorOptionReq& from);
  void MergeFrom(const ProjectorOptionReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProjectorOptionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ProjectorOptionReq_CmdId CmdId;
  static const CmdId NONE =
    ProjectorOptionReq_CmdId_NONE;
  static const CmdId CMD_ID =
    ProjectorOptionReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ProjectorOptionReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ProjectorOptionReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ProjectorOptionReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ProjectorOptionReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ProjectorOptionReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ProjectorOptionReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ProjectorOptionReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ProjectorOptionReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ProjectorOptionReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ProjectorOptionReq_CmdId_Parse(name, value);
  }

  typedef ProjectorOptionReq_ProjectorOpType ProjectorOpType;
  static const ProjectorOpType PROJECTOR_OP_NONE =
    ProjectorOptionReq_ProjectorOpType_PROJECTOR_OP_NONE;
  static const ProjectorOpType PROJECTOR_OP_CREATE =
    ProjectorOptionReq_ProjectorOpType_PROJECTOR_OP_CREATE;
  static const ProjectorOpType PROJECTOR_OP_DESTROY =
    ProjectorOptionReq_ProjectorOpType_PROJECTOR_OP_DESTROY;
  static inline bool ProjectorOpType_IsValid(int value) {
    return ProjectorOptionReq_ProjectorOpType_IsValid(value);
  }
  static const ProjectorOpType ProjectorOpType_MIN =
    ProjectorOptionReq_ProjectorOpType_ProjectorOpType_MIN;
  static const ProjectorOpType ProjectorOpType_MAX =
    ProjectorOptionReq_ProjectorOpType_ProjectorOpType_MAX;
  static const int ProjectorOpType_ARRAYSIZE =
    ProjectorOptionReq_ProjectorOpType_ProjectorOpType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ProjectorOpType_descriptor() {
    return ProjectorOptionReq_ProjectorOpType_descriptor();
  }
  static inline const ::std::string& ProjectorOpType_Name(ProjectorOpType value) {
    return ProjectorOptionReq_ProjectorOpType_Name(value);
  }
  static inline bool ProjectorOpType_Parse(const ::std::string& name,
      ProjectorOpType* value) {
    return ProjectorOptionReq_ProjectorOpType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 op_type = 7;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 7;
  ::google::protobuf::uint32 op_type() const;
  void set_op_type(::google::protobuf::uint32 value);

  // uint32 entity_id = 10;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 10;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ProjectorOptionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 op_type_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProjectorOptionRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ProjectorOptionRsp) */ {
 public:
  ProjectorOptionRsp();
  virtual ~ProjectorOptionRsp();

  ProjectorOptionRsp(const ProjectorOptionRsp& from);

  inline ProjectorOptionRsp& operator=(const ProjectorOptionRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjectorOptionRsp(ProjectorOptionRsp&& from) noexcept
    : ProjectorOptionRsp() {
    *this = ::std::move(from);
  }

  inline ProjectorOptionRsp& operator=(ProjectorOptionRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProjectorOptionRsp& default_instance();

  static inline const ProjectorOptionRsp* internal_default_instance() {
    return reinterpret_cast<const ProjectorOptionRsp*>(
               &_ProjectorOptionRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(ProjectorOptionRsp* other);
  friend void swap(ProjectorOptionRsp& a, ProjectorOptionRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjectorOptionRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ProjectorOptionRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProjectorOptionRsp& from);
  void MergeFrom(const ProjectorOptionRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProjectorOptionRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ProjectorOptionRsp_CmdId CmdId;
  static const CmdId NONE =
    ProjectorOptionRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    ProjectorOptionRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ProjectorOptionRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ProjectorOptionRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ProjectorOptionRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ProjectorOptionRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ProjectorOptionRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ProjectorOptionRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ProjectorOptionRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ProjectorOptionRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ProjectorOptionRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 op_type = 13;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 13;
  ::google::protobuf::uint32 op_type() const;
  void set_op_type(::google::protobuf::uint32 value);

  // uint32 entity_id = 10;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 10;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // int32 retcode = 12;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 12;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ProjectorOptionRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 op_type_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LiveEndNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LiveEndNotify) */ {
 public:
  LiveEndNotify();
  virtual ~LiveEndNotify();

  LiveEndNotify(const LiveEndNotify& from);

  inline LiveEndNotify& operator=(const LiveEndNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LiveEndNotify(LiveEndNotify&& from) noexcept
    : LiveEndNotify() {
    *this = ::std::move(from);
  }

  inline LiveEndNotify& operator=(LiveEndNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LiveEndNotify& default_instance();

  static inline const LiveEndNotify* internal_default_instance() {
    return reinterpret_cast<const LiveEndNotify*>(
               &_LiveEndNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(LiveEndNotify* other);
  friend void swap(LiveEndNotify& a, LiveEndNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LiveEndNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  LiveEndNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LiveEndNotify& from);
  void MergeFrom(const LiveEndNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LiveEndNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LiveEndNotify_CmdId CmdId;
  static const CmdId NONE =
    LiveEndNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    LiveEndNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    LiveEndNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    LiveEndNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return LiveEndNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    LiveEndNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    LiveEndNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    LiveEndNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return LiveEndNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return LiveEndNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return LiveEndNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 live_id = 5;
  void clear_live_id();
  static const int kLiveIdFieldNumber = 5;
  ::google::protobuf::uint32 live_id() const;
  void set_live_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.LiveEndNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 live_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleStaminaNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.VehicleStaminaNotify) */ {
 public:
  VehicleStaminaNotify();
  virtual ~VehicleStaminaNotify();

  VehicleStaminaNotify(const VehicleStaminaNotify& from);

  inline VehicleStaminaNotify& operator=(const VehicleStaminaNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleStaminaNotify(VehicleStaminaNotify&& from) noexcept
    : VehicleStaminaNotify() {
    *this = ::std::move(from);
  }

  inline VehicleStaminaNotify& operator=(VehicleStaminaNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleStaminaNotify& default_instance();

  static inline const VehicleStaminaNotify* internal_default_instance() {
    return reinterpret_cast<const VehicleStaminaNotify*>(
               &_VehicleStaminaNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(VehicleStaminaNotify* other);
  friend void swap(VehicleStaminaNotify& a, VehicleStaminaNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleStaminaNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleStaminaNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleStaminaNotify& from);
  void MergeFrom(const VehicleStaminaNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleStaminaNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef VehicleStaminaNotify_CmdId CmdId;
  static const CmdId NONE =
    VehicleStaminaNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    VehicleStaminaNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    VehicleStaminaNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    VehicleStaminaNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return VehicleStaminaNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    VehicleStaminaNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    VehicleStaminaNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    VehicleStaminaNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return VehicleStaminaNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return VehicleStaminaNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return VehicleStaminaNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 entity_id = 6;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 6;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // float cur_stamina = 14;
  void clear_cur_stamina();
  static const int kCurStaminaFieldNumber = 14;
  float cur_stamina() const;
  void set_cur_stamina(float value);

  // @@protoc_insertion_point(class_scope:proto.VehicleStaminaNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  float cur_stamina_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GadgetCustomTreeInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetCustomTreeInfoNotify) */ {
 public:
  GadgetCustomTreeInfoNotify();
  virtual ~GadgetCustomTreeInfoNotify();

  GadgetCustomTreeInfoNotify(const GadgetCustomTreeInfoNotify& from);

  inline GadgetCustomTreeInfoNotify& operator=(const GadgetCustomTreeInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetCustomTreeInfoNotify(GadgetCustomTreeInfoNotify&& from) noexcept
    : GadgetCustomTreeInfoNotify() {
    *this = ::std::move(from);
  }

  inline GadgetCustomTreeInfoNotify& operator=(GadgetCustomTreeInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetCustomTreeInfoNotify& default_instance();

  static inline const GadgetCustomTreeInfoNotify* internal_default_instance() {
    return reinterpret_cast<const GadgetCustomTreeInfoNotify*>(
               &_GadgetCustomTreeInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(GadgetCustomTreeInfoNotify* other);
  friend void swap(GadgetCustomTreeInfoNotify& a, GadgetCustomTreeInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetCustomTreeInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetCustomTreeInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetCustomTreeInfoNotify& from);
  void MergeFrom(const GadgetCustomTreeInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetCustomTreeInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GadgetCustomTreeInfoNotify_CmdId CmdId;
  static const CmdId NONE =
    GadgetCustomTreeInfoNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    GadgetCustomTreeInfoNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GadgetCustomTreeInfoNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GadgetCustomTreeInfoNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GadgetCustomTreeInfoNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GadgetCustomTreeInfoNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GadgetCustomTreeInfoNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GadgetCustomTreeInfoNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GadgetCustomTreeInfoNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GadgetCustomTreeInfoNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GadgetCustomTreeInfoNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.CustomGadgetTreeInfo custom_gadget_tree_info = 5;
  bool has_custom_gadget_tree_info() const;
  void clear_custom_gadget_tree_info();
  static const int kCustomGadgetTreeInfoFieldNumber = 5;
  const ::proto::CustomGadgetTreeInfo& custom_gadget_tree_info() const;
  ::proto::CustomGadgetTreeInfo* mutable_custom_gadget_tree_info();
  ::proto::CustomGadgetTreeInfo* release_custom_gadget_tree_info();
  void set_allocated_custom_gadget_tree_info(::proto::CustomGadgetTreeInfo* custom_gadget_tree_info);

  // uint32 gadget_entity_id = 12;
  void clear_gadget_entity_id();
  static const int kGadgetEntityIdFieldNumber = 12;
  ::google::protobuf::uint32 gadget_entity_id() const;
  void set_gadget_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GadgetCustomTreeInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::CustomGadgetTreeInfo* custom_gadget_tree_info_;
  ::google::protobuf::uint32 gadget_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GadgetChangeLevelTagReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetChangeLevelTagReq) */ {
 public:
  GadgetChangeLevelTagReq();
  virtual ~GadgetChangeLevelTagReq();

  GadgetChangeLevelTagReq(const GadgetChangeLevelTagReq& from);

  inline GadgetChangeLevelTagReq& operator=(const GadgetChangeLevelTagReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetChangeLevelTagReq(GadgetChangeLevelTagReq&& from) noexcept
    : GadgetChangeLevelTagReq() {
    *this = ::std::move(from);
  }

  inline GadgetChangeLevelTagReq& operator=(GadgetChangeLevelTagReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetChangeLevelTagReq& default_instance();

  static inline const GadgetChangeLevelTagReq* internal_default_instance() {
    return reinterpret_cast<const GadgetChangeLevelTagReq*>(
               &_GadgetChangeLevelTagReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(GadgetChangeLevelTagReq* other);
  friend void swap(GadgetChangeLevelTagReq& a, GadgetChangeLevelTagReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetChangeLevelTagReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetChangeLevelTagReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetChangeLevelTagReq& from);
  void MergeFrom(const GadgetChangeLevelTagReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetChangeLevelTagReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GadgetChangeLevelTagReq_CmdId CmdId;
  static const CmdId NONE =
    GadgetChangeLevelTagReq_CmdId_NONE;
  static const CmdId CMD_ID =
    GadgetChangeLevelTagReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GadgetChangeLevelTagReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GadgetChangeLevelTagReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    GadgetChangeLevelTagReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return GadgetChangeLevelTagReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GadgetChangeLevelTagReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GadgetChangeLevelTagReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GadgetChangeLevelTagReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GadgetChangeLevelTagReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GadgetChangeLevelTagReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GadgetChangeLevelTagReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.CustomGadgetTreeInfo combination_info = 11;
  bool has_combination_info() const;
  void clear_combination_info();
  static const int kCombinationInfoFieldNumber = 11;
  const ::proto::CustomGadgetTreeInfo& combination_info() const;
  ::proto::CustomGadgetTreeInfo* mutable_combination_info();
  ::proto::CustomGadgetTreeInfo* release_combination_info();
  void set_allocated_combination_info(::proto::CustomGadgetTreeInfo* combination_info);

  // uint32 gadget_entity_id = 10;
  void clear_gadget_entity_id();
  static const int kGadgetEntityIdFieldNumber = 10;
  ::google::protobuf::uint32 gadget_entity_id() const;
  void set_gadget_entity_id(::google::protobuf::uint32 value);

  // uint32 level_tag_id = 14;
  void clear_level_tag_id();
  static const int kLevelTagIdFieldNumber = 14;
  ::google::protobuf::uint32 level_tag_id() const;
  void set_level_tag_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GadgetChangeLevelTagReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::CustomGadgetTreeInfo* combination_info_;
  ::google::protobuf::uint32 gadget_entity_id_;
  ::google::protobuf::uint32 level_tag_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GadgetChangeLevelTagRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetChangeLevelTagRsp) */ {
 public:
  GadgetChangeLevelTagRsp();
  virtual ~GadgetChangeLevelTagRsp();

  GadgetChangeLevelTagRsp(const GadgetChangeLevelTagRsp& from);

  inline GadgetChangeLevelTagRsp& operator=(const GadgetChangeLevelTagRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetChangeLevelTagRsp(GadgetChangeLevelTagRsp&& from) noexcept
    : GadgetChangeLevelTagRsp() {
    *this = ::std::move(from);
  }

  inline GadgetChangeLevelTagRsp& operator=(GadgetChangeLevelTagRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetChangeLevelTagRsp& default_instance();

  static inline const GadgetChangeLevelTagRsp* internal_default_instance() {
    return reinterpret_cast<const GadgetChangeLevelTagRsp*>(
               &_GadgetChangeLevelTagRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(GadgetChangeLevelTagRsp* other);
  friend void swap(GadgetChangeLevelTagRsp& a, GadgetChangeLevelTagRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetChangeLevelTagRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetChangeLevelTagRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetChangeLevelTagRsp& from);
  void MergeFrom(const GadgetChangeLevelTagRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetChangeLevelTagRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GadgetChangeLevelTagRsp_CmdId CmdId;
  static const CmdId NONE =
    GadgetChangeLevelTagRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    GadgetChangeLevelTagRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GadgetChangeLevelTagRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GadgetChangeLevelTagRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GadgetChangeLevelTagRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GadgetChangeLevelTagRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GadgetChangeLevelTagRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GadgetChangeLevelTagRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GadgetChangeLevelTagRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GadgetChangeLevelTagRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GadgetChangeLevelTagRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 12;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 12;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GadgetChangeLevelTagRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NightCrowGadgetObservationMatchReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.NightCrowGadgetObservationMatchReq) */ {
 public:
  NightCrowGadgetObservationMatchReq();
  virtual ~NightCrowGadgetObservationMatchReq();

  NightCrowGadgetObservationMatchReq(const NightCrowGadgetObservationMatchReq& from);

  inline NightCrowGadgetObservationMatchReq& operator=(const NightCrowGadgetObservationMatchReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NightCrowGadgetObservationMatchReq(NightCrowGadgetObservationMatchReq&& from) noexcept
    : NightCrowGadgetObservationMatchReq() {
    *this = ::std::move(from);
  }

  inline NightCrowGadgetObservationMatchReq& operator=(NightCrowGadgetObservationMatchReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NightCrowGadgetObservationMatchReq& default_instance();

  static inline const NightCrowGadgetObservationMatchReq* internal_default_instance() {
    return reinterpret_cast<const NightCrowGadgetObservationMatchReq*>(
               &_NightCrowGadgetObservationMatchReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(NightCrowGadgetObservationMatchReq* other);
  friend void swap(NightCrowGadgetObservationMatchReq& a, NightCrowGadgetObservationMatchReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NightCrowGadgetObservationMatchReq* New() const PROTOBUF_FINAL { return New(NULL); }

  NightCrowGadgetObservationMatchReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NightCrowGadgetObservationMatchReq& from);
  void MergeFrom(const NightCrowGadgetObservationMatchReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NightCrowGadgetObservationMatchReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef NightCrowGadgetObservationMatchReq_CmdId CmdId;
  static const CmdId NONE =
    NightCrowGadgetObservationMatchReq_CmdId_NONE;
  static const CmdId CMD_ID =
    NightCrowGadgetObservationMatchReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    NightCrowGadgetObservationMatchReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    NightCrowGadgetObservationMatchReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    NightCrowGadgetObservationMatchReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return NightCrowGadgetObservationMatchReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    NightCrowGadgetObservationMatchReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    NightCrowGadgetObservationMatchReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    NightCrowGadgetObservationMatchReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return NightCrowGadgetObservationMatchReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return NightCrowGadgetObservationMatchReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return NightCrowGadgetObservationMatchReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 target_gadget_state = 3;
  void clear_target_gadget_state();
  static const int kTargetGadgetStateFieldNumber = 3;
  ::google::protobuf::uint32 target_gadget_state() const;
  void set_target_gadget_state(::google::protobuf::uint32 value);

  // uint32 gadget_entity_id = 8;
  void clear_gadget_entity_id();
  static const int kGadgetEntityIdFieldNumber = 8;
  ::google::protobuf::uint32 gadget_entity_id() const;
  void set_gadget_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.NightCrowGadgetObservationMatchReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_gadget_state_;
  ::google::protobuf::uint32 gadget_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NightCrowGadgetObservationMatchRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.NightCrowGadgetObservationMatchRsp) */ {
 public:
  NightCrowGadgetObservationMatchRsp();
  virtual ~NightCrowGadgetObservationMatchRsp();

  NightCrowGadgetObservationMatchRsp(const NightCrowGadgetObservationMatchRsp& from);

  inline NightCrowGadgetObservationMatchRsp& operator=(const NightCrowGadgetObservationMatchRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NightCrowGadgetObservationMatchRsp(NightCrowGadgetObservationMatchRsp&& from) noexcept
    : NightCrowGadgetObservationMatchRsp() {
    *this = ::std::move(from);
  }

  inline NightCrowGadgetObservationMatchRsp& operator=(NightCrowGadgetObservationMatchRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NightCrowGadgetObservationMatchRsp& default_instance();

  static inline const NightCrowGadgetObservationMatchRsp* internal_default_instance() {
    return reinterpret_cast<const NightCrowGadgetObservationMatchRsp*>(
               &_NightCrowGadgetObservationMatchRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(NightCrowGadgetObservationMatchRsp* other);
  friend void swap(NightCrowGadgetObservationMatchRsp& a, NightCrowGadgetObservationMatchRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NightCrowGadgetObservationMatchRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  NightCrowGadgetObservationMatchRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NightCrowGadgetObservationMatchRsp& from);
  void MergeFrom(const NightCrowGadgetObservationMatchRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NightCrowGadgetObservationMatchRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef NightCrowGadgetObservationMatchRsp_CmdId CmdId;
  static const CmdId NONE =
    NightCrowGadgetObservationMatchRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    NightCrowGadgetObservationMatchRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    NightCrowGadgetObservationMatchRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    NightCrowGadgetObservationMatchRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return NightCrowGadgetObservationMatchRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    NightCrowGadgetObservationMatchRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    NightCrowGadgetObservationMatchRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    NightCrowGadgetObservationMatchRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return NightCrowGadgetObservationMatchRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return NightCrowGadgetObservationMatchRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return NightCrowGadgetObservationMatchRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 15;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 15;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.NightCrowGadgetObservationMatchRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeshretObeliskChestInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DeshretObeliskChestInfo) */ {
 public:
  DeshretObeliskChestInfo();
  virtual ~DeshretObeliskChestInfo();

  DeshretObeliskChestInfo(const DeshretObeliskChestInfo& from);

  inline DeshretObeliskChestInfo& operator=(const DeshretObeliskChestInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeshretObeliskChestInfo(DeshretObeliskChestInfo&& from) noexcept
    : DeshretObeliskChestInfo() {
    *this = ::std::move(from);
  }

  inline DeshretObeliskChestInfo& operator=(DeshretObeliskChestInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeshretObeliskChestInfo& default_instance();

  static inline const DeshretObeliskChestInfo* internal_default_instance() {
    return reinterpret_cast<const DeshretObeliskChestInfo*>(
               &_DeshretObeliskChestInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(DeshretObeliskChestInfo* other);
  friend void swap(DeshretObeliskChestInfo& a, DeshretObeliskChestInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeshretObeliskChestInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DeshretObeliskChestInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeshretObeliskChestInfo& from);
  void MergeFrom(const DeshretObeliskChestInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeshretObeliskChestInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 9;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 9;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // uint32 config_id = 3;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 3;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 5;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 5;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 group_id = 7;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 7;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DeshretObeliskChestInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::google::protobuf::uint32 config_id_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 group_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeshretObeliskChestInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DeshretObeliskChestInfoNotify) */ {
 public:
  DeshretObeliskChestInfoNotify();
  virtual ~DeshretObeliskChestInfoNotify();

  DeshretObeliskChestInfoNotify(const DeshretObeliskChestInfoNotify& from);

  inline DeshretObeliskChestInfoNotify& operator=(const DeshretObeliskChestInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeshretObeliskChestInfoNotify(DeshretObeliskChestInfoNotify&& from) noexcept
    : DeshretObeliskChestInfoNotify() {
    *this = ::std::move(from);
  }

  inline DeshretObeliskChestInfoNotify& operator=(DeshretObeliskChestInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeshretObeliskChestInfoNotify& default_instance();

  static inline const DeshretObeliskChestInfoNotify* internal_default_instance() {
    return reinterpret_cast<const DeshretObeliskChestInfoNotify*>(
               &_DeshretObeliskChestInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(DeshretObeliskChestInfoNotify* other);
  friend void swap(DeshretObeliskChestInfoNotify& a, DeshretObeliskChestInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeshretObeliskChestInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DeshretObeliskChestInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeshretObeliskChestInfoNotify& from);
  void MergeFrom(const DeshretObeliskChestInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeshretObeliskChestInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DeshretObeliskChestInfoNotify_CmdId CmdId;
  static const CmdId NONE =
    DeshretObeliskChestInfoNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    DeshretObeliskChestInfoNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    DeshretObeliskChestInfoNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    DeshretObeliskChestInfoNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return DeshretObeliskChestInfoNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    DeshretObeliskChestInfoNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    DeshretObeliskChestInfoNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    DeshretObeliskChestInfoNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return DeshretObeliskChestInfoNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return DeshretObeliskChestInfoNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return DeshretObeliskChestInfoNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.DeshretObeliskChestInfo chest_info_list = 14;
  int chest_info_list_size() const;
  void clear_chest_info_list();
  static const int kChestInfoListFieldNumber = 14;
  const ::proto::DeshretObeliskChestInfo& chest_info_list(int index) const;
  ::proto::DeshretObeliskChestInfo* mutable_chest_info_list(int index);
  ::proto::DeshretObeliskChestInfo* add_chest_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::DeshretObeliskChestInfo >*
      mutable_chest_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::DeshretObeliskChestInfo >&
      chest_info_list() const;

  // @@protoc_insertion_point(class_scope:proto.DeshretObeliskChestInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::DeshretObeliskChestInfo > chest_info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================


// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::GadgetInteractReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetInteractReq_CmdId>() {
  return ::proto::GadgetInteractReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetInteractRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetInteractRsp_CmdId>() {
  return ::proto::GadgetInteractRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetStateNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetStateNotify_CmdId>() {
  return ::proto::GadgetStateNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::WorktopOptionNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::WorktopOptionNotify_CmdId>() {
  return ::proto::WorktopOptionNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SelectWorktopOptionReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SelectWorktopOptionReq_CmdId>() {
  return ::proto::SelectWorktopOptionReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SelectWorktopOptionRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SelectWorktopOptionRsp_CmdId>() {
  return ::proto::SelectWorktopOptionRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BossChestActivateNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BossChestActivateNotify_CmdId>() {
  return ::proto::BossChestActivateNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BlossomChestInfoNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BlossomChestInfoNotify_CmdId>() {
  return ::proto::BlossomChestInfoNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetPlayStartNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetPlayStartNotify_CmdId>() {
  return ::proto::GadgetPlayStartNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetPlayStopNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetPlayStopNotify_CmdId>() {
  return ::proto::GadgetPlayStopNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetPlayDataNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetPlayDataNotify_CmdId>() {
  return ::proto::GadgetPlayDataNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetPlayUidOpNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetPlayUidOpNotify_CmdId>() {
  return ::proto::GadgetPlayUidOpNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetGeneralRewardInfoNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetGeneralRewardInfoNotify_CmdId>() {
  return ::proto::GadgetGeneralRewardInfoNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetAutoPickDropInfoNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetAutoPickDropInfoNotify_CmdId>() {
  return ::proto::GadgetAutoPickDropInfoNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::UpdateAbilityCreatedMovingPlatformNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::UpdateAbilityCreatedMovingPlatformNotify_CmdId>() {
  return ::proto::UpdateAbilityCreatedMovingPlatformNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::UpdateAbilityCreatedMovingPlatformNotify_OpType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::UpdateAbilityCreatedMovingPlatformNotify_OpType>() {
  return ::proto::UpdateAbilityCreatedMovingPlatformNotify_OpType_descriptor();
}
template <> struct is_proto_enum< ::proto::FoundationReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::FoundationReq_CmdId>() {
  return ::proto::FoundationReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::FoundationRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::FoundationRsp_CmdId>() {
  return ::proto::FoundationRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::FoundationNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::FoundationNotify_CmdId>() {
  return ::proto::FoundationNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetTalkChangeNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetTalkChangeNotify_CmdId>() {
  return ::proto::GadgetTalkChangeNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetChainLevelUpdateNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetChainLevelUpdateNotify_CmdId>() {
  return ::proto::GadgetChainLevelUpdateNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetChainLevelChangeNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetChainLevelChangeNotify_CmdId>() {
  return ::proto::GadgetChainLevelChangeNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::VehicleInteractReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::VehicleInteractReq_CmdId>() {
  return ::proto::VehicleInteractReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::VehicleInteractRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::VehicleInteractRsp_CmdId>() {
  return ::proto::VehicleInteractRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CreateVehicleReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CreateVehicleReq_CmdId>() {
  return ::proto::CreateVehicleReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CreateVehicleRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CreateVehicleRsp_CmdId>() {
  return ::proto::CreateVehicleRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::RequestLiveInfoReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::RequestLiveInfoReq_CmdId>() {
  return ::proto::RequestLiveInfoReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::RequestLiveInfoRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::RequestLiveInfoRsp_CmdId>() {
  return ::proto::RequestLiveInfoRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::LiveStartNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::LiveStartNotify_CmdId>() {
  return ::proto::LiveStartNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ProjectorOptionReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ProjectorOptionReq_CmdId>() {
  return ::proto::ProjectorOptionReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ProjectorOptionReq_ProjectorOpType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ProjectorOptionReq_ProjectorOpType>() {
  return ::proto::ProjectorOptionReq_ProjectorOpType_descriptor();
}
template <> struct is_proto_enum< ::proto::ProjectorOptionRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ProjectorOptionRsp_CmdId>() {
  return ::proto::ProjectorOptionRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::LiveEndNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::LiveEndNotify_CmdId>() {
  return ::proto::LiveEndNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::VehicleStaminaNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::VehicleStaminaNotify_CmdId>() {
  return ::proto::VehicleStaminaNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetCustomTreeInfoNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetCustomTreeInfoNotify_CmdId>() {
  return ::proto::GadgetCustomTreeInfoNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetChangeLevelTagReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetChangeLevelTagReq_CmdId>() {
  return ::proto::GadgetChangeLevelTagReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetChangeLevelTagRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetChangeLevelTagRsp_CmdId>() {
  return ::proto::GadgetChangeLevelTagRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::NightCrowGadgetObservationMatchReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::NightCrowGadgetObservationMatchReq_CmdId>() {
  return ::proto::NightCrowGadgetObservationMatchReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::NightCrowGadgetObservationMatchRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::NightCrowGadgetObservationMatchRsp_CmdId>() {
  return ::proto::NightCrowGadgetObservationMatchRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::DeshretObeliskChestInfoNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DeshretObeliskChestInfoNotify_CmdId>() {
  return ::proto::DeshretObeliskChestInfoNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::InteractType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::InteractType>() {
  return ::proto::InteractType_descriptor();
}
template <> struct is_proto_enum< ::proto::InterOpType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::InterOpType>() {
  return ::proto::InterOpType_descriptor();
}
template <> struct is_proto_enum< ::proto::ResinCostType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ResinCostType>() {
  return ::proto::ResinCostType_descriptor();
}
template <> struct is_proto_enum< ::proto::FoundationOpType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::FoundationOpType>() {
  return ::proto::FoundationOpType_descriptor();
}
template <> struct is_proto_enum< ::proto::VehicleInteractType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::VehicleInteractType>() {
  return ::proto::VehicleInteractType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fgadget_2eproto__INCLUDED
