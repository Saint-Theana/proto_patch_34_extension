// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_offering.proto

#ifndef PROTOBUF_cmd_2fcmd_5foffering_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5foffering_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class OfferingInteractReq;
class OfferingInteractReqDefaultTypeInternal;
extern OfferingInteractReqDefaultTypeInternal _OfferingInteractReq_default_instance_;
class OfferingInteractRsp;
class OfferingInteractRspDefaultTypeInternal;
extern OfferingInteractRspDefaultTypeInternal _OfferingInteractRsp_default_instance_;
class PlayerOfferingData;
class PlayerOfferingDataDefaultTypeInternal;
extern PlayerOfferingDataDefaultTypeInternal _PlayerOfferingData_default_instance_;
class PlayerOfferingDataNotify;
class PlayerOfferingDataNotifyDefaultTypeInternal;
extern PlayerOfferingDataNotifyDefaultTypeInternal _PlayerOfferingDataNotify_default_instance_;
class PlayerOfferingReq;
class PlayerOfferingReqDefaultTypeInternal;
extern PlayerOfferingReqDefaultTypeInternal _PlayerOfferingReq_default_instance_;
class PlayerOfferingRsp;
class PlayerOfferingRspDefaultTypeInternal;
extern PlayerOfferingRspDefaultTypeInternal _PlayerOfferingRsp_default_instance_;
class TakeOfferingLevelRewardReq;
class TakeOfferingLevelRewardReqDefaultTypeInternal;
extern TakeOfferingLevelRewardReqDefaultTypeInternal _TakeOfferingLevelRewardReq_default_instance_;
class TakeOfferingLevelRewardRsp;
class TakeOfferingLevelRewardRspDefaultTypeInternal;
extern TakeOfferingLevelRewardRspDefaultTypeInternal _TakeOfferingLevelRewardRsp_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5foffering_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5foffering_2eproto

enum PlayerOfferingDataNotify_CmdId {
  PlayerOfferingDataNotify_CmdId_NONE = 0,
  PlayerOfferingDataNotify_CmdId_CMD_ID = 2923,
  PlayerOfferingDataNotify_CmdId_ENET_CHANNEL_ID = 0,
  PlayerOfferingDataNotify_CmdId_ENET_IS_RELIABLE = 1,
  PlayerOfferingDataNotify_CmdId_PlayerOfferingDataNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerOfferingDataNotify_CmdId_PlayerOfferingDataNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerOfferingDataNotify_CmdId_IsValid(int value);
const PlayerOfferingDataNotify_CmdId PlayerOfferingDataNotify_CmdId_CmdId_MIN = PlayerOfferingDataNotify_CmdId_NONE;
const PlayerOfferingDataNotify_CmdId PlayerOfferingDataNotify_CmdId_CmdId_MAX = PlayerOfferingDataNotify_CmdId_CMD_ID;
const int PlayerOfferingDataNotify_CmdId_CmdId_ARRAYSIZE = PlayerOfferingDataNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerOfferingDataNotify_CmdId_descriptor();
inline const ::std::string& PlayerOfferingDataNotify_CmdId_Name(PlayerOfferingDataNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerOfferingDataNotify_CmdId_descriptor(), value);
}
inline bool PlayerOfferingDataNotify_CmdId_Parse(
    const ::std::string& name, PlayerOfferingDataNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerOfferingDataNotify_CmdId>(
    PlayerOfferingDataNotify_CmdId_descriptor(), name, value);
}
enum PlayerOfferingReq_CmdId {
  PlayerOfferingReq_CmdId_NONE = 0,
  PlayerOfferingReq_CmdId_CMD_ID = 2907,
  PlayerOfferingReq_CmdId_ENET_CHANNEL_ID = 0,
  PlayerOfferingReq_CmdId_ENET_IS_RELIABLE = 1,
  PlayerOfferingReq_CmdId_IS_ALLOW_CLIENT = 1,
  PlayerOfferingReq_CmdId_PlayerOfferingReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerOfferingReq_CmdId_PlayerOfferingReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerOfferingReq_CmdId_IsValid(int value);
const PlayerOfferingReq_CmdId PlayerOfferingReq_CmdId_CmdId_MIN = PlayerOfferingReq_CmdId_NONE;
const PlayerOfferingReq_CmdId PlayerOfferingReq_CmdId_CmdId_MAX = PlayerOfferingReq_CmdId_CMD_ID;
const int PlayerOfferingReq_CmdId_CmdId_ARRAYSIZE = PlayerOfferingReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerOfferingReq_CmdId_descriptor();
inline const ::std::string& PlayerOfferingReq_CmdId_Name(PlayerOfferingReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerOfferingReq_CmdId_descriptor(), value);
}
inline bool PlayerOfferingReq_CmdId_Parse(
    const ::std::string& name, PlayerOfferingReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerOfferingReq_CmdId>(
    PlayerOfferingReq_CmdId_descriptor(), name, value);
}
enum PlayerOfferingRsp_CmdId {
  PlayerOfferingRsp_CmdId_NONE = 0,
  PlayerOfferingRsp_CmdId_CMD_ID = 2917,
  PlayerOfferingRsp_CmdId_ENET_CHANNEL_ID = 0,
  PlayerOfferingRsp_CmdId_ENET_IS_RELIABLE = 1,
  PlayerOfferingRsp_CmdId_PlayerOfferingRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerOfferingRsp_CmdId_PlayerOfferingRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerOfferingRsp_CmdId_IsValid(int value);
const PlayerOfferingRsp_CmdId PlayerOfferingRsp_CmdId_CmdId_MIN = PlayerOfferingRsp_CmdId_NONE;
const PlayerOfferingRsp_CmdId PlayerOfferingRsp_CmdId_CmdId_MAX = PlayerOfferingRsp_CmdId_CMD_ID;
const int PlayerOfferingRsp_CmdId_CmdId_ARRAYSIZE = PlayerOfferingRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerOfferingRsp_CmdId_descriptor();
inline const ::std::string& PlayerOfferingRsp_CmdId_Name(PlayerOfferingRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerOfferingRsp_CmdId_descriptor(), value);
}
inline bool PlayerOfferingRsp_CmdId_Parse(
    const ::std::string& name, PlayerOfferingRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerOfferingRsp_CmdId>(
    PlayerOfferingRsp_CmdId_descriptor(), name, value);
}
enum TakeOfferingLevelRewardReq_CmdId {
  TakeOfferingLevelRewardReq_CmdId_NONE = 0,
  TakeOfferingLevelRewardReq_CmdId_CMD_ID = 2919,
  TakeOfferingLevelRewardReq_CmdId_ENET_CHANNEL_ID = 0,
  TakeOfferingLevelRewardReq_CmdId_ENET_IS_RELIABLE = 1,
  TakeOfferingLevelRewardReq_CmdId_IS_ALLOW_CLIENT = 1,
  TakeOfferingLevelRewardReq_CmdId_TakeOfferingLevelRewardReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TakeOfferingLevelRewardReq_CmdId_TakeOfferingLevelRewardReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TakeOfferingLevelRewardReq_CmdId_IsValid(int value);
const TakeOfferingLevelRewardReq_CmdId TakeOfferingLevelRewardReq_CmdId_CmdId_MIN = TakeOfferingLevelRewardReq_CmdId_NONE;
const TakeOfferingLevelRewardReq_CmdId TakeOfferingLevelRewardReq_CmdId_CmdId_MAX = TakeOfferingLevelRewardReq_CmdId_CMD_ID;
const int TakeOfferingLevelRewardReq_CmdId_CmdId_ARRAYSIZE = TakeOfferingLevelRewardReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TakeOfferingLevelRewardReq_CmdId_descriptor();
inline const ::std::string& TakeOfferingLevelRewardReq_CmdId_Name(TakeOfferingLevelRewardReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TakeOfferingLevelRewardReq_CmdId_descriptor(), value);
}
inline bool TakeOfferingLevelRewardReq_CmdId_Parse(
    const ::std::string& name, TakeOfferingLevelRewardReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TakeOfferingLevelRewardReq_CmdId>(
    TakeOfferingLevelRewardReq_CmdId_descriptor(), name, value);
}
enum TakeOfferingLevelRewardRsp_CmdId {
  TakeOfferingLevelRewardRsp_CmdId_NONE = 0,
  TakeOfferingLevelRewardRsp_CmdId_CMD_ID = 2911,
  TakeOfferingLevelRewardRsp_CmdId_ENET_CHANNEL_ID = 0,
  TakeOfferingLevelRewardRsp_CmdId_ENET_IS_RELIABLE = 1,
  TakeOfferingLevelRewardRsp_CmdId_TakeOfferingLevelRewardRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TakeOfferingLevelRewardRsp_CmdId_TakeOfferingLevelRewardRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TakeOfferingLevelRewardRsp_CmdId_IsValid(int value);
const TakeOfferingLevelRewardRsp_CmdId TakeOfferingLevelRewardRsp_CmdId_CmdId_MIN = TakeOfferingLevelRewardRsp_CmdId_NONE;
const TakeOfferingLevelRewardRsp_CmdId TakeOfferingLevelRewardRsp_CmdId_CmdId_MAX = TakeOfferingLevelRewardRsp_CmdId_CMD_ID;
const int TakeOfferingLevelRewardRsp_CmdId_CmdId_ARRAYSIZE = TakeOfferingLevelRewardRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TakeOfferingLevelRewardRsp_CmdId_descriptor();
inline const ::std::string& TakeOfferingLevelRewardRsp_CmdId_Name(TakeOfferingLevelRewardRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TakeOfferingLevelRewardRsp_CmdId_descriptor(), value);
}
inline bool TakeOfferingLevelRewardRsp_CmdId_Parse(
    const ::std::string& name, TakeOfferingLevelRewardRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TakeOfferingLevelRewardRsp_CmdId>(
    TakeOfferingLevelRewardRsp_CmdId_descriptor(), name, value);
}
enum OfferingInteractReq_CmdId {
  OfferingInteractReq_CmdId_NONE = 0,
  OfferingInteractReq_CmdId_CMD_ID = 2918,
  OfferingInteractReq_CmdId_ENET_CHANNEL_ID = 0,
  OfferingInteractReq_CmdId_ENET_IS_RELIABLE = 1,
  OfferingInteractReq_CmdId_IS_ALLOW_CLIENT = 1,
  OfferingInteractReq_CmdId_OfferingInteractReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OfferingInteractReq_CmdId_OfferingInteractReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OfferingInteractReq_CmdId_IsValid(int value);
const OfferingInteractReq_CmdId OfferingInteractReq_CmdId_CmdId_MIN = OfferingInteractReq_CmdId_NONE;
const OfferingInteractReq_CmdId OfferingInteractReq_CmdId_CmdId_MAX = OfferingInteractReq_CmdId_CMD_ID;
const int OfferingInteractReq_CmdId_CmdId_ARRAYSIZE = OfferingInteractReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* OfferingInteractReq_CmdId_descriptor();
inline const ::std::string& OfferingInteractReq_CmdId_Name(OfferingInteractReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    OfferingInteractReq_CmdId_descriptor(), value);
}
inline bool OfferingInteractReq_CmdId_Parse(
    const ::std::string& name, OfferingInteractReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OfferingInteractReq_CmdId>(
    OfferingInteractReq_CmdId_descriptor(), name, value);
}
enum OfferingInteractRsp_CmdId {
  OfferingInteractRsp_CmdId_NONE = 0,
  OfferingInteractRsp_CmdId_CMD_ID = 2908,
  OfferingInteractRsp_CmdId_ENET_CHANNEL_ID = 0,
  OfferingInteractRsp_CmdId_ENET_IS_RELIABLE = 1,
  OfferingInteractRsp_CmdId_OfferingInteractRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OfferingInteractRsp_CmdId_OfferingInteractRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OfferingInteractRsp_CmdId_IsValid(int value);
const OfferingInteractRsp_CmdId OfferingInteractRsp_CmdId_CmdId_MIN = OfferingInteractRsp_CmdId_NONE;
const OfferingInteractRsp_CmdId OfferingInteractRsp_CmdId_CmdId_MAX = OfferingInteractRsp_CmdId_CMD_ID;
const int OfferingInteractRsp_CmdId_CmdId_ARRAYSIZE = OfferingInteractRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* OfferingInteractRsp_CmdId_descriptor();
inline const ::std::string& OfferingInteractRsp_CmdId_Name(OfferingInteractRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    OfferingInteractRsp_CmdId_descriptor(), value);
}
inline bool OfferingInteractRsp_CmdId_Parse(
    const ::std::string& name, OfferingInteractRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OfferingInteractRsp_CmdId>(
    OfferingInteractRsp_CmdId_descriptor(), name, value);
}
// ===================================================================

class PlayerOfferingData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerOfferingData) */ {
 public:
  PlayerOfferingData();
  virtual ~PlayerOfferingData();

  PlayerOfferingData(const PlayerOfferingData& from);

  inline PlayerOfferingData& operator=(const PlayerOfferingData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerOfferingData(PlayerOfferingData&& from) noexcept
    : PlayerOfferingData() {
    *this = ::std::move(from);
  }

  inline PlayerOfferingData& operator=(PlayerOfferingData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerOfferingData& default_instance();

  static inline const PlayerOfferingData* internal_default_instance() {
    return reinterpret_cast<const PlayerOfferingData*>(
               &_PlayerOfferingData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PlayerOfferingData* other);
  friend void swap(PlayerOfferingData& a, PlayerOfferingData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerOfferingData* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerOfferingData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerOfferingData& from);
  void MergeFrom(const PlayerOfferingData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerOfferingData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 taken_level_reward_list = 8;
  int taken_level_reward_list_size() const;
  void clear_taken_level_reward_list();
  static const int kTakenLevelRewardListFieldNumber = 8;
  ::google::protobuf::uint32 taken_level_reward_list(int index) const;
  void set_taken_level_reward_list(int index, ::google::protobuf::uint32 value);
  void add_taken_level_reward_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      taken_level_reward_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_taken_level_reward_list();

  // uint32 level = 12;
  void clear_level();
  static const int kLevelFieldNumber = 12;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 offering_id = 1;
  void clear_offering_id();
  static const int kOfferingIdFieldNumber = 1;
  ::google::protobuf::uint32 offering_id() const;
  void set_offering_id(::google::protobuf::uint32 value);

  // bool is_first_interact = 15;
  void clear_is_first_interact();
  static const int kIsFirstInteractFieldNumber = 15;
  bool is_first_interact() const;
  void set_is_first_interact(bool value);

  // bool is_new_max_level = 6;
  void clear_is_new_max_level();
  static const int kIsNewMaxLevelFieldNumber = 6;
  bool is_new_max_level() const;
  void set_is_new_max_level(bool value);

  // @@protoc_insertion_point(class_scope:proto.PlayerOfferingData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > taken_level_reward_list_;
  mutable int _taken_level_reward_list_cached_byte_size_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 offering_id_;
  bool is_first_interact_;
  bool is_new_max_level_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5foffering_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerOfferingDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerOfferingDataNotify) */ {
 public:
  PlayerOfferingDataNotify();
  virtual ~PlayerOfferingDataNotify();

  PlayerOfferingDataNotify(const PlayerOfferingDataNotify& from);

  inline PlayerOfferingDataNotify& operator=(const PlayerOfferingDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerOfferingDataNotify(PlayerOfferingDataNotify&& from) noexcept
    : PlayerOfferingDataNotify() {
    *this = ::std::move(from);
  }

  inline PlayerOfferingDataNotify& operator=(PlayerOfferingDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerOfferingDataNotify& default_instance();

  static inline const PlayerOfferingDataNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerOfferingDataNotify*>(
               &_PlayerOfferingDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PlayerOfferingDataNotify* other);
  friend void swap(PlayerOfferingDataNotify& a, PlayerOfferingDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerOfferingDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerOfferingDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerOfferingDataNotify& from);
  void MergeFrom(const PlayerOfferingDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerOfferingDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerOfferingDataNotify_CmdId CmdId;
  static const CmdId NONE =
    PlayerOfferingDataNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerOfferingDataNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerOfferingDataNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerOfferingDataNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerOfferingDataNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerOfferingDataNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerOfferingDataNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerOfferingDataNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerOfferingDataNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerOfferingDataNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerOfferingDataNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.PlayerOfferingData offering_data_list = 2;
  int offering_data_list_size() const;
  void clear_offering_data_list();
  static const int kOfferingDataListFieldNumber = 2;
  const ::proto::PlayerOfferingData& offering_data_list(int index) const;
  ::proto::PlayerOfferingData* mutable_offering_data_list(int index);
  ::proto::PlayerOfferingData* add_offering_data_list();
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerOfferingData >*
      mutable_offering_data_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::PlayerOfferingData >&
      offering_data_list() const;

  // @@protoc_insertion_point(class_scope:proto.PlayerOfferingDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerOfferingData > offering_data_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5foffering_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerOfferingReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerOfferingReq) */ {
 public:
  PlayerOfferingReq();
  virtual ~PlayerOfferingReq();

  PlayerOfferingReq(const PlayerOfferingReq& from);

  inline PlayerOfferingReq& operator=(const PlayerOfferingReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerOfferingReq(PlayerOfferingReq&& from) noexcept
    : PlayerOfferingReq() {
    *this = ::std::move(from);
  }

  inline PlayerOfferingReq& operator=(PlayerOfferingReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerOfferingReq& default_instance();

  static inline const PlayerOfferingReq* internal_default_instance() {
    return reinterpret_cast<const PlayerOfferingReq*>(
               &_PlayerOfferingReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PlayerOfferingReq* other);
  friend void swap(PlayerOfferingReq& a, PlayerOfferingReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerOfferingReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerOfferingReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerOfferingReq& from);
  void MergeFrom(const PlayerOfferingReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerOfferingReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerOfferingReq_CmdId CmdId;
  static const CmdId NONE =
    PlayerOfferingReq_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerOfferingReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerOfferingReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerOfferingReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    PlayerOfferingReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return PlayerOfferingReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerOfferingReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerOfferingReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerOfferingReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerOfferingReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerOfferingReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerOfferingReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 offering_id = 6;
  void clear_offering_id();
  static const int kOfferingIdFieldNumber = 6;
  ::google::protobuf::uint32 offering_id() const;
  void set_offering_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerOfferingReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 offering_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5foffering_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerOfferingRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerOfferingRsp) */ {
 public:
  PlayerOfferingRsp();
  virtual ~PlayerOfferingRsp();

  PlayerOfferingRsp(const PlayerOfferingRsp& from);

  inline PlayerOfferingRsp& operator=(const PlayerOfferingRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerOfferingRsp(PlayerOfferingRsp&& from) noexcept
    : PlayerOfferingRsp() {
    *this = ::std::move(from);
  }

  inline PlayerOfferingRsp& operator=(PlayerOfferingRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerOfferingRsp& default_instance();

  static inline const PlayerOfferingRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerOfferingRsp*>(
               &_PlayerOfferingRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(PlayerOfferingRsp* other);
  friend void swap(PlayerOfferingRsp& a, PlayerOfferingRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerOfferingRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerOfferingRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerOfferingRsp& from);
  void MergeFrom(const PlayerOfferingRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerOfferingRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerOfferingRsp_CmdId CmdId;
  static const CmdId NONE =
    PlayerOfferingRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerOfferingRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerOfferingRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerOfferingRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerOfferingRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerOfferingRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerOfferingRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerOfferingRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerOfferingRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerOfferingRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerOfferingRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ItemParam item_list = 7;
  int item_list_size() const;
  void clear_item_list();
  static const int kItemListFieldNumber = 7;
  const ::proto::ItemParam& item_list(int index) const;
  ::proto::ItemParam* mutable_item_list(int index);
  ::proto::ItemParam* add_item_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
      mutable_item_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
      item_list() const;

  // .proto.PlayerOfferingData offering_data = 10;
  bool has_offering_data() const;
  void clear_offering_data();
  static const int kOfferingDataFieldNumber = 10;
  const ::proto::PlayerOfferingData& offering_data() const;
  ::proto::PlayerOfferingData* mutable_offering_data();
  ::proto::PlayerOfferingData* release_offering_data();
  void set_allocated_offering_data(::proto::PlayerOfferingData* offering_data);

  // int32 retcode = 4;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerOfferingRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam > item_list_;
  ::proto::PlayerOfferingData* offering_data_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5foffering_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeOfferingLevelRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeOfferingLevelRewardReq) */ {
 public:
  TakeOfferingLevelRewardReq();
  virtual ~TakeOfferingLevelRewardReq();

  TakeOfferingLevelRewardReq(const TakeOfferingLevelRewardReq& from);

  inline TakeOfferingLevelRewardReq& operator=(const TakeOfferingLevelRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeOfferingLevelRewardReq(TakeOfferingLevelRewardReq&& from) noexcept
    : TakeOfferingLevelRewardReq() {
    *this = ::std::move(from);
  }

  inline TakeOfferingLevelRewardReq& operator=(TakeOfferingLevelRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeOfferingLevelRewardReq& default_instance();

  static inline const TakeOfferingLevelRewardReq* internal_default_instance() {
    return reinterpret_cast<const TakeOfferingLevelRewardReq*>(
               &_TakeOfferingLevelRewardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(TakeOfferingLevelRewardReq* other);
  friend void swap(TakeOfferingLevelRewardReq& a, TakeOfferingLevelRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeOfferingLevelRewardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeOfferingLevelRewardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeOfferingLevelRewardReq& from);
  void MergeFrom(const TakeOfferingLevelRewardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeOfferingLevelRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TakeOfferingLevelRewardReq_CmdId CmdId;
  static const CmdId NONE =
    TakeOfferingLevelRewardReq_CmdId_NONE;
  static const CmdId CMD_ID =
    TakeOfferingLevelRewardReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    TakeOfferingLevelRewardReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    TakeOfferingLevelRewardReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    TakeOfferingLevelRewardReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return TakeOfferingLevelRewardReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    TakeOfferingLevelRewardReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    TakeOfferingLevelRewardReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    TakeOfferingLevelRewardReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return TakeOfferingLevelRewardReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return TakeOfferingLevelRewardReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return TakeOfferingLevelRewardReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 level = 6;
  void clear_level();
  static const int kLevelFieldNumber = 6;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 offering_id = 11;
  void clear_offering_id();
  static const int kOfferingIdFieldNumber = 11;
  ::google::protobuf::uint32 offering_id() const;
  void set_offering_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeOfferingLevelRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 offering_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5foffering_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeOfferingLevelRewardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeOfferingLevelRewardRsp) */ {
 public:
  TakeOfferingLevelRewardRsp();
  virtual ~TakeOfferingLevelRewardRsp();

  TakeOfferingLevelRewardRsp(const TakeOfferingLevelRewardRsp& from);

  inline TakeOfferingLevelRewardRsp& operator=(const TakeOfferingLevelRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeOfferingLevelRewardRsp(TakeOfferingLevelRewardRsp&& from) noexcept
    : TakeOfferingLevelRewardRsp() {
    *this = ::std::move(from);
  }

  inline TakeOfferingLevelRewardRsp& operator=(TakeOfferingLevelRewardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeOfferingLevelRewardRsp& default_instance();

  static inline const TakeOfferingLevelRewardRsp* internal_default_instance() {
    return reinterpret_cast<const TakeOfferingLevelRewardRsp*>(
               &_TakeOfferingLevelRewardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(TakeOfferingLevelRewardRsp* other);
  friend void swap(TakeOfferingLevelRewardRsp& a, TakeOfferingLevelRewardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeOfferingLevelRewardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeOfferingLevelRewardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeOfferingLevelRewardRsp& from);
  void MergeFrom(const TakeOfferingLevelRewardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeOfferingLevelRewardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TakeOfferingLevelRewardRsp_CmdId CmdId;
  static const CmdId NONE =
    TakeOfferingLevelRewardRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    TakeOfferingLevelRewardRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    TakeOfferingLevelRewardRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    TakeOfferingLevelRewardRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return TakeOfferingLevelRewardRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    TakeOfferingLevelRewardRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    TakeOfferingLevelRewardRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    TakeOfferingLevelRewardRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return TakeOfferingLevelRewardRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return TakeOfferingLevelRewardRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return TakeOfferingLevelRewardRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ItemParam item_list = 2;
  int item_list_size() const;
  void clear_item_list();
  static const int kItemListFieldNumber = 2;
  const ::proto::ItemParam& item_list(int index) const;
  ::proto::ItemParam* mutable_item_list(int index);
  ::proto::ItemParam* add_item_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
      mutable_item_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
      item_list() const;

  // uint32 offering_id = 3;
  void clear_offering_id();
  static const int kOfferingIdFieldNumber = 3;
  ::google::protobuf::uint32 offering_id() const;
  void set_offering_id(::google::protobuf::uint32 value);

  // uint32 take_level = 4;
  void clear_take_level();
  static const int kTakeLevelFieldNumber = 4;
  ::google::protobuf::uint32 take_level() const;
  void set_take_level(::google::protobuf::uint32 value);

  // int32 retcode = 8;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 8;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeOfferingLevelRewardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam > item_list_;
  ::google::protobuf::uint32 offering_id_;
  ::google::protobuf::uint32 take_level_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5foffering_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OfferingInteractReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OfferingInteractReq) */ {
 public:
  OfferingInteractReq();
  virtual ~OfferingInteractReq();

  OfferingInteractReq(const OfferingInteractReq& from);

  inline OfferingInteractReq& operator=(const OfferingInteractReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfferingInteractReq(OfferingInteractReq&& from) noexcept
    : OfferingInteractReq() {
    *this = ::std::move(from);
  }

  inline OfferingInteractReq& operator=(OfferingInteractReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfferingInteractReq& default_instance();

  static inline const OfferingInteractReq* internal_default_instance() {
    return reinterpret_cast<const OfferingInteractReq*>(
               &_OfferingInteractReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(OfferingInteractReq* other);
  friend void swap(OfferingInteractReq& a, OfferingInteractReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfferingInteractReq* New() const PROTOBUF_FINAL { return New(NULL); }

  OfferingInteractReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfferingInteractReq& from);
  void MergeFrom(const OfferingInteractReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfferingInteractReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef OfferingInteractReq_CmdId CmdId;
  static const CmdId NONE =
    OfferingInteractReq_CmdId_NONE;
  static const CmdId CMD_ID =
    OfferingInteractReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    OfferingInteractReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    OfferingInteractReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    OfferingInteractReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return OfferingInteractReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    OfferingInteractReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    OfferingInteractReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    OfferingInteractReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return OfferingInteractReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return OfferingInteractReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return OfferingInteractReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 offering_id = 9;
  void clear_offering_id();
  static const int kOfferingIdFieldNumber = 9;
  ::google::protobuf::uint32 offering_id() const;
  void set_offering_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.OfferingInteractReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 offering_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5foffering_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OfferingInteractRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OfferingInteractRsp) */ {
 public:
  OfferingInteractRsp();
  virtual ~OfferingInteractRsp();

  OfferingInteractRsp(const OfferingInteractRsp& from);

  inline OfferingInteractRsp& operator=(const OfferingInteractRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfferingInteractRsp(OfferingInteractRsp&& from) noexcept
    : OfferingInteractRsp() {
    *this = ::std::move(from);
  }

  inline OfferingInteractRsp& operator=(OfferingInteractRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfferingInteractRsp& default_instance();

  static inline const OfferingInteractRsp* internal_default_instance() {
    return reinterpret_cast<const OfferingInteractRsp*>(
               &_OfferingInteractRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(OfferingInteractRsp* other);
  friend void swap(OfferingInteractRsp& a, OfferingInteractRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfferingInteractRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  OfferingInteractRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfferingInteractRsp& from);
  void MergeFrom(const OfferingInteractRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfferingInteractRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef OfferingInteractRsp_CmdId CmdId;
  static const CmdId NONE =
    OfferingInteractRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    OfferingInteractRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    OfferingInteractRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    OfferingInteractRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return OfferingInteractRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    OfferingInteractRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    OfferingInteractRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    OfferingInteractRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return OfferingInteractRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return OfferingInteractRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return OfferingInteractRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.PlayerOfferingData offering_data = 11;
  bool has_offering_data() const;
  void clear_offering_data();
  static const int kOfferingDataFieldNumber = 11;
  const ::proto::PlayerOfferingData& offering_data() const;
  ::proto::PlayerOfferingData* mutable_offering_data();
  ::proto::PlayerOfferingData* release_offering_data();
  void set_allocated_offering_data(::proto::PlayerOfferingData* offering_data);

  // int32 retcode = 12;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 12;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.OfferingInteractRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::PlayerOfferingData* offering_data_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5foffering_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================


// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::PlayerOfferingDataNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerOfferingDataNotify_CmdId>() {
  return ::proto::PlayerOfferingDataNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerOfferingReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerOfferingReq_CmdId>() {
  return ::proto::PlayerOfferingReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerOfferingRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerOfferingRsp_CmdId>() {
  return ::proto::PlayerOfferingRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::TakeOfferingLevelRewardReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TakeOfferingLevelRewardReq_CmdId>() {
  return ::proto::TakeOfferingLevelRewardReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::TakeOfferingLevelRewardRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TakeOfferingLevelRewardRsp_CmdId>() {
  return ::proto::TakeOfferingLevelRewardRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::OfferingInteractReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::OfferingInteractReq_CmdId>() {
  return ::proto::OfferingInteractReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::OfferingInteractRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::OfferingInteractRsp_CmdId>() {
  return ::proto::OfferingInteractRsp_CmdId_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5foffering_2eproto__INCLUDED
